// Tree Select

@import '../../style/themes/default';
@import '../../style/mixins/index';
@import './param';

@mixin tree-select {
  width: 100%;
  x-input {
    width: 100%;
  }
  &-multiple {
    .x-input-value-template-value {
      display: flex;
      align-items: center;
      margin-bottom: 0.125rem;
      flex-wrap: wrap;
      width: initial;
      height: initial !important;
      left: 0.125rem !important;
      > x-tag {
        display: inline-flex;
        margin-left: 0.0625rem;
        margin-top: 0.125rem;
        .x-tag {
          @include tag-size('big', $--x-height-large, $--x-padding-large);
          @include tag-size('large', $--x-height-medium, $--x-padding-medium);
          @include tag-size('medium', $--x-height-small, $--x-padding-small);
          @include tag-size('small', $--x-height-mini, $--x-padding-mini);
          @include tag-size('mini', 1.125rem, 0.125rem);
        }
      }
      > x-input {
        margin-top: 0.125rem;
        width: 5rem;
        .x-input {
          @include input-size('big', $--x-height-large, 0 $--x-padding-large);
          @include input-size('large', $--x-height-medium, 0 $--x-padding-medium);
          @include input-size('medium', $--x-height-small, 0 $--x-padding-small);
          @include input-size('small', $--x-height-mini, 0 $--x-padding-mini);
          @include input-size('mini', 1.125rem, 0 0.125rem);
        }
        .x-input-row > .x-input-input > input {
          background-color: transparent;
        }
      }
    }
  }
}

@mixin tree-select-portal {
  padding: 0.25rem;
  color: $--x-text;
  width: 100%;
  border-radius: $--x-border-portal-radius;
  box-shadow: $--x-box-shadow;
  position: relative;
  display: flex;
  flex-direction: column;
  background-color: $--x-background;
  overflow: hidden auto;
  max-height: calc(calc(#{$--x-tree-select-height} * 6) + calc(#{$--x-border-width} * 7));
  x-tree {
    width: 100%;
  }
  x-empty {
    margin: 1rem;
    display: block;
  }
}

@mixin tag-size($size, $height, $padding) {
  &-#{$size} {
    height: $height;
    line-height: $height;
    padding: 0 $padding;
    > .x-icon {
      right: calc(-#{$padding} / 2);
    }
  }
}

@mixin input-size($size, $height, $padding) {
  &-#{$size} {
    > .x-input-row > .x-input-input {
      > input,
      > .x-input-row-before:not(.x-input-row-before-template),
      > .x-input-row-after:not(.x-input-row-after-template),
      > .x-input-value-template-value {
        height: $height;
        line-height: $height;
        padding: $padding;
      }
      > .x-input-max-length {
        height: $height;
        line-height: $height;
      }
    }

    > .x-input-row {
      > .x-input-row-before:not(.x-input-row-before-template),
      > .x-input-row-after:not(.x-input-row-after-template) {
        height: $height;
        line-height: $height;
        padding: $padding;
      }
    }

    > label {
      height: $height;
      line-height: $height;
    }
  }
}
