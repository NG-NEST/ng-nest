// Timeline

@use 'sass:math';
@use '../../style/params/index.scss' as *;
@use './param.scss' as *;

@mixin timeline {
  & {
    display: block;
  }
  ul,
  li {
    margin: 0;
    padding: 0;
    list-style: none;
  }
  > ul {
    padding-left: math.div($x-timeline-icon-width, 2) - math.div($x-timeline-line-width, 2);
    > li {
      padding-bottom: 1rem;
      position: relative;
      &:last-child {
        .#{$x-timeline-prefix}-tail {
          border-left-color: transparent;
        }
      }
      &:first-child {
        .#{$x-timeline-prefix}-tail {
          top: 1.25rem;
        }
      }
    }
  }
  &-tail {
    position: absolute;
    height: 100%;
    border-left: $x-timeline-line-width solid $x-border;
    &-dashed {
      border-left-style: dashed;
    }
  }
  &-icon {
    position: absolute;
    background-color: $x-border;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    color: $x-white;
    width: $x-timeline-icon-width;
    height: $x-timeline-icon-width;
    border: 0.0625rem solid $x-background-100;
  }
  &-wrapper {
    position: relative;
  }
  &-label {
    display: flex;
    align-items: center;
    margin-bottom: 0.125rem;
    > x-link {
      margin-right: 0.325rem;
    }
  }
  &-content {
    color: $x-text-300;
  }
  &-time {
    font-size: $x-font-size;
    color: $x-text-400;
  }
  &-loading {
    .#{$x-timeline-prefix}-icon {
      color: $x-text-400;
      font-size: 1.25rem;
      background-color: transparent !important;
    }
  }
  &-left {
    .#{$x-timeline-prefix} {
      &-icon {
        left: math.div($x-timeline-line-width, 2) - math.div($x-timeline-icon-width, 2);
      }
      &-wrapper {
        padding-left: 1rem + math.div($x-timeline-icon-width, 2) - math.div($x-timeline-line-width, 2);
      }
    }
  }
  &-right {
    .#{$x-timeline-prefix} {
      &-icon {
        right: math.div($x-timeline-line-width, 2) - math.div($x-timeline-icon-width, 2);
      }
      &-wrapper {
        padding-right: 1rem + math.div($x-timeline-icon-width, 2) - math.div($x-timeline-line-width, 2);
        text-align: right;
      }
      &-tail {
        right: 0;
      }
      &-label {
        justify-content: flex-end;
      }
      &-content {
        text-align: right;
      }
    }
  }
  &-alternate {
    .#{$x-timeline-prefix} {
      &-icon {
        left: 50%;
        margin-left: 0 - math.div($x-timeline-icon-width, 2);
      }
      &-tail {
        left: 50%;
        margin-left: 0 - math.div($x-timeline-line-width, 2);
      }
    }
    > ul > li {
      &:nth-child(odd) {
        .#{$x-timeline-prefix} {
          &-wrapper {
            width: 50%;
            padding-right: 1rem + math.div($x-timeline-icon-width, 2) - math.div($x-timeline-line-width, 2);
            text-align: right;
          }
          &-label {
            justify-content: flex-end;
          }
          &-content {
            text-align: right;
          }
        }
      }
      &:nth-child(even) {
        .#{$x-timeline-prefix} {
          &-wrapper {
            left: 50%;
            width: 50%;
            padding-left: 1rem + math.div($x-timeline-icon-width, 2) - math.div($x-timeline-line-width, 2);
          }
        }
      }
    }
  }
  @include type('primary', $x-primary);
  @include type('success', $x-success);
  @include type('warning', $x-warning);
  @include type('danger', $x-danger);
  @include type('info', $x-info);

  @include size('big', 2.175rem);
  @include size('large', 1.875rem);
  @include size('medium', 1.675rem);
  @include size('small', 1.5rem);
  @include size('mini', 1.375rem);
}

@mixin type($type, $background-color) {
  &-#{$type} {
    background-color: $background-color;
  }
}

@mixin size($size, $width) {
  &-#{$size} {
    width: $width;
    height: $width;
    left: math.div($x-timeline-line-width, 2) - math.div($width, 2);
    font-size: $width - 0.625rem;
  }
}
