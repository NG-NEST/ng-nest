// Button

@import '../../style/themes/default';
@import '../../style/mixins/index';
@import './param';

@mixin button {
  position: relative;
  border: none;
  outline: none;
  border-radius: $--x-border-radius;
  font-size: $--x-font-size-small;
  text-align: center;
  background-clip: border-box;
  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  touch-action: manipulation;
  will-change: color, background-color, border, box-shadow;
  box-shadow: $--x-box-shadow;
  &:focus {
    outline: none;
  }
  > .x-icon {
    font-size: 1rem;
    vertical-align: -0.1875rem;
  }
  &.x-direction-row {
    > .x-icon {
      margin-right: 0.25rem;
      margin-left: -0.25rem;
    }
  }
  &.x-direction-row-reverse {
    > .x-icon {
      margin-right: -0.25rem;
      margin-left: 0.25rem;
    }
  }
  &-icon.x-direction-row,
  &-icon.x-direction-row-reverse {
    > .x-icon {
      margin-right: 0;
      margin-left: 0;
    }
  }
  &-loading {
    margin-right: 0.25rem;
    margin-left: -0.25rem;
    font-size: 1rem;
    vertical-align: -0.1875rem;
  }

  &-circular {
    width: 1rem;
    height: 1rem;
    animation: loading-rotate 2s linear infinite;
  }
  &-path {
    animation: loading-dash 1.5s ease-in-out infinite;
    stroke-dasharray: 90, 150;
    stroke-dashoffset: 0;
    stroke-width: 2;
    stroke-linecap: round;
  }
  &-transition {
    transition:
      color $--x-animation-duration-base ease-in-out,
      background-color $--x-animation-duration-base ease-in-out,
      border $--x-animation-duration-base ease-in-out,
      box-shadow $--x-animation-duration-base ease-in-out;
  }
  &-disabled {
    transform: none !important;
    opacity: 0.6;
  }
  &-round {
    border-radius: 5rem;
  }
  &-circle {
    border-radius: 50%;
    padding: 0 !important;
    &.x-size-big {
      width: $--x-height-big;
    }
    &.x-size-large {
      width: $--x-height-large;
    }
    &.x-size-medium {
      width: $--x-height-medium;
    }
    &.x-size-small {
      width: $--x-height-small;
    }
    &.x-size-mini {
      width: $--x-height-mini;
    }
    .#{$--x-button}-loading {
      margin-right: 0;
      margin-left: 0;
    }
  }
  &-icon-not-content {
    .#{$--x-button}-loading {
      margin-right: 0;
      margin-left: 0;
    }
  }
  &-only-icon,
  &-only-icon.#{$--x-button}-initial,
  &-text {
    border: none;
    background-color: transparent;
    box-shadow: none;
    &:hover,
    &:active {
      @include button-color($--x-button-hover, $--x-button-initial-hover-background, transparent);
    }
  }
  &-closable {
    color: $--x-text-400;
    box-shadow: none;
    background: none;
    &:hover {
      background: none;
      color: $--x-text;
    }
  }

  &-disabled.#{$--x-button}-activated.#{$--x-button}-initial {
    @include disabled($--x-primary-700, $--x-background, $--x-primary-700);
    &:hover,
    &:active {
      @include disabled($--x-primary-700, $--x-background, $--x-primary-700);
    }
  }
  &-disabled.#{$--x-button}-text,
  &-disabled.#{$--x-button}-only-icon {
    @include disabled($--x-button-disabled, transparent, transparent);
    &:hover,
    &:active {
      @include disabled($--x-button-disabled, transparent, transparent);
    }
  }

  @include size(big, $--x-height-big, 0 $--x-padding-big);
  @include size(large, $--x-height-large, 0 $--x-padding-large);
  @include size(medium, $--x-height-medium, 0 $--x-padding-medium);
  @include size(small, $--x-height-small, 0 $--x-padding-small);
  @include size(mini, $--x-height-mini, 0 $--x-padding-mini);
}

@mixin button-color($color, $background, $border) {
  color: #{$color};
  background-color: #{$background};
  border-color: #{$border};
  .#{$--x-button}-path {
    stroke: #{$color};
  }
}

@mixin button-type(
  $type,
  $color,
  $background,
  $border,
  $hover,
  $hover-background,
  $hover-border,
  $active,
  $active-background,
  $active-border,
  $disabled,
  $disabled-background,
  $disabled-border,
  $plain-color,
  $plain-background,
  $plain-border,
  $plain-hover,
  $plain-hover-background,
  $plain-hover-border,
  $plain-active,
  $plain-active-background,
  $plain-active-border,
  $plain-disabled,
  $plain-disabled-background,
  $plain-disabled-border,
  $box-shadow-color,
  $plain-box-shadow-color,
  $ripple-background
) {
  &-#{$type} {
    @include button-color($color, $background, $border);
    &:hover:not(.x-button-disabled):not(.x-button-activated),
    &.cdk-program-focused:not(.x-button-disabled),
    &.cdk-keyboard-focused:not(.x-button-disabled) {
      @include button-color($hover, $hover-background, $hover-border);
      box-shadow: $--x-box-shadow-hover;
    }
    &:active:not(.x-button-disabled) {
      @include button-color($active, $active-background, $active-border);
    }
    &.#{$--x-button}-disabled {
      @include disabled($disabled, $disabled-background, $disabled-border);
    }
    &-plain {
      @include button-color($plain-color, $plain-background, $plain-border);
      &:hover:not(.x-button-disabled):not(.x-button-activated),
      &.cdk-program-focused:not(.x-button-disabled),
      &.cdk-keyboard-focused:not(.x-button-disabled) {
        @include button-color($color, $plain-hover-background, $plain-hover-border);
      }
      &:active:not(.x-button-disabled) {
        @include button-color($color, $plain-active-background, $plain-active-border);
      }
      &.#{$--x-button}-disabled {
        @include disabled($plain-disabled, $plain-disabled-background, $plain-disabled-border);
      }
      &.#{$--x-button}-activated {
        z-index: 2;
        @include button-color($active, $active-background, $active-border);
      }
    }
    &-text {
      box-shadow: none;
      @include button-color($plain-color, transparent, $plain-border);
      &:hover:not(.x-button-disabled):not(.x-button-activated),
      &.cdk-program-focused:not(.x-button-disabled),
      &.cdk-keyboard-focused:not(.x-button-disabled) {
        box-shadow: none;
        @include button-color($plain-color, $plain-background, $plain-border);
      }
      &.#{$--x-button}-disabled {
        @include disabled($plain-disabled, transparent, $plain-disabled-border);
      }
    }
    &-flat {
      box-shadow: none;
      &:hover:not(.x-button-disabled):not(.x-button-activated),
      &.cdk-program-focused:not(.x-button-disabled),
      &.cdk-keyboard-focused:not(.x-button-disabled) {
        box-shadow: none;
      }
    }
    &.#{$--x-button}-activated {
      z-index: 2;
      @include button-color($active, $active-background, $active-border);
    }
    .x-ripple-element {
      background-color: $ripple-background;
    }
  }
}

@mixin disabled($color, $bg-color, $border-color) {
  color: $color;
  cursor: not-allowed;
  background-image: none;
  background-color: $bg-color;
  border-color: $border-color;
  box-shadow: none;
}

@mixin buttons {
  display: inline-flex;
  position: relative;

  &:not(.#{$--x-buttons}-space) {
    > #{$--x-button} {
      .#{$--x-button} {
        border-radius: 0;
        position: relative;
        box-shadow: none !important;
        &-round {
          border-radius: 0;
        }
        &:focus,
        &-activated {
          z-index: 1;
        }
      }
      &:hover {
        z-index: 1;
      }
      &:active {
        z-index: 2;
      }
      &:first-child {
        .#{$--x-button} {
          border-top-left-radius: $--x-border-radius;
          border-bottom-left-radius: $--x-border-radius;
        }
        .#{$--x-button}-round {
          border-top-left-radius: 5rem;
          border-bottom-left-radius: 5rem;
        }
      }
      &:last-child {
        .#{$--x-button} {
          border-top-right-radius: $--x-border-radius;
          border-bottom-right-radius: $--x-border-radius;
        }
        .#{$--x-button}-round {
          border-top-right-radius: 5rem;
          border-bottom-right-radius: 5rem;
        }
      }
    }
  }
  &-hiddenBorder {
    > #{$--x-button} {
      .#{$--x-button} {
        border: none;
        padding: 0 $--x-padding-small;
        background-color: transparent;
        box-shadow: none !important;
        &-icon {
          > .x-icon {
            font-size: 1.125rem;
          }
          &:hover {
            color: $--x-button-primary;
          }
        }
      }
    }
  }
  &-box-shadow:not(.#{$--x-buttons}-space) {
    border-radius: $--x-border-radius;
    box-shadow: $--x-box-shadow;
  }
  &-round:not(.#{$--x-buttons}-space) {
    border-radius: 5rem;
  }
}

@mixin buttons-type($type) {
  > #{$--x-button} {
    &:not(:first-child) {
      > .#{$--x-button}-#{$type} {
        border-left-color: rgba(255, 255, 255, 0.2);
      }
    }
  }
}

@keyframes loading-rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes loading-dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -2.5rem;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -7.5rem;
  }
}
