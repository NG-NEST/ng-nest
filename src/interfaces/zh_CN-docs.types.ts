/* DO NOT EDIT, file generated by ng-nest */
import { AppProp } from "./core.interface";

export const zh_CN: {[key: string]: AppProp} = {
  "XBadgeAnimation": {
    "type": "const",
    "label": "Badge 动画",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XBadgeAnimation",
    "value": "trigger('x-badge-animation', [transition(':enter', [style({ opacity: 0, transform: 'scale(0) translate(50%, -50%)' }),animate(XDURATION_SLOW_EASE_IN,style({opacity: 1,transform: 'scale(1) translate(50%, -50%)'}))]),transition(':leave', [style({ opacity: 1, transform: 'scale(1) translate(50%, -50%)' }),animate(XDURATION_SLOW_EASE_OUT,style({opacity: 0,transform: 'scale(0) translate(50%, -50%)'}))])])"
  },
  "XConnectBaseAnimation": {
    "type": "const",
    "label": "弹框连接时的动画，只处理 Y 轴",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XConnectBaseAnimation",
    "value": "trigger('x-connect-base-animation', [transition(':enter', [style({ opacity: 0, transform: 'scaleY(0.8)' }), animate(XDURATION_FAST_EASE_IN)]),transition(':leave', [animate(XDURATION_FAST_EASE_OUT, style({ opacity: 0 }))])])"
  },
  "XDuration": {
    "type": "enum",
    "label": "动画执行时间",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDuration",
    "value": "{Slow = '0.3s',Base = '0.2s',Fast = '0.1s'}"
  },
  "XMoveAnimation": {
    "type": "const",
    "label": "移入移出动画",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMoveAnimation",
    "value": "trigger('x-move-animation', [transition('void => top-start, void => top, void => top-end, void => center', [style({transform: 'translateY(-200%)',opacity: 0}),animate(`${XDuration.Base}`,style({transform: 'translateY(0%)',opacity: 1}))]),transition('top-start => void, top => void, top-end => void, center => void', [style({transform: 'translateY(0%)',opacity: 1,height: '*'}),animate(`${XDuration.Base}`,style({transform: 'translateY(-200%)',opacity: 0,height: 0}))]),transition('void => left', [style({transform: 'translateX(-30%)',opacity: 0}),animate(`${XDuration.Base}`,style({transform: 'translateX(0%)',opacity: 1}))]),transition('left => void', [style({transform: 'translateX(0%)',opacity: 1,height: '*'}),animate(`${XDuration.Base}`,style({transform: 'translateX(-30%)',opacity: 0,height: 0}))]),transition('void => right', [style({transform: 'translateX(30%)',opacity: 0}),animate(`${XDuration.Base}`,style({transform: 'translateX(0%)',opacity: 1}))]),transition('right => void', [style({transform: 'translateX(0%)',opacity: 1,height: '*'}),animate(`${XDuration.Base}`,style({transform: 'translateX(30%)',opacity: 0,height: 0}))]),transition('void => bottom-start, void => bottom, void => bottom-end', [style({transform: 'translateY(200%)',opacity: 0,height: 0}),animate(`${XDuration.Base}`,style({transform: 'translateY(0%)',opacity: 1,height: '*'}))]),transition('bottom-start => void, bottom => void, bottom-end => void', [style({transform: 'translateY(0%)',opacity: 1}),animate(`${XDuration.Base}`,style({transform: 'translateY(200%)',opacity: 0}))])])"
  },
  "XConfig": {
    "type": "interface",
    "label": "组件和主题全局配置信息",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "components",
        "type": "XComponentConfig",
        "label": "组件配置信息",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "components",
        "propType": "",
        "example": ""
      },
      {
        "name": "theme",
        "type": "XTheme",
        "label": "主题全配置信息",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "theme",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XConfig"
  },
  "XComponentConfig": {
    "type": "interface",
    "label": "组件全局配置",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XComponentConfig"
  },
  "XChunk<T>": {
    "type": "function",
    "label": "该函数用于将给定的数组拆分成多个小数组",
    "description": "每个小数组的长度由函数的第二个参数指定，默认为 1。\n如果给定的数组为空或者小数组长度小于等于 0，则函数返回一个空数组。\n函数通过循环遍历给定的数组，并使用 slice 方法将数组拆分成小数组，然后将小数组添加到结果数组中，最后返回结果数组。",
    "example": "",
    "properties": [],
    "name": "XChunk<T>",
    "params": {
      "array": "Array<T>"
    },
    "returnType": "Array<Array<T>>"
  },
  "XCloneDeep": {
    "type": "function",
    "label": "该函数是一个深拷贝函数，用于克隆一个对象或数组",
    "description": "它会递归地复制对象的所有属性，包括嵌套对象和数组，生成一个全新的独立副本。\n对于非对象和非数组类型的值，直接返回该值。\n函数接受一个参数 value，表示需要进行深拷贝的值。\n首先创建一个空的结果对象 result，如果 value 是数组，则 result 也是一个空数组。\n遍历 value 的所有属性，如果属性是对象，则递归调用 XCloneDeep 函数进行深拷贝，并将结果赋值给 result 对应的属性。\n最后返回 result，即深拷贝后的对象或数组。",
    "example": "",
    "properties": [],
    "name": "XCloneDeep",
    "params": {
      "value": "any"
    },
    "returnType": "any"
  },
  "XToDataConvert<T>": {
    "type": "function",
    "label": "转换 value 为指定的 list 数据 [{ label: any; id: any }, ....]",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XToDataConvert<T>",
    "params": {
      "value": "XData<T>"
    },
    "returnType": "XData<T>"
  },
  "XSetData<T>": {
    "type": "function",
    "label": "根据 data 的类型获取实际的数据",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSetData<T>",
    "params": {
      "data": "XData<T>",
      "unSubject": "Subject<void>",
      "funcParam": "any"
    },
    "returnType": "Observable<T[]>"
  },
  "XGetChildren<T extends XParentIdentityProperty<T>>": {
    "type": "function",
    "label": "根据 id、pid 获取子节点",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XGetChildren<T extends XParentIdentityProperty<T>>",
    "params": {
      "nodes": "T[]",
      "node": "T",
      "level": "number"
    },
    "returnType": "T"
  },
  "XInvertKeyValues": {
    "type": "function",
    "label": "将对象键值对反转",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInvertKeyValues",
    "params": {
      "obj": "any"
    },
    "returnType": "Map<any, any>"
  },
  "XClearClass": {
    "type": "function",
    "label": "设置样式名称为 false",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XClearClass",
    "params": {
      "classMaps": "XClassMap[]"
    },
    "returnType": "void"
  },
  "XPropDecorator": {
    "type": "type",
    "label": "属性装饰器返回类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPropDecorator",
    "value": "(target: any, propName: string) => void"
  },
  "XInputBoolean": {
    "type": "function",
    "label": "创建 XInputBoolean 属性装饰器",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputBoolean",
    "params": {},
    "returnType": "XPropDecorator"
  },
  "XInputNumber": {
    "type": "function",
    "label": "创建 XInputNumber 属性装饰器",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputNumber",
    "params": {},
    "returnType": "XPropDecorator"
  },
  "XDataConvert": {
    "type": "function",
    "label": "创建 XDataConvert 属性装饰器",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDataConvert",
    "params": {},
    "returnType": "XPropDecorator"
  },
  "XClamp": {
    "type": "function",
    "label": "限制给定数值 value 的范围",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XClamp",
    "params": {
      "value": "number",
      "min": "number",
      "max": "number"
    },
    "returnType": "number"
  },
  "XDate": {
    "type": "type",
    "label": "日期类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDate",
    "value": "string | Date | number"
  },
  "XToDate": {
    "type": "function",
    "label": "转换 Date",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XToDate",
    "params": {
      "date": "XDate"
    },
    "returnType": "Date"
  },
  "XAddMilliseconds": {
    "type": "function",
    "label": "日期添加毫秒数，负数为减少",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAddMilliseconds",
    "params": {
      "date": "XDate",
      "amount": "number"
    },
    "returnType": "Date"
  },
  "XAddSeconds": {
    "type": "function",
    "label": "日期添加秒数，负数为减少",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAddSeconds",
    "params": {
      "date": "XDate",
      "amount": "number"
    },
    "returnType": "Date"
  },
  "XAddMinutes": {
    "type": "function",
    "label": "日期添加分钟数，负数为减少",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAddMinutes",
    "params": {
      "date": "XDate",
      "amount": "number"
    },
    "returnType": "Date"
  },
  "XAddHours": {
    "type": "function",
    "label": "日期添加小时数，负数为减少",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAddHours",
    "params": {
      "date": "XDate",
      "amount": "number"
    },
    "returnType": "Date"
  },
  "XAddDays": {
    "type": "function",
    "label": "日期添加天数，负数为减少",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAddDays",
    "params": {
      "date": "XDate",
      "amount": "number"
    },
    "returnType": "Date"
  },
  "XAddMonths": {
    "type": "function",
    "label": "日期添加月数，负数为减少",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAddMonths",
    "params": {
      "date": "XDate",
      "amount": "number"
    },
    "returnType": "Date"
  },
  "XAddYears": {
    "type": "function",
    "label": "日期添加年数，负数为减少",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAddYears",
    "params": {
      "date": "XDate",
      "amount": "number"
    },
    "returnType": "Date"
  },
  "XDateWeek": {
    "type": "function",
    "label": "获取给定日期的 ISO 周数",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateWeek",
    "params": {
      "date": "XDate"
    },
    "returnType": "number | undefined"
  },
  "XDateWeekYear": {
    "type": "function",
    "label": "获取指定日期的 ISO 周年份",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateWeekYear",
    "params": {
      "date": "XDate"
    },
    "returnType": "number | undefined"
  },
  "XDateYearWeek": {
    "type": "function",
    "label": "获取指定日期的年份和周数",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateYearWeek",
    "params": {
      "date": "XDate"
    },
    "returnType": "string"
  },
  "XDateYearQuarter": {
    "type": "function",
    "label": "获取指定日期的年份和季度",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateYearQuarter",
    "params": {
      "date": "XDate"
    },
    "returnType": "string"
  },
  "XDateQuarter": {
    "type": "function",
    "label": "获取指定日期所属的季度",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateQuarter",
    "params": {
      "date": "XDate"
    },
    "returnType": "string"
  },
  "XDrop<T>": {
    "type": "function",
    "label": "通过参数 n 来截取数组",
    "description": "如果 n 未定义或为 0，则返回与原数组相同的数组\n如果原数组长度小于 1 或小于等于 n 的绝对值，则返回一个空数组\n如果 n 大于 0，则截取从第 n 个元素开始到数组末尾的子数组\n如果 n 小于等于 0，则截取从第 0 个元素到倒数第 n 个元素",
    "example": "",
    "properties": [],
    "name": "XDrop<T>",
    "params": {
      "array": "Array<T>"
    },
    "returnType": "Array<T>"
  },
  "XSetFlex": {
    "type": "function",
    "label": "用于设置元素的 flex 样式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSetFlex",
    "params": {
      "ele": "Element",
      "renderer": "Renderer2"
    },
    "returnType": "string[]"
  },
  "XGroupBy<T>": {
    "type": "function",
    "label": "根据属性 name 来对数组分组",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XGroupBy<T>",
    "params": {
      "array": "T[]",
      "name": "string"
    },
    "returnType": "Array<Array<T>>"
  },
  "XGuid": {
    "type": "function",
    "label": "生成 GUID",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XGuid",
    "params": {},
    "returnType": "string"
  },
  "XHasIn": {
    "type": "function",
    "label": "判断一个对象是否包含指定的属性",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XHasIn",
    "params": {
      "object": "Object",
      "key": "string"
    },
    "returnType": "boolean"
  },
  "XOrderBy<T>": {
    "type": "function",
    "label": "根据指定元素来排序",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XOrderBy<T>",
    "params": {
      "collection": "Array<T>",
      "iteratees": "Array<string>"
    },
    "returnType": "Array<T>"
  },
  "XParentPath": {
    "type": "function",
    "label": "获取元素的父节点路径",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XParentPath",
    "params": {
      "ele": "HTMLElement"
    },
    "returnType": "string[]"
  },
  "XParents": {
    "type": "function",
    "label": "获取元素的父元素路径",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XParents",
    "params": {
      "ele": "HTMLElement"
    },
    "returnType": "HTMLElement[]"
  },
  "XProperty": {
    "type": "class",
    "label": "组件公共属性",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "classMap",
        "type": "XClassMap",
        "label": "样式映射",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "classMap",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XProperty"
  },
  "XRemove<T>": {
    "type": "function",
    "label": "从数组中移除满足条件的元素，并返回被移除的元素组成的数组",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRemove<T>",
    "params": {
      "array": "Array<T>",
      "value": "T"
    },
    "returnType": "Array<T>"
  },
  "XResizeObserver": {
    "type": "type",
    "label": "监听元素大小边界尺寸的变化",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XResizeObserver",
    "value": "ResizeObserver | null"
  },
  "XResizeObserverEntry": {
    "type": "type",
    "label": "ResizeObserver 回调函数参数的对象",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XResizeObserverEntry",
    "value": "ResizeObserverEntry | null"
  },
  "XResize": {
    "type": "function",
    "label": "这个函数的功能是创建一个Observable，用于监听多个元素的尺寸变化",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XResize",
    "params": {
      "element": "Element[]",
      "entry": "XResizeObserverEntry"
    },
    "returnType": "Observable<{ entry: XResizeObserverEntry; resizeObserver: XResizeObserver }>"
  },
  "XData<T>": {
    "type": "type",
    "label": "data 数据类型",
    "description": "通用的泛型数据类型，一般是指数组、可订阅对象并且流数据为数组类型、函数等",
    "example": "",
    "properties": [],
    "name": "XData<T>",
    "value": "T[] | Observable<T[] | any[]> | any[] | Function"
  },
  "XBoolean": {
    "type": "type",
    "label": "boolean 数据类型",
    "description": "此类型作为组件的输入参数，一般会配合 `@XInputBoolean()` 装饰器来使用，转换成 true 或 false",
    "example": "```html\n// true\n<my-com disabled></my-com>\n<my-com disabled=\"true\"></my-com>\n<my-com [disabled]=\"true\"></my-com>\n\n// false\n<my-com disabled=\"false\"></my-com>\n<my-com [disabled]=\"false\"></my-com>\n```\n",
    "properties": [],
    "name": "XBoolean",
    "value": "boolean | string"
  },
  "XNumber": {
    "type": "type",
    "label": "number 数据类型",
    "description": "此类型作为组件的输入参数，一般会配合 `@XInputNumber()` 装饰器来使用，转换成数字类型",
    "example": "",
    "properties": [],
    "name": "XNumber",
    "value": "number | string"
  },
  "XTemplate": {
    "type": "type",
    "label": "模板类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTemplate",
    "value": "string | number | Date | TemplateRef<any>"
  },
  "XTypeFunc": {
    "type": "type",
    "label": "函数返回类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTypeFunc",
    "value": "(object: any) => boolean"
  },
  "XIsType": {
    "type": "function",
    "label": "类型判断",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsType",
    "params": {
      "type": "string"
    },
    "returnType": "XTypeFunc"
  },
  "XIsChange": {
    "type": "function",
    "label": "值改变判断",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsChange",
    "params": {
      "changes": "SimpleChange[]"
    },
    "returnType": "boolean"
  },
  "XIsString": {
    "type": "function",
    "label": "判断给定的值是否为字符串类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsString",
    "params": {
      "value": "any"
    },
    "returnType": "value is string"
  },
  "XIsArray": {
    "type": "function",
    "label": "判断给定的值是否为数组类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsArray",
    "params": {
      "value": "any"
    },
    "returnType": "value is Array<any>"
  },
  "XIsNumber": {
    "type": "function",
    "label": "判断给定的值是否为数字类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsNumber",
    "params": {
      "value": "any"
    },
    "returnType": "value is number"
  },
  "XIsBoolean": {
    "type": "function",
    "label": "判断给定的值是否为布尔类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsBoolean",
    "params": {
      "value": "any"
    },
    "returnType": "value is boolean"
  },
  "XIsObject<T>": {
    "type": "function",
    "label": "判断给定的值是否为对象类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsObject<T>",
    "params": {
      "value": "any"
    },
    "returnType": "value is T"
  },
  "XIsNull": {
    "type": "function",
    "label": "判断给定的值是否为 null 类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsNull",
    "params": {
      "value": "any"
    },
    "returnType": "value is null"
  },
  "XIsFunction": {
    "type": "function",
    "label": "判断给定的值是否为函数类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsFunction",
    "params": {
      "value": "any"
    },
    "returnType": "value is Function"
  },
  "XIsDate": {
    "type": "function",
    "label": "判断给定的值是否为日期类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsDate",
    "params": {
      "value": "any"
    },
    "returnType": "value is Date"
  },
  "XIsRegExp": {
    "type": "function",
    "label": "判断给定的值是否为正则表达式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsRegExp",
    "params": {
      "value": "any"
    },
    "returnType": "value is RegExp"
  },
  "XIsUndefined": {
    "type": "function",
    "label": "判断给定的值是否为 undefined",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsUndefined",
    "params": {
      "value": "any"
    },
    "returnType": "value is undefined"
  },
  "XIsValue<T>": {
    "type": "function",
    "label": "判断给定的值是否为字符串、数字、布尔值或日期",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsValue<T>",
    "params": {
      "object": "any"
    },
    "returnType": "object is T"
  },
  "XIsEmpty": {
    "type": "function",
    "label": "判断一个对象是否为空",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsEmpty",
    "params": {},
    "returnType": "any)"
  },
  "XIsValueArray<T>": {
    "type": "function",
    "label": "判断给定的对象是否为非空数组",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsValueArray<T>",
    "params": {
      "object": "any"
    },
    "returnType": "object is T"
  },
  "XIsObjectArray<T>": {
    "type": "function",
    "label": "判断给定的对象是否为非空对象数组",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsObjectArray<T>",
    "params": {
      "object": "any"
    },
    "returnType": "object is T"
  },
  "XIsObservable<T>": {
    "type": "function",
    "label": "判断给定的对象是否为 Observable",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsObservable<T>",
    "params": {
      "object": "any"
    },
    "returnType": "object is Observable<T>"
  },
  "XIsTemplateRef<T>": {
    "type": "function",
    "label": "判断给定的对象是否为 TemplateRef",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsTemplateRef<T>",
    "params": {
      "object": "any"
    },
    "returnType": "object is TemplateRef<T>"
  },
  "XIsXTemplate": {
    "type": "function",
    "label": "判断给定的对象是否为 XTemplateRef",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsXTemplate",
    "params": {
      "object": "any"
    },
    "returnType": "object is XTemplate"
  },
  "XIdentityProperty": {
    "type": "interface",
    "label": "标识对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "id",
        "type": "any",
        "label": "编码",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "id",
        "propType": "",
        "example": ""
      },
      {
        "name": "label",
        "type": "any",
        "label": "标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "label",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XIdentityProperty"
  },
  "XParentIdentityProperty<T>": {
    "type": "interface",
    "label": "父节点标识对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "pid",
        "type": "any",
        "label": "父节点编码",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "pid",
        "propType": "",
        "example": ""
      },
      {
        "name": "level",
        "type": "number",
        "label": "层级",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "level",
        "propType": "",
        "example": ""
      },
      {
        "name": "leaf",
        "type": "boolean",
        "label": "叶子节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "leaf",
        "propType": "",
        "example": ""
      },
      {
        "name": "children",
        "type": "T[]",
        "label": "子节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "children",
        "propType": "",
        "example": ""
      },
      {
        "name": "childrenLoaded",
        "type": "boolean",
        "label": "子节点已加载过",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "childrenLoaded",
        "propType": "",
        "example": ""
      },
      {
        "name": "selected",
        "type": "boolean",
        "label": "选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "selected",
        "propType": "",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "open",
        "type": "boolean",
        "label": "展开",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "open",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XParentIdentityProperty<T>",
    "extends": "XIdentityProperty"
  },
  "XIdentity": {
    "type": "class",
    "label": "标识对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "id",
        "type": "any",
        "label": "编码",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "id",
        "propType": "",
        "example": ""
      },
      {
        "name": "label",
        "type": "any",
        "label": "标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "label",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XIdentity"
  },
  "XPositionLeftRight": {
    "type": "type",
    "label": "方位 左右",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPositionLeftRight",
    "value": "'left' | 'right'"
  },
  "XPositionTopBottom": {
    "type": "type",
    "label": "方位 上下",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPositionTopBottom",
    "value": "'top' | 'bottom'"
  },
  "XPosition": {
    "type": "type",
    "label": "方位",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPosition",
    "value": "XPositionTopBottom | XPositionLeftRight"
  },
  "XType": {
    "type": "type",
    "label": "风格类型",
    "description": "- `'initial'` : 默认\n- `'primary'` : 主要\n- `'success'` : 成功\n- `'info'` : 信息\n- `'warning'` : 警告\n- `'danger'` : 危险\n- `'text'` : 文本",
    "example": "",
    "properties": [],
    "name": "XType",
    "value": "'initial' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text'"
  },
  "XStatus": {
    "type": "type",
    "label": "状态类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStatus",
    "value": "'success' | 'info' | 'warning' | 'error' | 'loading'"
  },
  "XClassMap": {
    "type": "type",
    "label": "样式名映射类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XClassMap",
    "value": "{ [property: string]: boolean }"
  },
  "XStyleMap": {
    "type": "type",
    "label": "样式映射类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStyleMap",
    "value": "{ [property: string]: any }"
  },
  "XEffect": {
    "type": "type",
    "label": "样式主题",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XEffect",
    "value": "'light' | 'dark' | 'white'"
  },
  "XStyle": {
    "type": "type",
    "label": "样式属性",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStyle",
    "value": "{ [property: string]: any }"
  },
  "XSize": {
    "type": "type",
    "label": "尺寸",
    "description": "- `'big'` : 超大\n- `'large'` : 大型\n- `'medium'` : 中等\n- `'small'` : 小型\n- `'mini'` : 迷你",
    "example": "",
    "properties": [],
    "name": "XSize",
    "value": "'big' | 'large' | 'medium' | 'small' | 'mini'"
  },
  "XResponseSize": {
    "type": "type",
    "label": "响应尺寸",
    "description": "- `xs` <768px\n- `sm` ≥768px\n- `md` ≥992px\n- `lg` ≥1200px\n- `xl` ≥1920px",
    "example": "",
    "properties": [],
    "name": "XResponseSize",
    "value": "{ xs?: number; sm?: number; md?: number; lg?: number; xl?: number }"
  },
  "XJustify": {
    "type": "type",
    "label": "flex 布局下的子元素水平排列方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XJustify",
    "value": "'start' | 'end' | 'center' | 'space-around' | 'space-between'"
  },
  "XAlign": {
    "type": "type",
    "label": "flex 布局下的子元素垂直排列方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAlign",
    "value": "'start' | 'center' | 'end'"
  },
  "XDirection": {
    "type": "type",
    "label": "flex 布局下的子元素排列方向",
    "description": "- `'column'` : 将 flex 项目从上到下垂直排列，就像列一样\n- `'column-reverse'` : 与 `'column'` 相反，将 flex 项目从下到上垂直排列\n- `'row'` : 将 flex 项目从左到右水平排列，就像行一样\n- `'row-reverse'` : 与 `'row'` 相反，将 flex 项目从右到左水平排列",
    "example": "",
    "properties": [],
    "name": "XDirection",
    "value": "'column' | 'column-reverse' | 'row' | 'row-reverse'"
  },
  "XPlacement": {
    "type": "type",
    "label": "相对与连接元素的位置",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPlacement",
    "value": "XPosition | XCorner | 'left-start' | 'left-end' | 'right-start' | 'right-end'"
  },
  "XCorner": {
    "type": "type",
    "label": "四个角落",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCorner",
    "value": "'top-start' | 'top-end' | 'bottom-start' | 'bottom-end'"
  },
  "XPlace": {
    "type": "type",
    "label": "九宫格方位",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPlace",
    "value": "XPosition | XCorner | 'center'"
  },
  "XShape": {
    "type": "type",
    "label": "形状",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XShape",
    "value": "'circle' | 'square'"
  },
  "XFit": {
    "type": "type",
    "label": "适应方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFit",
    "value": "'fill' | 'contain' | 'cover' | 'none' | 'scale-down'"
  },
  "XShadow": {
    "type": "type",
    "label": "阴影显示配置",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XShadow",
    "value": "'always' | 'hover' | 'never'"
  },
  "XTrigger": {
    "type": "type",
    "label": "切换方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTrigger",
    "value": "'hover' | 'click'"
  },
  "XDisplayDirection": {
    "type": "type",
    "label": "展示的方向",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDisplayDirection",
    "value": "'horizontal' | 'vertical'"
  },
  "XId": {
    "type": "interface",
    "label": "标识",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "id",
        "type": "string | number",
        "label": "标识",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "id",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XId"
  },
  "XResultList<Entity": {
    "type": "interface",
    "label": "列表返回数据",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "list",
        "type": "Entity[]",
        "label": "列表数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "list",
        "propType": "",
        "example": ""
      },
      {
        "name": "total",
        "type": "number",
        "label": "总数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "total",
        "propType": "",
        "example": ""
      },
      {
        "name": "query",
        "type": "XQuery",
        "label": "查询条件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "query",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XResultList<Entity",
    "extends": "XId>"
  },
  "XQuery": {
    "type": "interface",
    "label": "查询条件",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "index",
        "type": "number",
        "label": "第几页",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "index",
        "propType": "",
        "example": ""
      },
      {
        "name": "size",
        "type": "number",
        "label": "每页条数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "size",
        "propType": "",
        "example": ""
      },
      {
        "name": "sort",
        "type": "XSort[]",
        "label": "排序规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "sort",
        "propType": "",
        "example": ""
      },
      {
        "name": "filter",
        "type": "XFilter[]",
        "label": "过滤规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "filter",
        "propType": "",
        "example": ""
      },
      {
        "name": "group",
        "type": "string",
        "label": "分组规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "group",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XQuery"
  },
  "XFilter": {
    "type": "interface",
    "label": "过滤规则",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "field",
        "type": "string",
        "label": "过滤属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "field",
        "propType": "",
        "example": ""
      },
      {
        "name": "value",
        "type": "string",
        "label": "属性值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "value",
        "propType": "",
        "example": ""
      },
      {
        "name": "operation",
        "type": "XOperation",
        "label": "比较符号",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "operation",
        "propType": "",
        "example": ""
      },
      {
        "name": "relation",
        "type": "string",
        "label": "关联子对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "relation",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XFilter"
  },
  "XOperation": {
    "type": "type",
    "label": "比较符号",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XOperation",
    "value": "'%' | '=' | '>' | '>=' | '<' | '<='"
  },
  "XSort": {
    "type": "interface",
    "label": "分组数据",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "count",
        "type": "number",
        "label": "总数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "count",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XSort",
    "extends": "XFilter"
  },
  "XRGBColor": {
    "type": "interface",
    "label": "RGB 颜色值",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "r",
        "type": "number",
        "label": "红",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "r",
        "propType": "",
        "example": ""
      },
      {
        "name": "g",
        "type": "number",
        "label": "绿",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "g",
        "propType": "",
        "example": ""
      },
      {
        "name": "b",
        "type": "number",
        "label": "蓝",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "b",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XRGBColor"
  },
  "mixColors": {
    "type": "function",
    "label": "根据权重混合2种颜色",
    "description": "",
    "example": "",
    "properties": [],
    "name": "mixColors",
    "params": {
      "color1": "string",
      "color2": "string",
      "weight": "number"
    },
    "returnType": "XRGBColor"
  },
  "toHex": {
    "type": "function",
    "label": "RGB 颜色转换为 Hex",
    "description": "",
    "example": "",
    "properties": [],
    "name": "toHex",
    "params": {
      "r": "number",
      "g": "number",
      "b": "number"
    },
    "returnType": "string"
  },
  "toRgb": {
    "type": "function",
    "label": "Hex 颜色转换为 RGB",
    "description": "",
    "example": "",
    "properties": [],
    "name": "toRgb",
    "params": {
      "hex": "string"
    },
    "returnType": "XRGBColor"
  },
  "XIsNotNil<T>": {
    "type": "function",
    "label": "判断值不为 null 或 undefined",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsNotNil<T>",
    "params": {
      "value": "T"
    },
    "returnType": "value is NonNullable<T>"
  },
  "XIsNil": {
    "type": "function",
    "label": "判断值为 null 或 undefined",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIsNil",
    "params": {
      "value": "unknown"
    },
    "returnType": "value is null | undefined"
  },
  "XComputedStyle": {
    "type": "function",
    "label": "获取元素的指定样式的计算值",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XComputedStyle",
    "params": {
      "element": "HTMLElement",
      "style": "string"
    },
    "returnType": "string"
  },
  "XComputed": {
    "type": "function",
    "label": "获取元素的计算样式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XComputed",
    "params": {
      "element": "HTMLElement"
    },
    "returnType": "CSSStyleDeclaration"
  },
  "XRemoveNgTag": {
    "type": "function",
    "label": "删除当前标签，保留内容",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRemoveNgTag",
    "params": {
      "nativeElement": "HTMLElement"
    },
    "returnType": "void"
  },
  "XStripTags": {
    "type": "function",
    "label": "去除 HTML 标签",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStripTags",
    "params": {
      "text": "string",
      "usefulTags": "any[]"
    },
    "returnType": "string"
  },
  "XWarnSVGTagNotFound": {
    "type": "function",
    "label": "svg 标签不存在的警告信息",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XWarnSVGTagNotFound",
    "params": {},
    "returnType": ""
  },
  "XWarnIconTypeNotFound": {
    "type": "function",
    "label": "icon 不存在的警告信息",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XWarnIconTypeNotFound",
    "params": {},
    "returnType": ""
  },
  "XFillDefault": {
    "type": "function",
    "label": "填充默认值",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFillDefault",
    "params": {
      "property": "string"
    },
    "returnType": "any })"
  },
  "XAffixPrefix": {
    "type": "const",
    "label": "Affix",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAffixPrefix",
    "selector": "x-affix",
    "decorator": "component",
    "value": "'x-affix'"
  },
  "XAffixProperty": {
    "type": "class",
    "label": "Affix Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "top",
        "type": "string",
        "label": "距离顶部距离",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "top",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "left",
        "type": "string",
        "label": "距离左边距离",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "left",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XAffixProperty",
    "extends": "XProperty"
  },
  "XAlertPrefix": {
    "type": "const",
    "label": "Alert",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAlertPrefix",
    "selector": "x-alert",
    "decorator": "component",
    "value": "'x-alert'"
  },
  "XAlertProperty": {
    "type": "class",
    "label": "Alert Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "hide",
        "type": "XBoolean",
        "label": "隐藏",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "hide",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "title",
        "type": "XTemplate",
        "label": "标题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "content",
        "type": "XTemplate",
        "label": "内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "content",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XAlertType",
        "label": "类型",
        "default": "'info'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "effect",
        "type": "XEffect",
        "label": "主题",
        "default": "'light'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XEffect>(X_CONFIG_NAME,'light')"
        ],
        "attr": "effect",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hideClose",
        "type": "XBoolean",
        "label": "隐藏关闭按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "hideClose",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "closeText",
        "type": "string",
        "label": "使用文本关闭按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "closeText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showIcon",
        "type": "XBoolean",
        "label": "显示图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "showIcon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledAnimation",
        "type": "XBoolean",
        "label": "禁用动画",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "disabledAnimation",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "duration",
        "type": "XNumber",
        "label": "延迟关闭，默认 0 表示不关闭",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,0)",
          "@XInputNumber()"
        ],
        "attr": "duration",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "manual",
        "type": "XBoolean",
        "label": "手动处理关闭事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "manual",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "draggable",
        "type": "XBoolean",
        "label": "拖动提示框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "draggable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "resizable",
        "type": "XBoolean",
        "label": "调整提示框大小",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "resizable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "offsetLeft",
        "type": "XNumber",
        "label": "开启 resizable 调整大小，偏移屏幕左边",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "offsetLeft",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "offsetTop",
        "type": "XNumber",
        "label": "开启 resizable 调整大小，偏移屏幕顶部",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "offsetTop",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minWidth",
        "type": "string",
        "label": "最小宽度",
        "default": "'0rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'0rem')"
        ],
        "attr": "minWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minHeight",
        "type": "string",
        "label": "最小高度",
        "default": "'0rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'0rem')"
        ],
        "attr": "minHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dragBoundary",
        "type": "string | ElementRef<HTMLElement> | HTMLElement",
        "label": "拖动范围限制，父节点选择器或者对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "dragBoundary",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dragFreeDragPosition",
        "type": "XAlertDragFreeDragPosition",
        "label": "设置投放容器外部的 CdkDrag 的位置。可用于为返回的用户恢复元素的位置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "dragFreeDragPosition",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "operationTpl",
        "type": "XTemplate",
        "label": "自定义操作",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "operationTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "close",
        "type": "",
        "label": "关闭的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "close",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "dragEnded",
        "type": "CdkDragEnd",
        "label": "拖动结束的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "dragEnded",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "resizing",
        "type": "XResizableEvent",
        "label": "改变尺寸事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "resizing",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XAlertProperty",
    "extends": "XProperty"
  },
  "XAlertType": {
    "type": "type",
    "label": "类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAlertType",
    "value": "XStatus"
  },
  "XAnchorPrefix": {
    "type": "const",
    "label": "Anchor",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAnchorPrefix",
    "selector": "x-anchor",
    "decorator": "component",
    "value": "'x-anchor'"
  },
  "XAnchorProperty": {
    "type": "class",
    "label": "Anchor Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "scroll",
        "type": "HTMLElement",
        "label": "滚动区域对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "scroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "affixTop",
        "type": "string",
        "label": "顶部距离",
        "default": "'0'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'0')"
        ],
        "attr": "affixTop",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "affixBottom",
        "type": "string",
        "label": "底部距离",
        "default": "'0'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'0')"
        ],
        "attr": "affixBottom",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "affixWidth",
        "type": "XNumber",
        "label": "导航宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME)"
        ],
        "attr": "affixWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "layout",
        "type": "XAnchorLayout",
        "label": "导航相对内容位置",
        "default": "'right'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XAnchorLayout>(X_CONFIG_NAME,'right')"
        ],
        "attr": "layout",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XJustify>(X_CONFIG_NAME,'start')"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XAnchorProperty",
    "extends": "XProperty"
  },
  "XAnchorInnerPrefix": {
    "type": "const",
    "label": "Anchor inner",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAnchorInnerPrefix",
    "selector": "x-anchor-inner",
    "decorator": "component",
    "value": "'x-anchor-inner'"
  },
  "XAnchorInnerProperty": {
    "type": "class",
    "label": "Anchor inner Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "left",
        "type": "number",
        "label": "左内边距，用来显示层级",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "left",
        "propType": "",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "link",
        "type": "string",
        "label": "锚点的链接",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "link",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XAnchorInnerProperty"
  },
  "XAutoCompletePrefix": {
    "type": "const",
    "label": "AutoComplete",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAutoCompletePrefix",
    "selector": "x-auto-complete",
    "decorator": "component",
    "value": "'x-auto-complete'"
  },
  "XAutoCompleteProperty": {
    "type": "class",
    "label": "AutoComplete Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XAutoCompleteNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "debounceTime",
        "type": "number",
        "label": "输入延迟执行时间，ms",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,200)"
        ],
        "attr": "debounceTime",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPositionTopBottom",
        "label": "展示方位",
        "default": "'bottom'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPositionTopBottom>(X_CONFIG_NAME,'bottom')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "caseSensitive",
        "type": "XBoolean",
        "label": "匹配区分大小写",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "caseSensitive",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "onlySelect",
        "type": "XBoolean",
        "label": "只能是选择的值",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "onlySelect",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeEmit",
        "type": "XAutoCompleteNode",
        "label": "选择节点事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeEmit",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XAutoCompleteProperty",
    "extends": "XControlValueAccessor<any>"
  },
  "XAutoCompletePortalPrefix": {
    "type": "const",
    "label": "AutoComplete Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAutoCompletePortalPrefix",
    "extends": "XParentIdentityProperty<XAutoCompleteNode>",
    "selector": "x-auto-complete-portal",
    "decorator": "component",
    "value": "'x-auto-complete-portal'"
  },
  "XAvatarPrefix": {
    "type": "const",
    "label": "Avatar",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAvatarPrefix",
    "selector": "x-avatar",
    "decorator": "component",
    "value": "'x-avatar'"
  },
  "XAvatarProperty": {
    "type": "class",
    "label": "Avatar Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "label",
        "type": "XTemplate",
        "label": "显示字符",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XAvatarSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XAvatarSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "显示图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "shape",
        "type": "XAvatarShape",
        "label": "形状",
        "default": "'circle'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XAvatarShape>(X_CONFIG_NAME,'circle')"
        ],
        "attr": "shape",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "src",
        "type": "string",
        "label": "图片地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "src",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "fit",
        "type": "XAvatarFit",
        "label": "图片适应方式",
        "default": "'cover'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XAvatarFit>(X_CONFIG_NAME,'cover')"
        ],
        "attr": "fit",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "gap",
        "type": "XNumber",
        "label": "字符类型的时候左右边距，px",
        "default": "4",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,4)",
          "@XInputNumber()"
        ],
        "attr": "gap",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "backgroundColor",
        "type": "string",
        "label": "背景颜色",
        "default": "'#999999'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'#999999')"
        ],
        "attr": "backgroundColor",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XAvatarProperty",
    "extends": "XProperty"
  },
  "XAvatarShape": {
    "type": "type",
    "label": "头像形状",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAvatarShape",
    "value": "XShape"
  },
  "XAvatarFit": {
    "type": "type",
    "label": "当展示类型为图片的时候，设置图片如何适应容器框",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAvatarFit",
    "value": "XFit"
  },
  "XAvatarSize": {
    "type": "type",
    "label": "尺寸类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAvatarSize",
    "value": "number | XSize | XResponseSize"
  },
  "XAvatarGroupPrefix": {
    "type": "const",
    "label": "Avatar Group",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAvatarGroupPrefix",
    "selector": "x-avatar-group",
    "decorator": "component",
    "value": "'x-avatar-group'"
  },
  "XBackTopPrefix": {
    "type": "const",
    "label": "BackTop",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XBackTopPrefix",
    "selector": "x-back-top",
    "decorator": "component",
    "value": "'x-back-top'"
  },
  "XBackTopProperty": {
    "type": "class",
    "label": "BackTop Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "right",
        "type": "string",
        "label": "距离右边的距离",
        "default": "'2.5rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'2.5rem')"
        ],
        "attr": "right",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bottom",
        "type": "string",
        "label": "距离底部的距离",
        "default": "'2.5rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'2.5rem')"
        ],
        "attr": "bottom",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "visibilityHeight",
        "type": "XNumber",
        "label": "滚动多少高度后显示",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,200)"
        ],
        "attr": "visibilityHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "template",
        "type": "TemplateRef<any>",
        "label": "内容模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "template",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "target",
        "type": "string | HTMLElement",
        "label": "滚动的元素",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "target",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XBackTopProperty",
    "extends": "XProperty"
  },
  "XBadgePrefix": {
    "type": "const",
    "label": "Badge",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XBadgePrefix",
    "selector": "x-badge",
    "decorator": "component",
    "value": "'x-badge'"
  },
  "XBadgeProperty": {
    "type": "class",
    "label": "Badge Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XBadgeType",
        "label": "背景颜色",
        "default": "'danger'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBadgeType>(X_CONFIG_NAME,'danger')"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "max",
        "type": "XNumber",
        "label": "最大值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "max",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "value",
        "type": "XNumber",
        "label": "显示值",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "value",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "offset",
        "type": "(number | string)[]",
        "label": "偏移值 [left, top]",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "offset",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dot",
        "type": "XBoolean",
        "label": "是否显示小红点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "dot",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "standalone",
        "type": "XBoolean",
        "label": "独立使用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "standalone",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XBadgeProperty",
    "extends": "XProperty"
  },
  "XButtonPrefix": {
    "type": "const",
    "label": "Button",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XButtonPrefix",
    "selector": "x-button",
    "decorator": "component",
    "value": "'x-button'"
  },
  "XButtonProperty": {
    "type": "class",
    "label": "Button Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XButtonType",
        "label": "类型",
        "default": "'initial'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XButtonType>(X_CONFIG_NAME,'initial')"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "title",
        "type": "string",
        "label": "提示",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "布局方式",
        "default": "'row'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tabindex",
        "type": "number",
        "label": "tab 键控制次序",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tabindex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "onlyIcon",
        "type": "XBoolean",
        "label": "仅显示图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "onlyIcon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activated",
        "type": "XBoolean",
        "label": "激活的按钮（样式差异）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "activated",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "plain",
        "type": "XBoolean",
        "label": "朴素按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "plain",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "flat",
        "type": "XBoolean",
        "label": "平铺按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "flat",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "text",
        "type": "XBoolean",
        "label": "文字按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "text",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "round",
        "type": "XBoolean",
        "label": "圆角按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "round",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "circle",
        "type": "XBoolean",
        "label": "圆型按钮（配合图标来使用）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "circle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "loading",
        "type": "XBoolean",
        "label": "加载中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "loading",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "closable",
        "type": "XBoolean",
        "label": "关闭按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "closable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "attrType",
        "type": "XButtonAttrType",
        "label": "按钮类型属性 submit, button, reset",
        "default": "'button'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XButtonAttrType>(X_CONFIG_NAME,'button')"
        ],
        "attr": "attrType",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XButtonProperty",
    "extends": "XProperty",
    "implements": "XButtonOption"
  },
  "XButtonType": {
    "type": "type",
    "label": "按钮类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XButtonType",
    "value": "XType"
  },
  "XButtonAttrType": {
    "type": "type",
    "label": "按钮类型属性",
    "description": "- `'submit'` : 此类型用于提交表单数据\n- `'reset'` : 此类型用于重置表单中的数据\n- `'button'` : 此类型用于自定义按钮行为",
    "example": "",
    "properties": [],
    "name": "XButtonAttrType",
    "value": "'submit' | 'button' | 'reset'"
  },
  "XButtonsPrefix": {
    "type": "const",
    "label": "Buttons",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XButtonsPrefix",
    "selector": "x-buttons",
    "decorator": "component",
    "value": "'x-buttons'"
  },
  "XButtonsProperty": {
    "type": "class",
    "label": "Buttons Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "space",
        "type": "XNumber",
        "label": "按钮间距，单位 rem （按 1rem = 16px 比例来计算）",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME_BUTTONS,0)",
          "@XInputNumber()"
        ],
        "attr": "space",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hiddenBorder",
        "type": "XBoolean",
        "label": "隐藏边框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME_BUTTONS)",
          "@XInputBoolean()"
        ],
        "attr": "hiddenBorder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "boxShadow",
        "type": "XBoolean",
        "label": "显示阴影",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME_BUTTONS,true)",
          "@XInputBoolean()"
        ],
        "attr": "boxShadow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "round",
        "type": "XBoolean",
        "label": "圆角按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME_BUTTONS)",
          "@XInputBoolean()"
        ],
        "attr": "round",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XButtonsProperty",
    "extends": "XProperty"
  },
  "XCalendarPrefix": {
    "type": "const",
    "label": "Calendar",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCalendarPrefix",
    "selector": "x-calendar",
    "decorator": "component",
    "value": "'x-calendar'"
  },
  "XCalendarProperty": {
    "type": "class",
    "label": "Calendar Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XCalendarData",
        "label": "事务数据对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "model",
        "type": "XCalendarModel",
        "label": "显示模式",
        "default": "'month'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "model",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "displayType",
        "type": "XCalendarType",
        "label": "显示类型",
        "default": "'calendar'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "displayType",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "headerLeftTemp",
        "type": "TemplateRef<void>",
        "label": "头部显示模版",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "headerLeftTemp",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dateChange",
        "type": "Date",
        "label": "选择日期变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "dateChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeChange",
        "type": "Date[]",
        "label": "日期范围变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCalendarProperty",
    "extends": "XProperty"
  },
  "XCalendarData": {
    "type": "interface",
    "label": "Calendar 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "[property: string]",
        "type": "XCalendarNode[]",
        "label": "key-value",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XCalendarData"
  },
  "XCalendarModel": {
    "type": "type",
    "label": "显示模式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCalendarModel",
    "extends": "XIdentityProperty",
    "value": "'month' | 'year'"
  },
  "XCardPrefix": {
    "type": "const",
    "label": "Card",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCardPrefix",
    "selector": "x-card",
    "decorator": "component",
    "value": "'x-card'"
  },
  "XCardProperty": {
    "type": "class",
    "label": "Card Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "width",
        "type": "string",
        "label": "卡片宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bodyStyle",
        "type": "{ [property: string]: XNumber }",
        "label": "内容样式",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "bodyStyle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "header",
        "type": "XTemplate",
        "label": "头部模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "header",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "shadow",
        "type": "XCardShadow",
        "label": "阴影显示方式",
        "default": "'always'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCardShadow>(X_CONFIG_NAME,'always')"
        ],
        "attr": "shadow",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XCardProperty",
    "extends": "XProperty"
  },
  "XCarouselPrefix": {
    "type": "const",
    "label": "Carousel",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCarouselPrefix",
    "selector": "x-carousel",
    "decorator": "component",
    "value": "'x-carousel'"
  },
  "XCarouselProperty": {
    "type": "class",
    "label": "Carousel Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "active",
        "type": "XNumber",
        "label": "当前激活的幻灯片索引",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "幻灯片高度",
        "default": "'15rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'15rem')"
        ],
        "attr": "height",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "trigger",
        "type": "XCarouselTrigger",
        "label": "切换器触发方式",
        "default": "'hover'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCarouselTrigger>(X_CONFIG_NAME,'hover')"
        ],
        "attr": "trigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "arrow",
        "type": "XCarouselArrow",
        "label": "箭头显示隐藏方式",
        "default": "'hover'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCarouselArrow>(X_CONFIG_NAME,'hover')"
        ],
        "attr": "arrow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XCarouselDirection",
        "label": "幻灯片轮播方向",
        "default": "'horizontal'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCarouselDirection>(X_CONFIG_NAME,'horizontal')"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "autoplay",
        "type": "XBoolean",
        "label": "自动切换",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "autoplay",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "interval",
        "type": "XNumber",
        "label": "自动切换时间间隔",
        "default": "3000",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "interval",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "outside",
        "type": "XBoolean",
        "label": "切换器否显示在外面",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "outside",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "card",
        "type": "XBoolean",
        "label": "是否以卡片的方式显示幻灯片",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "card",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "text",
        "type": "string",
        "label": "显示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "text",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "progress",
        "type": "XBoolean",
        "label": "显示进度条",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "progress",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "progressColor",
        "type": "string",
        "label": "进度条颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "progressColor",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "current",
        "type": "XBoolean",
        "label": "显示当前页面",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "current",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "number",
        "label": "激活的序号改变的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCarouselProperty",
    "extends": "XProperty"
  },
  "XCarouselTrigger": {
    "type": "type",
    "label": "指示器切换方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCarouselTrigger",
    "value": "XTrigger"
  },
  "XCarouselArrow": {
    "type": "type",
    "label": "切换箭头显示方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCarouselArrow",
    "value": "XShadow"
  },
  "XCarouselDirection": {
    "type": "type",
    "label": "走马灯展示的方向",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCarouselDirection",
    "value": "XDisplayDirection"
  },
  "XCarouselPanelPrefix": {
    "type": "const",
    "label": "Carousel Panel",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCarouselPanelPrefix",
    "selector": "x-carousel-panel",
    "decorator": "component",
    "value": "'x-carousel-panel'"
  },
  "XCarouselPanelProperty": {
    "type": "class",
    "label": "Carousel Panel Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活当前幻灯片",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XCarouselPanelProperty",
    "extends": "XProperty"
  },
  "XCascadePrefix": {
    "type": "const",
    "label": "Cascade",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCascadePrefix",
    "selector": "x-cascade",
    "decorator": "component",
    "value": "'x-cascade'"
  },
  "XCascadeProperty": {
    "type": "class",
    "label": "Cascade Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XCascadeNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XCorner",
        "label": "展示方位",
        "default": "'bottom-start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCorner>(X_CONFIG_NAME,'bottom-start')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTrigger",
        "type": "XCascadeNodeTrigger",
        "label": "子节点触发方式",
        "default": "'click'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCascadeNodeTrigger>(X_CONFIG_NAME,'click')"
        ],
        "attr": "nodeTrigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeHoverDelay",
        "type": "XNumber",
        "label": "子节点触发方式为 hover 时的延迟时间",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,200)"
        ],
        "attr": "nodeHoverDelay",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeEmit",
        "type": "XCascadeNode",
        "label": "节点点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeEmit",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCascadeProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XCascadeOption"
  },
  "XCascadeNodeTrigger": {
    "type": "type",
    "label": "子节点触发方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCascadeNodeTrigger",
    "extends": "XParentIdentityProperty<XCascadeNode>",
    "value": "XTrigger"
  },
  "XCascadePortalPrefix": {
    "type": "const",
    "label": "Cascade-Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCascadePortalPrefix",
    "selector": "x-cascade-portal",
    "decorator": "component",
    "value": "'x-cascade-portal'"
  },
  "XCheckboxPrefix": {
    "type": "const",
    "label": "Checkbox",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCheckboxPrefix",
    "selector": "x-checkbox",
    "decorator": "component",
    "value": "'x-checkbox'"
  },
  "XCheckboxProperty": {
    "type": "class",
    "label": "Checkbox Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XCheckboxNode>",
        "label": "多选框数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "button",
        "type": "XBoolean",
        "label": "按钮样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "button",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "XBoolean",
        "label": "图标样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tag",
        "type": "XBoolean",
        "label": "tag 标签样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "tag",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "indeterminate",
        "type": "XBoolean",
        "label": "不确定状态的样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "indeterminate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XButtonType",
        "label": "按钮/图标/ tag 标签样式时生效",
        "default": "'initial'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tagBordered",
        "type": "XBoolean",
        "label": "tag 标签边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "tagBordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tagDark",
        "type": "XBoolean",
        "label": "tag 标签深色主题",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "tagDark",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "single",
        "type": "XBoolean",
        "label": "只有一个选项，启动此参数时，value 的值为 true / false",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "single",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "vertical",
        "type": "XBoolean",
        "label": "垂直布局，不支持 button 和 icon 样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "vertical",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCheckboxProperty",
    "extends": "XControlValueAccessor<boolean"
  },
  "XCheckboxNode": {
    "type": "interface",
    "label": "Checkbox 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "title",
        "type": "string",
        "label": "图标的提示信息",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "title",
        "propType": "",
        "example": ""
      },
      {
        "name": "label",
        "type": "XTemplate",
        "label": "标签文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "label",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XCheckboxNode",
    "extends": "XIdentityProperty"
  },
  "XCollapsePrefix": {
    "type": "const",
    "label": "Collapse",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCollapsePrefix",
    "selector": "x-collapse",
    "decorator": "component",
    "value": "'x-collapse'"
  },
  "XCollapseProperty": {
    "type": "class",
    "label": "Collapse Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "accordion",
        "type": "XBoolean",
        "label": "是否以手风琴的方式展示，只展开一个面板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "accordion",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "XTemplate",
        "label": "显示的图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showIcon",
        "type": "Boolean",
        "label": "显示/隐藏图标",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<Boolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "showIcon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "iconPosition",
        "type": "XCollapseIconPosition",
        "label": "图标位置",
        "default": "'right'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCollapseIconPosition>(X_CONFIG_NAME,'right')"
        ],
        "attr": "iconPosition",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "ghost",
        "type": "XBoolean",
        "label": "幽灵面板",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<Boolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "ghost",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "边框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<Boolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XNumber | XNumber[]",
        "label": "当前激活的面板序号",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XNumber | XNumber[]",
        "label": "激活的面板发生变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCollapseProperty",
    "extends": "XProperty"
  },
  "XCollapseIconPosition": {
    "type": "type",
    "label": "图标位置",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCollapseIconPosition",
    "value": "'left' | 'right'"
  },
  "XCollapsePanelPrefix": {
    "type": "const",
    "label": "Collapse Panel",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCollapsePanelPrefix",
    "selector": "x-collapse-panel",
    "decorator": "component",
    "value": "'x-collapse-panel'"
  },
  "XCollapsePanelProperty": {
    "type": "class",
    "label": "Collapse Panel Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "label",
        "type": "XTemplate",
        "label": "标题，支持模板自定义",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活当前面板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XCollapsePanelProperty",
    "extends": "XProperty"
  },
  "XColorPrefix": {
    "type": "const",
    "label": "Color",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XColorPrefix",
    "selector": "x-color",
    "decorator": "component",
    "value": "'x-color'"
  },
  "XAmounts": {
    "type": "const",
    "label": "颜色权重比例",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAmounts",
    "value": "[-0.1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]"
  },
  "XColorProperty": {
    "type": "class",
    "label": "Color Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "label",
        "type": "string",
        "label": "颜色名称",
        "default": "'color'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hex",
        "type": "string",
        "label": "十六进制颜色码，此处默认读取 css 变量中的主色",
        "default": "'var(--x-primary)'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "hex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "merge",
        "type": "string",
        "label": "混合的颜色",
        "default": "'#ffffff'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'#ffffff')"
        ],
        "attr": "merge",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "amounts",
        "type": "number[]",
        "label": "混合的颜色占比",
        "default": "XAmounts",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number[]>(X_CONFIG_NAME,XAmounts)"
        ],
        "attr": "amounts",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XColorProperty",
    "extends": "XProperty"
  },
  "XColorPickerPrefix": {
    "type": "const",
    "label": "ColorPicker",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XColorPickerPrefix",
    "selector": "x-color-picker",
    "decorator": "component",
    "value": "'x-color-picker'"
  },
  "XColorPickerProperty": {
    "type": "class",
    "label": "ColorPicker Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "placement",
        "type": "XCorner",
        "label": "展示方位",
        "default": "'bottom-start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCorner>(X_CONFIG_NAME,'bottom-start')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XColorPickerProperty",
    "extends": "XControlValueAccessor<string>",
    "implements": "XColorPickerOption"
  },
  "XColorType": {
    "type": "type",
    "label": "颜色种类",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XColorType",
    "value": "'hex' | 'rgba' | 'hsla'"
  },
  "XColorPickerPortalPrefix": {
    "type": "const",
    "label": "ColorPicker-Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XColorPickerPortalPrefix",
    "selector": "x-color-picker-portal",
    "decorator": "component",
    "value": "'x-color-picker-portal'"
  },
  "XCommentPrefix": {
    "type": "const",
    "label": "Comment",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCommentPrefix",
    "selector": "x-comment",
    "decorator": "component",
    "value": "'x-comment'"
  },
  "XCommentProperty": {
    "type": "class",
    "label": "Comment Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XCommentNode>",
        "label": "评论数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "contentMax",
        "type": "XNumber",
        "label": "评论最大字数",
        "default": "512",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig(X_CONFIG_NAME,512)"
        ],
        "attr": "contentMax",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "likeClick",
        "type": "XCommentNode",
        "label": "点赞的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "likeClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "commentClick",
        "type": "XCommentNode",
        "label": "评论的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "commentClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "replyClick",
        "type": "XCommentNode",
        "label": "回复的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "replyClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "sureClick",
        "type": "XCommentNode",
        "label": "确认提交的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "sureClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "moreClick",
        "type": "XCommentNode",
        "label": "更多的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "moreClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCommentProperty",
    "extends": "XProperty"
  },
  "XCommentNode": {
    "type": "interface",
    "label": "Comment 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "author",
        "type": "string",
        "label": "作者",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "author",
        "propType": "",
        "example": ""
      },
      {
        "name": "src",
        "type": "string",
        "label": "作者头像地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "src",
        "propType": "",
        "example": ""
      },
      {
        "name": "datetime",
        "type": "XDate",
        "label": "发布时间",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "datetime",
        "propType": "",
        "example": ""
      },
      {
        "name": "content",
        "type": "string",
        "label": "发布内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "content",
        "propType": "",
        "example": ""
      },
      {
        "name": "likes",
        "type": "number",
        "label": "点赞数量",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "likes",
        "propType": "",
        "example": ""
      },
      {
        "name": "count",
        "type": "number",
        "label": "评论数量",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "count",
        "propType": "",
        "example": ""
      },
      {
        "name": "replyAuthor",
        "type": "string",
        "label": "回复作者",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "replyAuthor",
        "propType": "",
        "example": ""
      },
      {
        "name": "replyContent",
        "type": "string",
        "label": "点击评论/回复提交的内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "replyContent",
        "propType": "",
        "example": ""
      },
      {
        "name": "commentShow",
        "type": "boolean",
        "label": "显示评论/回复框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "commentShow",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XCommentNode",
    "extends": "XParentIdentityProperty<XCommentNode>"
  },
  "XCommentReplyPrefix": {
    "type": "const",
    "label": "Comment Reply",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCommentReplyPrefix",
    "selector": "x-comment-reply",
    "decorator": "component",
    "value": "'x-comment-reply'"
  },
  "XCommentReplyProperty": {
    "type": "class",
    "label": "Comment Reply Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "maxlength",
        "type": "XNumber",
        "label": "回复的最大字数",
        "default": "512",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "maxlength",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sureClick",
        "type": "string",
        "label": "回复确认的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "sureClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCommentReplyProperty",
    "extends": "XProperty"
  },
  "XContainerPrefix": {
    "type": "const",
    "label": "Container",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XContainerPrefix",
    "selector": "x-container",
    "decorator": "component",
    "value": "'x-container'"
  },
  "XContainerProperty": {
    "type": "class",
    "label": "Container Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向，子元素中有 x-header 或 x-footer 时为 column",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XDirection>(X_CONFIG_NAME)"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XContainerProperty",
    "extends": "XProperty"
  },
  "XHeaderPrefix": {
    "type": "const",
    "label": "Header",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XHeaderPrefix",
    "selector": "x-header",
    "decorator": "component",
    "value": "'x-header'"
  },
  "XHeaderProperty": {
    "type": "class",
    "label": "Header Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "height",
        "type": "number",
        "label": "高度，rem",
        "default": "3",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME_HEADER,3)"
        ],
        "attr": "height",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XHeaderProperty",
    "extends": "XProperty"
  },
  "XAsidePrefix": {
    "type": "const",
    "label": "Aside",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAsidePrefix",
    "selector": "x-aside",
    "decorator": "component",
    "value": "'x-aside'"
  },
  "XAsideProperty": {
    "type": "class",
    "label": "Aside Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "width",
        "type": "number",
        "label": "宽度，rem",
        "default": "12",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME_ASIDE,12)"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XAsideProperty",
    "extends": "XProperty"
  },
  "XMainPrefix": {
    "type": "const",
    "label": "main",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMainPrefix",
    "selector": "x-main",
    "decorator": "component",
    "value": "'x-main'"
  },
  "XFooterPrefix": {
    "type": "const",
    "label": "Footer",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFooterPrefix",
    "selector": "x-footer",
    "decorator": "component",
    "value": "'x-footer'"
  },
  "XFooterProperty": {
    "type": "class",
    "label": "Footer Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "height",
        "type": "XNumber",
        "label": "高度，rem",
        "default": "3",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME_FOOTER,3)"
        ],
        "attr": "height",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XFooterProperty",
    "extends": "XProperty"
  },
  "XCrumbPrefix": {
    "type": "const",
    "label": "Crumb",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCrumbPrefix",
    "selector": "x-crumb",
    "decorator": "component",
    "value": "'x-crumb'"
  },
  "XCrumbProperty": {
    "type": "class",
    "label": "Crumb Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XCrumbNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "separator",
        "type": "XTemplate",
        "label": "分隔符",
        "default": "'/'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME,'/')"
        ],
        "attr": "separator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeClick",
        "type": "XCrumbNodeClick",
        "label": "节点点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCrumbProperty",
    "extends": "XProperty"
  },
  "XCrumbNode": {
    "type": "interface",
    "label": "Crumb 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义数据属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XCrumbNode",
    "extends": "XIdentityProperty"
  },
  "XCrumbNodeClick": {
    "type": "interface",
    "label": "Crumb 点击返回的对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "event",
        "type": "Event",
        "label": "事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "event",
        "propType": "",
        "example": ""
      },
      {
        "name": "node",
        "type": "XCrumbNode",
        "label": "点击的节点数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "node",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XCrumbNodeClick"
  },
  "XDatePickerPrefix": {
    "type": "const",
    "label": "DatePicker",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerPrefix",
    "selector": "x-date-picker",
    "decorator": "component",
    "value": "'x-date-picker'"
  },
  "XDatePickerProperty": {
    "type": "class",
    "label": "DatePicker Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "'date'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "format",
        "type": "string",
        "label": "格式化类型",
        "default": "'yyyy-MM-dd'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'yyyy-MM-dd')"
        ],
        "attr": "format",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "clearable",
        "type": "XBoolean",
        "label": "清除按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "clearable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XCorner",
        "label": "展示方位",
        "default": "'bottom-start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCorner>(X_CONFIG_NAME,'bottom-start')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "preset",
        "type": "XData<XDatePickerPreset>",
        "label": "快捷选择按钮，自定义或直接设置今天（today）,昨天（yesterday）,明天（tomorrow）",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "preset",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "extraFooter",
        "type": "XTemplate",
        "label": "页脚",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "extraFooter",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledDate",
        "type": "XDatePickerDisabledDate",
        "label": "禁用的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledDate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledTime",
        "type": "XDatePickerDisabledTime",
        "label": "禁用的时间",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledTime",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeEmit",
        "type": "number",
        "label": "节点点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeEmit",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XDatePickerProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XDatePickerOption"
  },
  "XDateRangePrefix": {
    "type": "const",
    "label": "DateRange",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateRangePrefix",
    "selector": "x-date-range",
    "decorator": "component",
    "value": "'x-date-range'"
  },
  "XDateRangeProperty": {
    "type": "class",
    "label": "DateRange Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "'date'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "format",
        "type": "string",
        "label": "格式化类型",
        "default": "'yyyy-MM-dd'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_RANGE_NAME,'yyyy-MM-dd')"
        ],
        "attr": "format",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "clearable",
        "type": "XBoolean",
        "label": "清除按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_RANGE_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "clearable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XCorner",
        "label": "展示方位",
        "default": "'bottom-start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCorner>(X_CONFIG_RANGE_NAME,'bottom-start')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_RANGE_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "preset",
        "type": "XData<XDateRangePreset>",
        "label": "快捷选择按钮，自定义或直接设置本周（thisWeek）、上周（lastWeek）、下周（nextWeek）、本月（thisMonth）、上一月（lastMonth）、下一月（nextMonth）、本年（thisYear）、去年（lastYear）、明年（nextYear）",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "preset",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string[]",
        "label": "日期提示信息",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "extraFooter",
        "type": "XTemplate",
        "label": "页脚",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "extraFooter",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledDate",
        "type": "XDatePickerDisabledDate",
        "label": "禁用的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledDate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledTime",
        "type": "XDatePickerDisabledTime",
        "label": "禁用的时间",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledTime",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeEmit",
        "type": "number[]",
        "label": "节点点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeEmit",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XDateRangeProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XDateRangeOption"
  },
  "XDatePickerDisabledDate": {
    "type": "type",
    "label": "禁用日期的自定义类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerDisabledDate",
    "value": "(current: Date) => boolean"
  },
  "XDatePickerDisabledTime": {
    "type": "type",
    "label": "禁用时间的自定义类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerDisabledTime",
    "value": "(type?: XDatePickerRangType) => XDatePickerDisabledTimeFn"
  },
  "XDatePickerDisabledTimeFn": {
    "type": "type",
    "label": "禁用时间的自定义函数",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerDisabledTimeFn",
    "value": "XDatePickerDisabledTimeFn = {/*** @zh_CN 禁用小时的自定义函数* @en_US Disable hour custom function*/disabledHours?: () => number[];/*** @zh_CN 禁用分钟的自定义函数* @en_US Disable the custom function of the minute*/disabledMinutes?: () => number[];/*** @zh_CN 禁用秒的自定义函数* @en_US Custom function of disable seconds*/disabledSeconds?: () => number[];};"
  },
  "XDatePickerPreset": {
    "type": "interface",
    "label": "快捷选择按钮",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "func",
        "type": "() => Date",
        "label": "自定义函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "func",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XDatePickerPreset",
    "extends": "XIdentityProperty"
  },
  "XDateRangePreset": {
    "type": "interface",
    "label": "快捷范围选择按钮",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "func",
        "type": "() => Date[]",
        "label": "自定义函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "func",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XDateRangePreset",
    "extends": "XIdentityProperty"
  },
  "XDatePickerType": {
    "type": "type",
    "label": "日期选择类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerType",
    "value": "XDatePickerType =| 'date'| 'week'| 'month'| 'quarter'| 'year'| 'date-time'| 'date-hour'| 'date-minute';"
  },
  "XDatePickerModelType": {
    "type": "type",
    "label": "日期数据类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerModelType",
    "value": "'date' | 'number' | 'string'"
  },
  "XDatePickerPortalPrefix": {
    "type": "const",
    "label": "DatePicker Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerPortalPrefix",
    "selector": "x-date-picker-portal",
    "decorator": "component",
    "value": "'x-date-picker-portal'"
  },
  "XDateRangePortalPrefix": {
    "type": "const",
    "label": "DateRange Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateRangePortalPrefix",
    "selector": "x-date-range-portal",
    "decorator": "component",
    "value": "'x-date-range-portal'"
  },
  "XPickerDatePrefix": {
    "type": "const",
    "label": "PickerDate",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPickerDatePrefix",
    "selector": "x-picker-date",
    "decorator": "component",
    "value": "'x-picker-date'"
  },
  "XPickerDateProperty": {
    "type": "class",
    "label": "PickerDate Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "'date'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "Date()",
        "type": "@Input() display",
        "label": "显示的日期",
        "default": "new Date()",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "Date()",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "model",
        "type": "Date | null",
        "label": "选中的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "model",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dateTemp",
        "type": "TemplateRef<any>",
        "label": "日期显示模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "dateTemp",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showHeader",
        "type": "XBoolean",
        "label": "显示切换按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showHeader",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangePicker",
        "type": "XBoolean",
        "label": "范围选择",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "rangePicker",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lastYearBtn",
        "type": "XBoolean",
        "label": "上一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "lastYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lastMonthBtn",
        "type": "XBoolean",
        "label": "上月",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "lastMonthBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nextYearBtn",
        "type": "XBoolean",
        "label": "下一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nextYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nextMonthBtn",
        "type": "XBoolean",
        "label": "上月",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nextMonthBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeHover",
        "type": "XBoolean",
        "label": "范围 hover 效果",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "rangeHover",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeValue",
        "type": "(number | null)[]",
        "label": "范围日期",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeValue",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeType",
        "type": "XDatePickerRangType",
        "label": "当前选择的是开始/结束日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeType",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledDate",
        "type": "XDatePickerDisabledDate",
        "label": "禁用的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledDate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "typeChange",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "typeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "modelChange",
        "type": "Date",
        "label": "选中的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "modelChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeChange",
        "type": "Date[]",
        "label": "范围变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "yearChange",
        "type": "number",
        "label": "选年的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "yearChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "monthChange",
        "type": "number",
        "label": "选月的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "monthChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "displayChange",
        "type": "Date",
        "label": "显示日期事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "displayChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseenter",
        "type": "XDateCell",
        "label": "范围日期 mouseenter 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseenter",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseleave",
        "type": "XDateCell",
        "label": "范围日期 mouseleave 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseleave",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeDateClick",
        "type": "XDateCell",
        "label": "范围中的日期点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeDateClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPickerDateProperty",
    "extends": "XProperty"
  },
  "XDateCell": {
    "type": "interface",
    "label": "单个日期数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "date",
        "type": "Date",
        "label": "日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "date",
        "propType": "",
        "example": ""
      },
      {
        "name": "isLastOrNext",
        "type": "boolean",
        "label": "上个月或下个月的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isLastOrNext",
        "propType": "",
        "example": ""
      },
      {
        "name": "isNow",
        "type": "boolean",
        "label": "当天",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isNow",
        "propType": "",
        "example": ""
      },
      {
        "name": "isFirstDay",
        "type": "boolean",
        "label": "当月第一天",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isFirstDay",
        "propType": "",
        "example": ""
      },
      {
        "name": "isLastDay",
        "type": "boolean",
        "label": "当月最后一天",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isLastDay",
        "propType": "",
        "example": ""
      },
      {
        "name": "isInRange",
        "type": "boolean",
        "label": "范围内日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isInRange",
        "propType": "",
        "example": ""
      },
      {
        "name": "isInRangeHover",
        "type": "boolean",
        "label": "范围内 hover 选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isInRangeHover",
        "propType": "",
        "example": ""
      },
      {
        "name": "isInRangeHoverLeft",
        "type": "boolean",
        "label": "范围内 hover 当前日期左边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isInRangeHoverLeft",
        "propType": "",
        "example": ""
      },
      {
        "name": "isInRangeHoverRight",
        "type": "boolean",
        "label": "范围内 hover 当前日期右边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isInRangeHoverRight",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeStartLeft",
        "type": "boolean",
        "label": "选中开始左边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeStartLeft",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeStartRight",
        "type": "boolean",
        "label": "选中开始右边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeStartRight",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeEndLeft",
        "type": "boolean",
        "label": "选中结束左边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeEndLeft",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeEndRight",
        "type": "boolean",
        "label": "选中结束右边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeEndRight",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeHover",
        "type": "boolean",
        "label": "范围 hover",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeHover",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeHoverStart",
        "type": "boolean",
        "label": "hover 当前开始",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeHoverStart",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeHoverEnd",
        "type": "boolean",
        "label": "hover 当前结束",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeHoverEnd",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeHoverStartLeft",
        "type": "boolean",
        "label": "hover 开始左边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeHoverStartLeft",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeHoverStartRight",
        "type": "boolean",
        "label": "hover 开始右边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeHoverStartRight",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeHoverEndLeft",
        "type": "boolean",
        "label": "hover 结束左边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeHoverEndLeft",
        "propType": "",
        "example": ""
      },
      {
        "name": "isRangeHoverEndRight",
        "type": "boolean",
        "label": "hover 结束右边",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isRangeHoverEndRight",
        "propType": "",
        "example": ""
      },
      {
        "name": "isActive",
        "type": "boolean",
        "label": "当前选中日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isActive",
        "propType": "",
        "example": ""
      },
      {
        "name": "isDisabled",
        "type": "boolean",
        "label": "禁用日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "isDisabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "type",
        "type": "XDatePickerType",
        "label": "类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "week",
        "type": "number",
        "label": "第几周",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "week",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XDateCell"
  },
  "XDatePickerRangType": {
    "type": "type",
    "label": "当前选择的是开始/结束日期",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerRangType",
    "value": "'start' | 'end'"
  },
  "XPickerMonthPrefix": {
    "type": "const",
    "label": "PickerMonth",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPickerMonthPrefix",
    "selector": "x-picker-month",
    "decorator": "component",
    "value": "'x-picker-month'"
  },
  "XPickerMonthProperty": {
    "type": "class",
    "label": "PickerMonth Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "'date'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "display",
        "type": "Date",
        "label": "显示的日期",
        "default": "new Date()",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "display",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "model",
        "type": "Date | null",
        "label": "选中的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "model",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "monthTemp",
        "type": "TemplateRef<any>",
        "label": "月份显示模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "monthTemp",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showHeader",
        "type": "XBoolean",
        "label": "显示切换按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showHeader",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangePicker",
        "type": "XBoolean",
        "label": "范围选择",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "rangePicker",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lastYearBtn",
        "type": "XBoolean",
        "label": "上一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "lastYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nextYearBtn",
        "type": "XBoolean",
        "label": "下一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nextYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeValue",
        "type": "(number | null)[]",
        "label": "范围月份",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeValue",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeType",
        "type": "XDatePickerRangType",
        "label": "当前选择的是开始/结束日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeType",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledDate",
        "type": "XDatePickerDisabledDate",
        "label": "禁用的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledDate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "modelChange",
        "type": "Date",
        "label": "选中的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "modelChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "typeChange",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "typeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeChange",
        "type": "Date[]",
        "label": "范围变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "yearChange",
        "type": "number",
        "label": "选年的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "yearChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "monthChange",
        "type": "number",
        "label": "选月的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "monthChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "displayChange",
        "type": "Date",
        "label": "显示月份事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "displayChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseenter",
        "type": "XDateCell",
        "label": "范围月份 mouseenter 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseenter",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseleave",
        "type": "XDateCell",
        "label": "范围月份 mouseleave 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseleave",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeDateClick",
        "type": "XDateCell",
        "label": "范围中的月份点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeDateClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPickerMonthProperty",
    "extends": "XProperty"
  },
  "XPickerQuarterPrefix": {
    "type": "const",
    "label": "PickerQuarter",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPickerQuarterPrefix",
    "selector": "x-picker-quarter",
    "decorator": "component",
    "value": "'x-picker-quarter'"
  },
  "XPickerQuarterProperty": {
    "type": "class",
    "label": "PickerQuarter Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "'date'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "display",
        "type": "Date",
        "label": "显示的日期",
        "default": "new Date()",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "display",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "model",
        "type": "Date | null",
        "label": "选中的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "model",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "quarterTemp",
        "type": "TemplateRef<any>",
        "label": "季度显示模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "quarterTemp",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showHeader",
        "type": "XBoolean",
        "label": "显示切换按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showHeader",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangePicker",
        "type": "XBoolean",
        "label": "范围选择",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "rangePicker",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lastYearBtn",
        "type": "XBoolean",
        "label": "上一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "lastYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nextYearBtn",
        "type": "XBoolean",
        "label": "下一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nextYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeValue",
        "type": "(number | null)[]",
        "label": "范围月份",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeValue",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeType",
        "type": "XDatePickerRangType",
        "label": "当前选择的是开始/结束日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeType",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledDate",
        "type": "XDatePickerDisabledDate",
        "label": "禁用的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledDate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "modelChange",
        "type": "Date",
        "label": "选中的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "modelChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "typeChange",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "typeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeChange",
        "type": "Date[]",
        "label": "范围变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "yearChange",
        "type": "number",
        "label": "选年的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "yearChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "monthChange",
        "type": "number",
        "label": "选月的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "monthChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "displayChange",
        "type": "Date",
        "label": "显示季度事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "displayChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseenter",
        "type": "XDateCell",
        "label": "范围季度 mouseenter 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseenter",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseleave",
        "type": "XDateCell",
        "label": "范围季度 mouseleave 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseleave",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeDateClick",
        "type": "XDateCell",
        "label": "范围中的季度点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeDateClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPickerQuarterProperty",
    "extends": "XProperty"
  },
  "XDateQuarterPrefix": {
    "type": "const",
    "label": "DateQuarter",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDateQuarterPrefix",
    "selector": "xDateQuarter",
    "decorator": "pipe",
    "value": "'xDateQuarter'"
  },
  "XPickerYearPrefix": {
    "type": "const",
    "label": "PickerYear",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPickerYearPrefix",
    "selector": "x-picker-year",
    "decorator": "component",
    "value": "'x-picker-year'"
  },
  "XPickerYearProperty": {
    "type": "class",
    "label": "PickerYear Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "'date'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "display",
        "type": "Date",
        "label": "显示的日期",
        "default": "new Date()",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "display",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "model",
        "type": "Date | null",
        "label": "选中的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "model",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "yearTemp",
        "type": "TemplateRef<any>",
        "label": "年份显示模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "yearTemp",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showHeader",
        "type": "XBoolean",
        "label": "显示切换按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showHeader",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangePicker",
        "type": "XBoolean",
        "label": "范围选择",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "rangePicker",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lastYearBtn",
        "type": "XBoolean",
        "label": "上一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "lastYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nextYearBtn",
        "type": "XBoolean",
        "label": "下一年",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nextYearBtn",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeValue",
        "type": "(number | null)[]",
        "label": "范围年份",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeValue",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rangeType",
        "type": "XDatePickerRangType",
        "label": "当前选择的是开始/结束日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rangeType",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledDate",
        "type": "XDatePickerDisabledDate",
        "label": "禁用的日期",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledDate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "modelChange",
        "type": "Date",
        "label": "选中的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "modelChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "typeChange",
        "type": "XDatePickerType",
        "label": "选择类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "typeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "startChange",
        "type": "number",
        "label": "开始年份变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "startChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeChange",
        "type": "Date[]",
        "label": "范围变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "yearChange",
        "type": "number",
        "label": "选年的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "yearChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "monthChange",
        "type": "number",
        "label": "选月的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "monthChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "displayChange",
        "type": "Date",
        "label": "显示月份事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "displayChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseenter",
        "type": "XDateCell",
        "label": "范围月份 mouseenter 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseenter",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeTdMouseleave",
        "type": "XDateCell",
        "label": "范围月份 mouseleave 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeTdMouseleave",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rangeDateClick",
        "type": "XDateCell",
        "label": "范围中的月份点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "rangeDateClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPickerYearProperty",
    "extends": "XProperty"
  },
  "XDescriptionPrefix": {
    "type": "const",
    "label": "Description",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDescriptionPrefix",
    "selector": "x-description",
    "decorator": "component",
    "value": "'x-description'"
  },
  "XDescriptionProperty": {
    "type": "class",
    "label": "Description Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "title",
        "type": "XTemplate",
        "label": "描述列表的标题，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "是否展示边框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "gridTemplateColumns",
        "type": "string",
        "label": "grid 布局下定义列宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "gridTemplateColumns",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XDescriptionProperty",
    "extends": "XProperty"
  },
  "XDescriptionItemPrefix": {
    "type": "const",
    "label": "Description Item",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDescriptionItemPrefix",
    "selector": "x-description-item",
    "decorator": "component",
    "value": "'x-description-item'"
  },
  "XDescriptionItemProperty": {
    "type": "class",
    "label": "Description Item Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "gridArea",
        "type": "string",
        "label": "使用 grid 布局",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "gridArea",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "XTemplate",
        "label": "内容的描述，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'row'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "flex",
        "type": "number",
        "label": "flex 比重",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "flex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "heading",
        "type": "XBoolean",
        "label": "是否是标题",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "heading",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XDescriptionItemProperty"
  },
  "XDialogPrefix": {
    "type": "const",
    "label": "Dialog",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDialogPrefix",
    "selector": "x-dialog",
    "decorator": "component",
    "value": "'x-dialog'"
  },
  "XDialogProperty": {
    "type": "class",
    "label": "Dialog Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "placement",
        "type": "XPlace",
        "label": "方位，九宫格",
        "default": "'center'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPlace>(X_DIALOG_CONFIG_NAME,'center')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "offset",
        "type": "string",
        "label": "偏移距离",
        "default": "'1rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME,'1rem')"
        ],
        "attr": "offset",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XDialogType",
        "label": "类型",
        "default": "'info'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME)"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "height",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minWidth",
        "type": "string",
        "label": "最小宽度",
        "default": "'32rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME,'32rem')"
        ],
        "attr": "minWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxWidth",
        "type": "string",
        "label": "最大宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME)"
        ],
        "attr": "maxWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minHeight",
        "type": "string",
        "label": "最小高度",
        "default": "'8rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME,'8rem')"
        ],
        "attr": "minHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxHeight",
        "type": "string",
        "label": "最大高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME)"
        ],
        "attr": "maxHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "effect",
        "type": "XEffect",
        "label": "样式主题",
        "default": "'white'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XEffect>(X_DIALOG_CONFIG_NAME,'white')"
        ],
        "attr": "effect",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "footer",
        "type": "XTemplate",
        "label": "底部自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "footer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showCancel",
        "type": "XBoolean",
        "label": "显示取消按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DIALOG_CONFIG_NAME,true)"
        ],
        "attr": "showCancel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "cancelText",
        "type": "string",
        "label": "取消按钮文字",
        "default": "'取消'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME)"
        ],
        "attr": "cancelText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showConfirm",
        "type": "XBoolean",
        "label": "显示确认按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DIALOG_CONFIG_NAME,true)"
        ],
        "attr": "showConfirm",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "confirmText",
        "type": "string",
        "label": "确认按钮文字",
        "default": "'确认'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME)"
        ],
        "attr": "confirmText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "backdropClose",
        "type": "XBoolean",
        "label": "点击遮罩关闭",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DIALOG_CONFIG_NAME,true)"
        ],
        "attr": "backdropClose",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hasBackdrop",
        "type": "XBoolean",
        "label": "是否显示背景遮罩",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DIALOG_CONFIG_NAME,true)"
        ],
        "attr": "hasBackdrop",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "className",
        "type": "string",
        "label": "自定义样式名",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DIALOG_CONFIG_NAME,'')"
        ],
        "attr": "className",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "buttonsCenter",
        "type": "XBoolean",
        "label": "按钮居中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DIALOG_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "buttonsCenter",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "@Input(",
        "type": "@Input()",
        "label": "拖动对话框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "&#64;Input(",
        "propType": "",
        "example": ""
      },
      {
        "name": "@Input(",
        "type": "@Input()",
        "label": "调整弹框的大小",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "&#64;Input(",
        "propType": "",
        "example": ""
      },
      {
        "name": "maximize",
        "type": "XBoolean",
        "label": "最大化弹出框按钮，当启用 resizable 时也会显示",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DIALOG_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "maximize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "beforeClose",
        "type": "(action: XDialogAction) => void",
        "label": "关闭前处理函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "beforeClose",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "cancel",
        "type": "",
        "label": "取消按钮的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "cancel",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "confirm",
        "type": "",
        "label": "确认按钮的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "confirm",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "close",
        "type": "",
        "label": "确认按钮的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "close",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "visibleChange",
        "type": "boolean",
        "label": "显示/隐藏改变事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "visibleChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "showDone",
        "type": "any",
        "label": "弹出完成动画加载",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "showDone",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "closeDone",
        "type": "any",
        "label": "关闭完成动画",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "closeDone",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XDialogProperty",
    "extends": "XAlertProperty"
  },
  "XDialogContainerPrefix": {
    "type": "const",
    "label": "Dialog Container",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDialogContainerPrefix",
    "selector": "x-dialog-container",
    "decorator": "component",
    "value": "'x-dialog-container'"
  },
  "XDialogContainerProperty": {
    "type": "class",
    "label": "Dialog Container Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "placement",
        "type": "XPlace",
        "label": "展示方向",
        "default": "'center'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "placement",
        "propType": "",
        "example": ""
      },
      {
        "name": "offset",
        "type": "string",
        "label": "偏移距离",
        "default": "'1rem'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "offset",
        "propType": "",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度",
        "default": "",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "width",
        "propType": "",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "height",
        "propType": "",
        "example": ""
      },
      {
        "name": "className",
        "type": "string",
        "label": "自定义样式名",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "className",
        "propType": "",
        "example": ""
      },
      {
        "name": "backdropClose",
        "type": "boolean",
        "label": "点击遮罩关闭",
        "default": "true",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "backdropClose",
        "propType": "",
        "example": ""
      },
      {
        "name": "hasBackdrop",
        "type": "boolean",
        "label": "是否显示背景遮罩",
        "default": "true",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "hasBackdrop",
        "propType": "",
        "example": ""
      },
      {
        "name": "draggable",
        "type": "boolean",
        "label": "拖动对话框",
        "default": "false",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "draggable",
        "propType": "",
        "example": ""
      },
      {
        "name": "resizable",
        "type": "boolean",
        "label": "调整弹框的大小",
        "default": "false",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "resizable",
        "propType": "",
        "example": ""
      },
      {
        "name": "minWidth",
        "type": "string",
        "label": "最小宽度",
        "default": "'32rem'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "minWidth",
        "propType": "",
        "example": ""
      },
      {
        "name": "maxWidth",
        "type": "string",
        "label": "最大宽度",
        "default": "",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "maxWidth",
        "propType": "",
        "example": ""
      },
      {
        "name": "minHeight",
        "type": "string",
        "label": "最小高度",
        "default": "'8rem'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "minHeight",
        "propType": "",
        "example": ""
      },
      {
        "name": "maxHeight",
        "type": "string",
        "label": "最大高度",
        "default": "",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "maxHeight",
        "propType": "",
        "example": ""
      },
      {
        "name": "data",
        "type": "any",
        "label": "数据，通过 \"&#64;Inject(X_DIALOG_DATA)\" 来接收数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "data",
        "propType": "",
        "example": ""
      },
      {
        "name": "viewContainerRef",
        "type": "ViewContainerRef",
        "label": "视图容器实例可以包含其他视图容器。",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "viewContainerRef",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XDialogContainerProperty",
    "extends": "XProperty"
  },
  "XDialogAnimationState": {
    "type": "type",
    "label": "弹框动画状态",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDialogAnimationState",
    "value": "XPlace | 'void'"
  },
  "XDialogAnimationEvent": {
    "type": "interface",
    "label": "弹框动画事件",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDialogAnimationEvent"
  },
  "XDialogCallback": {
    "type": "interface",
    "label": "关闭的回调函数类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDialogCallback"
  },
  "XDialogAction": {
    "type": "type",
    "label": "触发关闭的类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDialogAction",
    "value": "'confirm' | 'cancel' | 'close'"
  },
  "XDrawerPrefix": {
    "type": "const",
    "label": "Drawer",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDrawerPrefix",
    "selector": "x-drawer",
    "decorator": "component",
    "value": "'x-drawer'"
  },
  "XDrawerProperty": {
    "type": "class",
    "label": "Drawer Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "title",
        "type": "XTemplate",
        "label": "标题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "visible",
        "type": "XBoolean",
        "label": "显示/隐藏",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "visible",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPosition",
        "label": "展示方向",
        "default": "'right'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPosition>(X_DRAWER_CONFIG_NAME,'right')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "string",
        "label": "尺寸，支持固定值",
        "default": "'30%'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DRAWER_CONFIG_NAME,'30%')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "backdropClose",
        "type": "XBoolean",
        "label": "点击遮罩关闭",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DRAWER_CONFIG_NAME,true)"
        ],
        "attr": "backdropClose",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hasBackdrop",
        "type": "XBoolean",
        "label": "是否显示背景遮罩",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_DRAWER_CONFIG_NAME,true)"
        ],
        "attr": "hasBackdrop",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "className",
        "type": "string",
        "label": "自定义样式名",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_DRAWER_CONFIG_NAME,'')"
        ],
        "attr": "className",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "close",
        "type": "",
        "label": "关闭的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "close",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "visibleChange",
        "type": "boolean",
        "label": "显示/隐藏的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "visibleChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XDrawerProperty",
    "extends": "XProperty"
  },
  "XDrawerOption": {
    "type": "interface",
    "label": "Drawer Option",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "placement",
        "type": "XPosition",
        "label": "展示方向",
        "default": "'right'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "placement",
        "propType": "",
        "example": ""
      },
      {
        "name": "size",
        "type": "string",
        "label": "尺寸，支持固定值",
        "default": "'30%'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "size",
        "propType": "",
        "example": ""
      },
      {
        "name": "className",
        "type": "string",
        "label": "自定义样式名",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "className",
        "propType": "",
        "example": ""
      },
      {
        "name": "backdropClose",
        "type": "boolean",
        "label": "点击遮罩关闭",
        "default": "true",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "backdropClose",
        "propType": "",
        "example": ""
      },
      {
        "name": "hasBackdrop",
        "type": "boolean",
        "label": "是否显示背景遮罩",
        "default": "true",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "hasBackdrop",
        "propType": "",
        "example": ""
      },
      {
        "name": "data",
        "type": "any",
        "label": "数据，通过 \"&#64;Inject(X_DRAWER_DATA)\" 来接收数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "data",
        "propType": "",
        "example": ""
      },
      {
        "name": "viewContainerRef",
        "type": "ViewContainerRef",
        "label": "视图容器实例可以包含其他视图容器。",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "viewContainerRef",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XDrawerOption"
  },
  "XDrawerContainerPrefix": {
    "type": "const",
    "label": "Drawer Container",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDrawerContainerPrefix",
    "selector": "x-drawer-container",
    "decorator": "component",
    "value": "'x-drawer-container'"
  },
  "XDrawerContainerProperty": {
    "type": "class",
    "label": "Drawer Container Property",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDrawerContainerProperty",
    "extends": "XProperty"
  },
  "XDrawerAnimationState": {
    "type": "type",
    "label": "抽屉动画状态",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDrawerAnimationState",
    "value": "XPosition | 'void'"
  },
  "XDrawerAnimationEvent": {
    "type": "interface",
    "label": "抽屉动画事件",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDrawerAnimationEvent"
  },
  "XDropdownPrefix": {
    "type": "const",
    "label": "Dropdown",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDropdownPrefix",
    "selector": "x-dropdown",
    "decorator": "component",
    "value": "'x-dropdown'"
  },
  "XDropdownProperty": {
    "type": "class",
    "label": "Dropdown Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XDropdownNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "trigger",
        "type": "XDropdownTrigger",
        "label": "触发方式",
        "default": "'hover'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XDropdownTrigger>(X_CONFIG_NAME,'hover')"
        ],
        "attr": "trigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPlacement",
        "label": "展示位置",
        "default": "'bottom-start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPlacement>(X_CONFIG_NAME,'bottom-start')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "children",
        "type": "XBoolean",
        "label": "节点中已经包含子节点数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "children",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalMinWidth",
        "type": "string | number",
        "label": "弹框的最小宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "portalMinWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalMaxWidth",
        "type": "string | number",
        "label": "弹框的最大宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "portalMaxWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalMinHeight",
        "type": "string | number",
        "label": "弹框的最小高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "portalMinHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalMaxHeight",
        "type": "string | number",
        "label": "弹框的最大高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "portalMaxHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hoverDelay",
        "type": "number",
        "label": "hover 延迟触发时间，只有 trigger 为 'hover' 生效",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "hoverDelay",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedId",
        "type": "any",
        "label": "当前激活的菜单",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "activatedId",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeClick",
        "type": "XDropdownNode",
        "label": "节点点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "activatedIdChange",
        "type": "any",
        "label": "当前激活的菜单事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activatedIdChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XDropdownProperty",
    "extends": "XProperty"
  },
  "XDropdownTrigger": {
    "type": "type",
    "label": "显示方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDropdownTrigger",
    "extends": "XListNode",
    "value": "XTrigger"
  },
  "XDropdownPortalPrefix": {
    "type": "const",
    "label": "Dropdown Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDropdownPortalPrefix",
    "selector": "x-dropdown-portal",
    "decorator": "component",
    "value": "'x-dropdown-portal'"
  },
  "XEmptyPrefix": {
    "type": "const",
    "label": "Empty",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XEmptyPrefix",
    "selector": "x-empty",
    "decorator": "component",
    "value": "'x-empty'"
  },
  "XEmptyProperty": {
    "type": "class",
    "label": "Empty Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "img",
        "type": "XTemplate",
        "label": "图片地址或自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME)"
        ],
        "attr": "img",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "content",
        "type": "XTemplate",
        "label": "内容或自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME)"
        ],
        "attr": "content",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XEmptyProperty"
  },
  "XFindPrefix": {
    "type": "const",
    "label": "Find",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFindPrefix",
    "selector": "x-find",
    "decorator": "component",
    "value": "'x-find'"
  },
  "XFindSearchOption": {
    "type": "interface",
    "label": "Find search option",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFindSearchOption",
    "extends": "XFilter"
  },
  "XFindProperty": {
    "type": "class",
    "label": "Find Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "multiple",
        "type": "XBoolean",
        "label": "多选",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "multiple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "columnLabel",
        "type": "string",
        "label": "选中 label 名称字段",
        "default": "'label'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'label')"
        ],
        "attr": "columnLabel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogTitle",
        "type": "string",
        "label": "弹框标题",
        "default": "'查找选择'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'查找选择')"
        ],
        "attr": "dialogTitle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogCheckboxLabel",
        "type": "string",
        "label": "弹框表格选择列头名称",
        "default": "'选择'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'选择')"
        ],
        "attr": "dialogCheckboxLabel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogCheckboxWidth",
        "type": "number",
        "label": "弹框表格选择列宽",
        "default": "60",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,60)",
          "@XInputNumber()"
        ],
        "attr": "dialogCheckboxWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogEmptyContent",
        "type": "string",
        "label": "弹框选择数据为空的提示信息",
        "default": "'请选择数据'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'请选择数据')"
        ],
        "attr": "dialogEmptyContent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogWidth",
        "type": "string",
        "label": "弹框宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "dialogWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogHeight",
        "type": "string",
        "label": "弹框高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "dialogHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogVisible",
        "type": "boolean",
        "label": "弹框显示，隐藏",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "dialogVisible",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dialogVisibleChange",
        "type": "boolean",
        "label": "弹框显示，隐藏",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "dialogVisibleChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "dialogButtonsCenter",
        "type": "XBoolean",
        "label": "按钮居中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "dialogButtonsCenter",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableData",
        "type": "XData<XTableRow>",
        "label": "表格行数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableData",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableIndex",
        "type": "number",
        "label": "表格页码",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,1)"
        ],
        "attr": "tableIndex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableSize",
        "type": "number",
        "label": "表每页数据条数",
        "default": "10",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,10)"
        ],
        "attr": "tableSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableQuery",
        "type": "XQuery",
        "label": "表格查询条件",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableQuery",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableTotal",
        "type": "number",
        "label": "表格数据总条数",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableTotal",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableIndexChange",
        "type": "number",
        "label": "页码变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "tableIndexChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "tableSizeChange",
        "type": "number",
        "label": "每页显示条数变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "tableSizeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "tableSortChange",
        "type": "XSort[]",
        "label": "排序点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "tableSortChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "tableColumns",
        "type": "XTableColumn[]",
        "label": "表格列参数",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableColumns",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableActivatedRow",
        "type": "any",
        "label": "当前选中行数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableActivatedRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableRowEmit",
        "type": "any",
        "label": "表格行点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "tableRowEmit",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "tableCheckedRow",
        "type": "{ [property: string]: any[] }",
        "label": "表格行点击事件",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableCheckedRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableLoading",
        "type": "XBoolean",
        "label": "是否启用加载 loading",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "tableLoading",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableVirtualScroll",
        "type": "boolean",
        "label": "表格开启虚拟滚动",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<boolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "tableVirtualScroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableBodyHeight",
        "type": "number",
        "label": "表格 body 数据高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "tableBodyHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableMinBufferPx",
        "type": "number",
        "label": "表格超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableMinBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableMaxBufferPx",
        "type": "number",
        "label": "表格渲染新数据缓冲区的像素，对应 cdk scroll 中的参数",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableMaxBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableAdaptionHeight",
        "type": "XNumber",
        "label": "表格自适应高度，table 高度等于屏幕高度减掉此处设置的数值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "tableAdaptionHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableDocPercent",
        "type": "XNumber",
        "label": "表格文档高度百分比，弹窗百分比高度用到",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "tableDocPercent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableRowHeight",
        "type": "number",
        "label": "表格行高度，单位 px",
        "default": "42",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,42)",
          "@XInputNumber()"
        ],
        "attr": "tableRowHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "treeData",
        "type": "XData<XTreeNode>",
        "label": "树节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "treeData",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "treeActivatedChange",
        "type": "XTreeNode",
        "label": "树当前点击选中的节点变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "treeActivatedChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "treeActivatedId",
        "type": "any",
        "label": "树当前激活的节点 Id",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "treeActivatedId",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "treeExpandedLevel",
        "type": "XNumber",
        "label": "树默认展开的层级",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,0)",
          "@XInputNumber()"
        ],
        "attr": "treeExpandedLevel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "treeChecked",
        "type": "any[]",
        "label": "树 checkbox 选中的节点",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "treeChecked",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "treeCheckbox",
        "type": "XBoolean",
        "label": "树显示多选框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "treeCheckbox",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "treeTableConnect",
        "type": "any",
        "label": "树和表格同时存在的时候，树节点 id 对应表格的属性，用来做表格数据过滤",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "treeTableConnect",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "search",
        "type": "XFindSearchOption",
        "label": "数据查询过滤表单",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "search",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XFindProperty",
    "extends": "XControlValueAccessor<any"
  },
  "XFormPrefix": {
    "type": "const",
    "label": "Form",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFormPrefix",
    "selector": "x-form",
    "decorator": "component",
    "value": "'x-form'"
  },
  "XFormProperty": {
    "type": "class",
    "label": "Form Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "formGroup",
        "type": "UntypedFormGroup",
        "label": "表单 FormGroup",
        "default": "new UntypedFormGroup({})",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "formGroup",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "title",
        "type": "string",
        "label": "表单名称",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "space",
        "type": "XNumber",
        "label": "控件间距，单位rem",
        "default": "1.75",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1.75)",
          "@XInputNumber()"
        ],
        "attr": "space",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "span",
        "type": "XNumber",
        "label": "控件宽度，24栅格",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "span",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelSuffix",
        "type": "string",
        "label": "标签后缀",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,'')"
        ],
        "attr": "labelSuffix",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "controls",
        "type": "XFormControlOption[] | XFormRow[]",
        "label": "表单控件",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "controls",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "表单宽度",
        "default": "'100%'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'100%')"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "controlTpl",
        "type": "XFormTemplate",
        "label": "自定义模板",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "controlTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "xSubmit",
        "type": "SubmitEvent",
        "label": "Submit",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xSubmit",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XFormProperty",
    "value": "{ [property: string]: TemplateRef<any> }/*** Form Property*/@Component({ selector: `${XFormPrefix}-property`, template: '' })export class XFormProperty extends XFormProp {/*** @zh_CN 表单 FormGroup* @en_US Form FormGroup*/@Input() formGroup: UntypedFormGroup = new UntypedFormGroup({});/*** @zh_CN 表单名称* @en_US Form name*/@Input() title?: string;/*** @zh_CN 控件间距，单位rem* @en_US Control spacing, unit rem*/@Input() @XWithConfig<XNumber>(X_CONFIG_NAME, 1.75) @XInputNumber() space?: XNumber;/*** @zh_CN 控件宽度，24栅格* @en_US Control width, 24 grid*/@Input() @XInputNumber() span?: XNumber;/*** @zh_CN 标签后缀* @en_US Label suffix*/@Input() @XWithConfig<XNumber>(X_CONFIG_NAME, '') labelSuffix?: string;/*** @zh_CN 表单控件* @en_US Form control*/@Input() controls: XFormControlOption[] | XFormRow[] = [];/*** @zh_CN 表单宽度* @en_US Form width*/@Input() @XWithConfig<string>(X_CONFIG_NAME, '100%') width: string = '100%';/*** @zh_CN 自定义模板* @en_US Custom template*/@Input() controlTpl: XFormTemplate = {};/*** @zh_CN Submit* @en_US Submit*/@Output() xSubmit = new EventEmitter<SubmitEvent>();}",
    "extends": "XFormProp"
  },
  "undefined": {},
  "XControlOption": {
    "type": "interface",
    "label": "控件对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "value",
        "type": "any",
        "label": "值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "value",
        "propType": "",
        "example": ""
      },
      {
        "name": "defaultValue",
        "type": "any",
        "label": "初始默认值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "defaultValue",
        "propType": "",
        "example": ""
      },
      {
        "name": "control",
        "type": "XControlType",
        "label": "控件类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "control",
        "propType": "",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "readonly",
        "propType": "",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "required",
        "propType": "",
        "example": ""
      },
      {
        "name": "hidden",
        "type": "XBoolean",
        "label": "隐藏",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "hidden",
        "propType": "",
        "example": ""
      },
      {
        "name": "span",
        "type": "number",
        "label": "列宽",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "span",
        "propType": "",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "RegExp | RegExp[]",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "pattern",
        "propType": "",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "message",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入框的验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputValidator",
        "propType": "",
        "example": ""
      },
      {
        "name": "change",
        "type": "() => void",
        "label": "外部改变事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "change",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XControlOption",
    "extends": "XIdentityProperty"
  },
  "XControl": {
    "type": "class",
    "label": "控件对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "value",
        "type": "any",
        "label": "值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "value",
        "propType": "",
        "example": ""
      },
      {
        "name": "nonNullable",
        "type": "any",
        "label": "开启这个，执行 reset 的时候初始为设置的 value，默认为 null",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "nonNullable",
        "propType": "",
        "example": ""
      },
      {
        "name": "control",
        "type": "XControlType",
        "label": "控件类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "control",
        "propType": "",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "readonly",
        "propType": "",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "required",
        "propType": "",
        "example": ""
      },
      {
        "name": "hidden",
        "type": "XBoolean",
        "label": "隐藏",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "hidden",
        "propType": "",
        "example": ""
      },
      {
        "name": "span",
        "type": "number",
        "label": "列宽",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "span",
        "propType": "",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "RegExp | RegExp[]",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "pattern",
        "propType": "",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "message",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入框的验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputValidator",
        "propType": "",
        "example": ""
      },
      {
        "name": "change",
        "type": "() => void",
        "label": "外部改变事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "change",
        "propType": "",
        "example": ""
      },
      {
        "name": "setValidators",
        "type": "() => void",
        "label": "设置验证",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "setValidators",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XControl",
    "extends": "XIdentity",
    "implements": "XControlOption"
  },
  "XFormRow": {
    "type": "interface",
    "label": "表单行对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "title",
        "type": "string",
        "label": "行标题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "title",
        "propType": "",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "行图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "controls",
        "type": "XFormControlOption[]",
        "label": "行中的控件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "controls",
        "propType": "",
        "example": ""
      },
      {
        "name": "hidden",
        "type": "XBoolean",
        "label": "隐藏",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "hidden",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XFormRow"
  },
  "XControlPrefix": {
    "type": "const",
    "label": "Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XControlPrefix",
    "selector": "x-control",
    "decorator": "component",
    "value": "'x-control'"
  },
  "XControlProperty": {
    "type": "class",
    "label": "Control Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "option",
        "type": "XControlOption",
        "label": "控件对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "option",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XControlProperty"
  },
  "XFormControl": {
    "type": "class",
    "label": "Form control",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "messages",
        "type": "string[]",
        "label": "提示信息",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "messages",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XFormControl",
    "extends": "UntypedFormControl"
  },
  "XFormControlOption": {
    "type": "type",
    "label": "表单控件参数",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFormControlOption",
    "value": "XFormControlOption =| XInputControlOption| XSelectControlOption| XCascadeControlOption| XCheckboxControlOption| XColorPickerControlOption| XDatePickerControlOption| XInputNumberControlOption| XRadioControlOption| XRateControlOption| XSliderSelectControlOption| XSwitchControlOption| XTimePickerControlOption| XFindControlOption| XTemplateControlOption;"
  },
  "XFormControlComponent": {
    "type": "type",
    "label": "表单控件组件",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFormControlComponent",
    "value": "XFormControlComponent =| XInputComponent| XSelectComponent| XCascadeComponent| XCheckboxComponent| XColorPickerComponent| XDatePickerComponent| XInputNumberComponent| XRadioComponent| XRateComponent| XSliderSelectComponent| XSwitchComponent| XTimePickerComponent| XTextareaComponent| XFindComponent| XAutoCompleteComponent;"
  },
  "XFormControlType": {
    "type": "type",
    "label": "表单控件类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFormControlType",
    "value": "XFormControlType =| XInputControl| XSelectControl| XCascadeControl| XCheckboxControl| XColorPickerControl| XDatePickerControl| XInputNumberControl| XRadioControl| XRateControl| XSliderSelectControl| XSwitchControl| XTimePickerControl| XTextareaControl| XFindControl| XAutoCompleteControl;"
  },
  "XControlType": {
    "type": "type",
    "label": "表单控件类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XControlType",
    "value": "XControlType =| 'input'| 'select'| 'cascade'| 'checkbox'| 'color-picker'| 'date-picker'| 'input-number'| 'radio'| 'rate'| 'slider-select'| 'switch'| 'time-picker'| 'textarea'| 'find'| 'auto-complete'| 'template';"
  },
  "XInputControlOption": {
    "type": "interface",
    "label": "Input Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputControlOption",
    "extends": "XControlOption,"
  },
  "XSelectControlOption": {
    "type": "interface",
    "label": "Select Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSelectControlOption",
    "extends": "XControlOption,"
  },
  "XCascadeControlOption": {
    "type": "interface",
    "label": "Cascade Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCascadeControlOption",
    "extends": "XControlOption,"
  },
  "XCheckboxControlOption": {
    "type": "interface",
    "label": "Checkbox Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCheckboxControlOption",
    "extends": "XControlOption,"
  },
  "XColorPickerControlOption": {
    "type": "interface",
    "label": "ColorPicker Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XColorPickerControlOption",
    "extends": "XControlOption,"
  },
  "XDatePickerControlOption": {
    "type": "interface",
    "label": "DatePicker Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XDatePickerControlOption",
    "extends": "XControlOption,"
  },
  "XInputNumberControlOption": {
    "type": "interface",
    "label": "InputNumber Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputNumberControlOption",
    "extends": "XControlOption,"
  },
  "XRadioControlOption": {
    "type": "interface",
    "label": "Radio Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRadioControlOption",
    "extends": "XControlOption,"
  },
  "XRateControlOption": {
    "type": "interface",
    "label": "Rate Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRateControlOption",
    "extends": "XControlOption,"
  },
  "XSliderSelectControlOption": {
    "type": "interface",
    "label": "SliderSelect Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSliderSelectControlOption",
    "extends": "XControlOption,"
  },
  "XSwitchControlOption": {
    "type": "interface",
    "label": "Switch Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSwitchControlOption",
    "extends": "XControlOption,"
  },
  "XTimePickerControlOption": {
    "type": "interface",
    "label": "TimePicker Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimePickerControlOption",
    "extends": "XControlOption,"
  },
  "XTextareaControlOption": {
    "type": "interface",
    "label": "Textarea Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTextareaControlOption",
    "extends": "XControlOption,"
  },
  "XFindControlOption": {
    "type": "interface",
    "label": "Find Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XFindControlOption",
    "extends": "XControlOption,"
  },
  "XAutoCompleteControlOption": {
    "type": "interface",
    "label": "AutoComplete Control",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XAutoCompleteControlOption",
    "extends": "XControlOption,"
  },
  "XHighlightPrefix": {
    "type": "const",
    "label": "Highlight",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XHighlightPrefix",
    "selector": "x-highlight",
    "decorator": "component",
    "value": "'x-highlight'"
  },
  "XHighlightProperty": {
    "type": "class",
    "label": "Highlight Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "string",
        "label": "代码类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "data",
        "type": "string",
        "label": "数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "highlightLines",
        "type": "XHighlightLines",
        "label": "高亮行数据",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "highlightLines",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showCopy",
        "type": "XBoolean",
        "label": "显示复制按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showCopy",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XHighlightProperty",
    "extends": "XProperty"
  },
  "XIconPrefix": {
    "type": "const",
    "label": "Icon",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XIconPrefix",
    "selector": "x-icon",
    "decorator": "component",
    "value": "'x-icon'"
  },
  "XIconProperty": {
    "type": "class",
    "label": "Icon Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "href",
        "type": "string",
        "label": "SVG 图标根路径地址，可以通过全局只配置一次，所有图标资源在 github 上的 ng-nest-icon 中",
        "default": "XIconHref",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,XIconHref)"
        ],
        "attr": "href",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "string",
        "label": "图标类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "color",
        "type": "string | string[]",
        "label": "图标颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "color",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rotate",
        "type": "XNumber",
        "label": "图标旋转角度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "rotate",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "spin",
        "type": "XBoolean",
        "label": "loading效果（图标一直旋转）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "spin",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "to",
        "type": "string",
        "label": "变化为的图标（未实现）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "to",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XIconProperty",
    "extends": "XProperty"
  },
  "XImagePrefix": {
    "type": "const",
    "label": "Image",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XImagePrefix",
    "selector": "x-image",
    "decorator": "component",
    "value": "'x-image'"
  },
  "XImageProperty": {
    "type": "class",
    "label": "Image Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "src",
        "type": "string",
        "label": "图片显示地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "src",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "图片宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "图片高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "height",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "alt",
        "type": "string",
        "label": "图像描述",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "alt",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "fallback",
        "type": "string",
        "label": "加载失败显示的地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "fallback",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "previewText",
        "type": "string",
        "label": "预览文字",
        "default": "'预览'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "previewText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "label": "渐进加载显示的图片",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "previewTpl",
        "type": "XTemplate",
        "label": "自定义预览操作",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "previewTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "error",
        "type": "",
        "label": "图片加载错误",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "error",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "load",
        "type": "",
        "label": "图片加载完成",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "load",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XImageProperty",
    "extends": "XProperty"
  },
  "XImageNode": {
    "type": "interface",
    "label": "图片节点数据",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "src",
        "type": "string",
        "label": "图片显示地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "src",
        "propType": "",
        "example": ""
      },
      {
        "name": "alt",
        "type": "string",
        "label": "图像描述",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "alt",
        "propType": "",
        "example": ""
      },
      {
        "name": "fallback",
        "type": "string",
        "label": "加载失败显示的地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "fallback",
        "propType": "",
        "example": ""
      },
      {
        "name": "activated",
        "type": "boolean",
        "label": "当前激活的图片",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "activated",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XImageNode"
  },
  "XImagePreviewPrefix": {
    "type": "const",
    "label": "Image Preview",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XImagePreviewPrefix",
    "selector": "x-image-preview",
    "decorator": "component",
    "value": "'x-image-preview'"
  },
  "XInputPrefix": {
    "type": "const",
    "label": "Input",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputPrefix",
    "selector": "x-input",
    "decorator": "component",
    "value": "'x-input'"
  },
  "XInputProperty": {
    "type": "class",
    "label": "Input Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XInputType",
        "label": "输入类型",
        "default": "'text'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "clearable",
        "type": "XBoolean",
        "label": "清除按钮",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "clearable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "@Input(",
        "type": "@Input()",
        "label": "图标布局方式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "&#64;Input(",
        "propType": "",
        "example": ""
      },
      {
        "name": "iconSpin",
        "type": "XBoolean",
        "label": "图标动画",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "iconSpin",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxlength",
        "type": "XNumber",
        "label": "输入最大长度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "maxlength",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "max",
        "type": "XNumber",
        "label": "最大值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "max",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "min",
        "type": "XNumber",
        "label": "最小值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "min",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "width",
        "type": "XNumber",
        "label": "宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputStyle",
        "type": "{ [style: string]: any }",
        "label": "输入框样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputStyle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "validator",
        "type": "XBoolean",
        "label": "初始启用验证，在输入值都自动开启",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "validator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputPadding",
        "type": "XNumber",
        "label": "输入框内边距，rem。主要指输入框中的左右内边距",
        "default": "0.75",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,0.75)"
        ],
        "attr": "inputPadding",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputIconPadding",
        "type": "XNumber",
        "label": "输入框内边距(包含图标)，rem。主要指输入框中的有图标的时候左右内边距",
        "default": "2.15",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,2.15)"
        ],
        "attr": "inputIconPadding",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "clearEmit",
        "type": "any",
        "label": "清除按钮的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "clearEmit",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xFocus",
        "type": "any",
        "label": "获取焦点的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xFocus",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xBlur",
        "type": "any",
        "label": "失去焦点的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xBlur",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xInput",
        "type": "any",
        "label": "Input",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xInput",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xKeydown",
        "type": "any",
        "label": "Keydown",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xKeydown",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xClick",
        "type": "any",
        "label": "Click",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xMouseenter",
        "type": "any",
        "label": "Mouseenter",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xMouseenter",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xMouseleave",
        "type": "any",
        "label": "Mouseleave",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xMouseleave",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "xComposition",
        "type": "any",
        "label": "Composition",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "xComposition",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XInputProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XInputOption"
  },
  "XInputType": {
    "type": "type",
    "label": "输入框类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputType",
    "value": "'text' | 'password' | 'number'"
  },
  "XInputIconLayoutType": {
    "type": "type",
    "label": "图标布局方式，指在输入框中的位置",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputIconLayoutType",
    "value": "XPositionLeftRight"
  },
  "XInputGroupPrefix": {
    "type": "const",
    "label": "Input Group",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputGroupPrefix",
    "selector": "x-input-group",
    "decorator": "component",
    "value": "'x-input-group'"
  },
  "XInputGroupProperty": {
    "type": "class",
    "label": "Input Group Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_GROUP_NAME)"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_GROUP_NAME)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "compact",
        "type": "XBoolean",
        "label": "是否使用紧凑模式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_GROUP_NAME)"
        ],
        "attr": "compact",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XInputGroupProperty",
    "extends": "XProperty"
  },
  "XInputNumberPrefix": {
    "type": "const",
    "label": "InputNumber",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XInputNumberPrefix",
    "selector": "x-input-number",
    "decorator": "component",
    "value": "'x-input-number'"
  },
  "XInputNumberProperty": {
    "type": "class",
    "label": "InputNumber Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "min",
        "type": "XNumber",
        "label": "最小值",
        "default": "Number.MIN_SAFE_INTEGER",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "min",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "max",
        "type": "XNumber",
        "label": "最大值",
        "default": "Number.MAX_SAFE_INTEGER",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "max",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "step",
        "type": "XNumber",
        "label": "步数",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "step",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "debounce",
        "type": "XNumber",
        "label": "按住后步进速度",
        "default": "40",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "debounce",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "precision",
        "type": "XNumber",
        "label": "精度",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "precision",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "formatter",
        "type": "(value: number) => XNumber",
        "label": "数字格式化",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "formatter",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XInputNumberProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XInputNumberOption"
  },
  "XRowPrefix": {
    "type": "const",
    "label": "Row",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRowPrefix",
    "selector": "x-row",
    "decorator": "component",
    "value": "'x-row'"
  },
  "XRowProperty": {
    "type": "class",
    "label": "Row Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "space",
        "type": "XNumber",
        "label": "列间隔，rem",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "space",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的水平排列方式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的垂直排列方式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XRowProperty",
    "extends": "XProperty"
  },
  "XColPrefix": {
    "type": "const",
    "label": "Col",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XColPrefix",
    "selector": "x-col",
    "decorator": "component",
    "value": "'x-col'"
  },
  "XColProperty": {
    "type": "class",
    "label": "Col Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "span",
        "type": "XNumber",
        "label": "24栅格布局，列占的宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "span",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "offset",
        "type": "XNumber",
        "label": "栅格左侧的间隔格数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "offset",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "xs",
        "type": "XNumber",
        "label": "<768px",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "xs",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sm",
        "type": "XNumber",
        "label": "≥768px",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "sm",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "md",
        "type": "XNumber",
        "label": "≥992px",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "md",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lg",
        "type": "XNumber",
        "label": "≥1200px",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "lg",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "xl",
        "type": "XNumber",
        "label": "≥1920px",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "xl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inherit",
        "type": "XBoolean",
        "label": "默认样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "inherit",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XColProperty",
    "extends": "XProperty"
  },
  "XLinkPrefix": {
    "type": "const",
    "label": "Link",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XLinkPrefix",
    "selector": "x-link",
    "decorator": "component",
    "value": "'x-link'"
  },
  "XLinkProperty": {
    "type": "class",
    "label": "Link Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "href",
        "type": "string",
        "label": "链接",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "href",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "underline",
        "type": "XBoolean",
        "label": "下划线",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "underline",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "iconRight",
        "type": "XBoolean",
        "label": "图标靠右对齐",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "iconRight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "preventDefault",
        "type": "XBoolean",
        "label": "阻止超链接的默认行为",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "preventDefault",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XLinkType",
        "label": "链接类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "target",
        "type": "string",
        "label": "打开方式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "target",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XLinkProperty",
    "extends": "XProperty"
  },
  "XListPrefix": {
    "type": "const",
    "label": "List",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XListPrefix",
    "selector": "x-list",
    "decorator": "component",
    "value": "'x-list'"
  },
  "XListProperty": {
    "type": "class",
    "label": "List Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XListNode>",
        "label": "列表数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "multiple",
        "type": "XNumber",
        "label": "多选个数，设置为0，不限制选择个数",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "multiple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selectAll",
        "type": "XBoolean",
        "label": "多选添加全选功能，适用于 multiple=0",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "selectAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selectAllText",
        "type": "string",
        "label": "全选的文字",
        "default": "'全选'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "selectAllText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "checked",
        "type": "XBoolean",
        "label": "选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "checked",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "drag",
        "type": "XBoolean",
        "label": "拖动",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "drag",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "objectArray",
        "type": "XBoolean",
        "label": "当开启多选的时候，ngModel 的值为对象数组",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "objectArray",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "header",
        "type": "XTemplate",
        "label": "列表头部",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "header",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "footer",
        "type": "XTemplate",
        "label": "列表底部",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "footer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "scrollElement",
        "type": "HTMLElement",
        "label": "滚动区域元素",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "scrollElement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "loadMore",
        "type": "XBoolean",
        "label": "加载更多",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "loadMore",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "loadMoreText",
        "type": "string",
        "label": "加载更多的文字",
        "default": "'加载更多'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "loadMoreText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "loadingMoreText",
        "type": "string",
        "label": "正在加载中的文字",
        "default": "'正在加载中'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "loadingMoreText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScroll",
        "type": "XBoolean",
        "label": "开启虚拟滚动，不支持节点拖动功能",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "virtualScroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "scrollHeight",
        "type": "XNumber",
        "label": "虚拟滚动高度, 实际会去掉头尾、全选、更多的高度",
        "default": "400",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,400)",
          "@XInputNumber()"
        ],
        "attr": "scrollHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "heightAdaption",
        "type": "ElementRef<HTMLElement> | HTMLElement",
        "label": "虚拟滚动高度自适应指定元素",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "heightAdaption",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minBufferPx",
        "type": "number",
        "label": "超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "minBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxBufferPx",
        "type": "number",
        "label": "渲染新数据缓冲区的像素，对应 cdk scroll 中的参数",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "maxBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "keywordText",
        "type": "string | string[]",
        "label": "关键字高亮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "keywordText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "caseSensitive",
        "type": "XBoolean",
        "label": "匹配关键字区分大小写",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "caseSensitive",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inPortal",
        "type": "XBoolean",
        "label": "在弹框中选择时的样式，根据尺寸来决定",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "inPortal",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "onSelectAll",
        "type": "boolean",
        "label": "Full event",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "onSelectAll",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeMouseenter",
        "type": "XListNode",
        "label": "节点 mouseenter 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeMouseenter",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeMouseleave",
        "type": "XListNode",
        "label": "节点 mouseleave 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeMouseleave",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeClick",
        "type": "XListNode",
        "label": "节点点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "dropListDropped",
        "type": "XListDragDrop",
        "label": "拖动结束事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "dropListDropped",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "keyManagerTabOut",
        "type": "void",
        "label": "Tab out 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "keyManagerTabOut",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "keyManagerChange",
        "type": "number",
        "label": "Tab out 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "keyManagerChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XListProperty",
    "extends": "XControlValueAccessor<any>"
  },
  "XListNode": {
    "type": "interface",
    "label": "List 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "divided",
        "type": "boolean",
        "label": "分割线",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "divided",
        "propType": "",
        "example": ""
      },
      {
        "name": "event",
        "type": "Event",
        "label": "事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "event",
        "propType": "",
        "example": ""
      },
      {
        "name": "hover",
        "type": "boolean",
        "label": "悬停",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "hover",
        "propType": "",
        "example": ""
      },
      {
        "name": "openPortal",
        "type": "boolean",
        "label": "打开弹框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "openPortal",
        "propType": "",
        "example": ""
      },
      {
        "name": "active",
        "type": "boolean",
        "label": "激活",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "active",
        "propType": "",
        "example": ""
      },
      {
        "name": "change",
        "type": "Function",
        "label": "检查更新",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "change",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XListNode",
    "extends": "XParentIdentityProperty<XListNode>"
  },
  "XListOptionPrefix": {
    "type": "const",
    "label": "List Option",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XListOptionPrefix",
    "selector": "x-list-option",
    "decorator": "component",
    "value": "'x-list-option'"
  },
  "XListOptionProperty": {
    "type": "class",
    "label": "List Option Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "node",
        "type": "XListNode",
        "label": "节点参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "node",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "checked",
        "type": "XBoolean",
        "label": "选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "checked",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selected",
        "type": "boolean",
        "label": "选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "selected",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "boolean",
        "label": "激活",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "openPortal",
        "type": "boolean",
        "label": "打开弹框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "openPortal",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "optionClass",
        "type": "(node: XListNode) => { [className: string]: boolean }",
        "label": "自定义数据对象样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "optionClass",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "divided",
        "type": "boolean",
        "label": "分割线",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "divided",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "leaf",
        "type": "boolean",
        "label": "有子节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "leaf",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "keywordText",
        "type": "string | string[]",
        "label": "关键字高亮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "keywordText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "caseSensitive",
        "type": "XBoolean",
        "label": "匹配关键字区分大小写",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "caseSensitive",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "boolean",
        "label": "有子节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XListOptionProperty"
  },
  "XLoadingPrefix": {
    "type": "const",
    "label": "Loading",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XLoadingPrefix",
    "selector": "x-loading",
    "decorator": "component",
    "value": "'x-loading'"
  },
  "XLoadingProperty": {
    "type": "class",
    "label": "Loading Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "loading",
        "type": "XBoolean",
        "label": "显示 loading",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input('x-loading')",
          "@XInputBoolean()"
        ],
        "attr": "x-loading",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "zIndex",
        "type": "XNumber",
        "label": "层级",
        "default": "10",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,10)"
        ],
        "attr": "zIndex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize | number",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "text",
        "type": "XTemplate",
        "label": "显示文字，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME)"
        ],
        "attr": "text",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "显示的图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "color",
        "type": "string",
        "label": "颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "color",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "fullScreen",
        "type": "XBoolean",
        "label": "全屏显示",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "fullScreen",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "radius",
        "type": "XBoolean | XCorner[]",
        "label": "圆角覆盖显示",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "radius",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "background",
        "type": "string",
        "label": "背景样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "background",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XLoadingProperty",
    "extends": "XProperty"
  },
  "XMenuPrefix": {
    "type": "const",
    "label": "Menu",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMenuPrefix",
    "selector": "x-menu",
    "decorator": "component",
    "value": "'x-menu'"
  },
  "XMenuProperty": {
    "type": "class",
    "label": "Menu Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XMenuNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "layout",
        "type": "XMenuLayout",
        "label": "布局方向",
        "default": "'row'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "layout",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度，只有布局 layout 为 'column' 生效",
        "default": "'12rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'12rem')"
        ],
        "attr": "width",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "collapsed",
        "type": "XBoolean",
        "label": "缩起菜单",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "collapsed",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "trigger",
        "type": "XMenuTrigger",
        "label": "触发方式，只针对横向布局",
        "default": "'hover'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XMenuTrigger>(X_CONFIG_NAME,'hover')"
        ],
        "attr": "trigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedAll",
        "type": "XBoolean",
        "label": "展开的所有层级，只对 layout 布局为 'column' 的生效",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "expandedAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedLevel",
        "type": "XNumber",
        "label": "默认展开的层级，只对 layout 布局为 'column' 的生效",
        "default": "-1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "expandedLevel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedId",
        "type": "any",
        "label": "当前激活的节点 id",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "activatedId",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "target",
        "type": "string | HTMLElement",
        "label": "滚动容器",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "target",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalMinWidth",
        "type": "string | number",
        "label": "弹框的最小宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "portalMinWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeClick",
        "type": "XMenuNode",
        "label": "节点点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "activatedIdChange",
        "type": "any",
        "label": "节点点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activatedIdChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XMenuProperty",
    "extends": "XProperty"
  },
  "XMenuNode": {
    "type": "interface",
    "label": "MenuNode 节点数据",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "open",
        "type": "boolean",
        "label": "展开",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "open",
        "propType": "",
        "example": ""
      },
      {
        "name": "childrenLoaded",
        "type": "boolean",
        "label": "子节点已加载过",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "childrenLoaded",
        "propType": "",
        "example": ""
      },
      {
        "name": "category",
        "type": "string",
        "label": "分类显示，设置值后节点显示成分类样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "category",
        "propType": "",
        "example": ""
      },
      {
        "name": "categoryNode",
        "type": "boolean",
        "label": "分类节点，通过内部计算",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "categoryNode",
        "propType": "",
        "example": ""
      },
      {
        "name": "change",
        "type": "Function",
        "label": "检查更新",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "change",
        "propType": "",
        "example": ""
      },
      {
        "name": "routerLink",
        "type": "string | any[]",
        "label": "路由",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "routerLink",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XMenuNode",
    "extends": "XParentIdentityProperty<XMenuNode>"
  },
  "XMenuLayout": {
    "type": "type",
    "label": "布局方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMenuLayout",
    "value": "'row' | 'column'"
  },
  "XMenuTrigger": {
    "type": "type",
    "label": "触发方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMenuTrigger",
    "value": "XTrigger"
  },
  "XMenuNodePrefix": {
    "type": "const",
    "label": "Menu Node",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMenuNodePrefix",
    "selector": "x-menu-node",
    "decorator": "component",
    "value": "'x-menu-node'"
  },
  "XMenuNodeProperty": {
    "type": "class",
    "label": "Menu Node Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "node",
        "type": "XMenuNode",
        "label": "节点数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "node",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XMenuNodeProperty",
    "extends": "XProperty"
  },
  "XMessagePrefix": {
    "type": "const",
    "label": "Message",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessagePrefix",
    "selector": "x-message",
    "decorator": "component",
    "value": "'x-message'"
  },
  "XMessageOption": {
    "type": "interface",
    "label": "Message Option",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "id",
        "type": "string",
        "label": "消息框的 id",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "id",
        "propType": "",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPlace",
        "label": "方位，九宫格",
        "default": "'top'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "placement",
        "propType": "",
        "example": ""
      },
      {
        "name": "offset",
        "type": "string | string[]",
        "label": "偏移距离",
        "default": "'2rem'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "offset",
        "propType": "",
        "example": ""
      },
      {
        "name": "type",
        "type": "XMessageType",
        "label": "类型",
        "default": "'info'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "displayType",
        "type": "XMessageDisplayType",
        "label": "多个消息的时候，显示类型",
        "default": "'list'",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "displayType",
        "propType": "",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度",
        "default": "",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "width",
        "propType": "",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "height",
        "propType": "",
        "example": ""
      },
      {
        "name": "duration",
        "type": "number",
        "label": "延迟关闭时间",
        "default": "3000",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "duration",
        "propType": "",
        "example": ""
      },
      {
        "name": "hideClose",
        "type": "boolean",
        "label": "隐藏关闭按钮",
        "default": "true",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "hideClose",
        "propType": "",
        "example": ""
      },
      {
        "name": "showIcon",
        "type": "boolean",
        "label": "显示图标",
        "default": "true",
        "withConfig": true,
        "description": "",
        "decorator": [],
        "attr": "showIcon",
        "propType": "",
        "example": ""
      },
      {
        "name": "duration$",
        "type": "Subscription | null",
        "label": "延迟关闭订阅后的对象，用来释放或取消",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "duration$",
        "propType": "",
        "example": ""
      },
      {
        "name": "durationSub",
        "type": "Subject<any>",
        "label": "延迟关闭订阅对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "durationSub",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XMessageOption",
    "extends": "XAlertOption"
  },
  "XMessageOverlayRef": {
    "type": "interface",
    "label": "九宫格中的消息对象",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessageOverlayRef",
    "extends": "XPortalOverlayRef<XMessageComponent>"
  },
  "XMessagePlacementRef": {
    "type": "interface",
    "label": "九宫格中的消息对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "ref",
        "type": "XMessageOverlayRef",
        "label": "方位对应的 overlayRef",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "ref",
        "propType": "",
        "example": ""
      },
      {
        "name": "list",
        "type": "XMessageOption[]",
        "label": "对应的消息 list 数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "list",
        "propType": "",
        "example": ""
      },
      {
        "name": "closeAll",
        "type": "() => void",
        "label": "关闭所有数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "closeAll",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XMessagePlacementRef"
  },
  "XMessageType": {
    "type": "type",
    "label": "类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessageType",
    "value": "XStatus"
  },
  "XMessageBoxPrefix": {
    "type": "const",
    "label": "MessageBox",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessageBoxPrefix",
    "selector": "x-message-box",
    "decorator": "component",
    "value": "'x-message-box'"
  },
  "XMessageBoxOption": {
    "type": "interface",
    "label": "MessageBox Option",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "placement",
        "type": "XPlace",
        "label": "方位，九宫格",
        "default": "'top'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "placement",
        "propType": "",
        "example": ""
      },
      {
        "name": "offset",
        "type": "string | string[]",
        "label": "偏移距离",
        "default": "'2rem'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "offset",
        "propType": "",
        "example": ""
      },
      {
        "name": "type",
        "type": "XMessageBoxType",
        "label": "类型",
        "default": "'info'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度",
        "default": "'16rem'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "width",
        "propType": "",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "height",
        "propType": "",
        "example": ""
      },
      {
        "name": "hideClose",
        "type": "boolean",
        "label": "隐藏关闭按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "hideClose",
        "propType": "",
        "example": ""
      },
      {
        "name": "showIcon",
        "type": "boolean",
        "label": "显示图标",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "showIcon",
        "propType": "",
        "example": ""
      },
      {
        "name": "showCancel",
        "type": "boolean",
        "label": "显示取消按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "showCancel",
        "propType": "",
        "example": ""
      },
      {
        "name": "callback",
        "type": "XMessageBoxCallback",
        "label": "关闭事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "callback",
        "propType": "",
        "example": ""
      },
      {
        "name": "backdropClose",
        "type": "boolean",
        "label": "点击遮罩关闭",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "backdropClose",
        "propType": "",
        "example": ""
      },
      {
        "name": "confirmText",
        "type": "string",
        "label": "确认按钮文字",
        "default": "'确定'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "confirmText",
        "propType": "",
        "example": ""
      },
      {
        "name": "cancelText",
        "type": "string",
        "label": "取消按钮文字",
        "default": "'取消'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "cancelText",
        "propType": "",
        "example": ""
      },
      {
        "name": "showInput",
        "type": "boolean",
        "label": "是否显示输入框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "showInput",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputPattern",
        "type": "RegExp | RegExp[]",
        "label": "匹配规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputPattern",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputInvalidMessage",
        "type": "string | string[]",
        "label": "匹配失败的信息提示",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputInvalidMessage",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputPlaceholder",
        "type": "string",
        "label": "输入框的占位符",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputPlaceholder",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputType",
        "type": "XInputType",
        "label": "输入框的类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputType",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputValue",
        "type": "string",
        "label": "输入框的值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputValue",
        "propType": "",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入框的验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "inputValidator",
        "propType": "",
        "example": ""
      },
      {
        "name": "beforeClose",
        "type": "XMessageBoxCallback",
        "label": "关闭前处理函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "beforeClose",
        "propType": "",
        "example": ""
      },
      {
        "name": "confirmLoading",
        "type": "XMessageBoxConfirmLoading",
        "label": "确认加载",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "confirmLoading",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XMessageBoxOption",
    "extends": "XAlertOption"
  },
  "XMessageBoxCallback": {
    "type": "interface",
    "label": "关闭的回调函数类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessageBoxCallback"
  },
  "XMessageBoxConfirmLoading": {
    "type": "type",
    "label": "确认加载",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessageBoxConfirmLoading",
    "value": "() => Observable<boolean>"
  },
  "XMessageBoxAction": {
    "type": "type",
    "label": "触发关闭的类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessageBoxAction",
    "value": "'confirm' | 'cancel' | 'close'"
  },
  "XMessageBoxOverlayRef": {
    "type": "interface",
    "label": "创建的消息对象",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XMessageBoxOverlayRef",
    "extends": "XPortalOverlayRef<XMessageBoxComponent>"
  },
  "XNotificationPrefix": {
    "type": "const",
    "label": "Notification",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XNotificationPrefix",
    "selector": "x-notification",
    "decorator": "component",
    "value": "'x-notification'"
  },
  "XNotificationOption": {
    "type": "interface",
    "label": "Notification Option",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "placement",
        "type": "XCorner",
        "label": "方位",
        "default": "'top-end'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "placement",
        "propType": "",
        "example": ""
      },
      {
        "name": "offset",
        "type": "string | string[]",
        "label": "偏移距离",
        "default": "'0.5rem'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "offset",
        "propType": "",
        "example": ""
      },
      {
        "name": "type",
        "type": "XNotificationType",
        "label": "类型",
        "default": "'info'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度",
        "default": "'20rem'",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "width",
        "propType": "",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "height",
        "propType": "",
        "example": ""
      },
      {
        "name": "duration",
        "type": "number",
        "label": "延迟关闭时间",
        "default": "4500",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "duration",
        "propType": "",
        "example": ""
      },
      {
        "name": "hideClose",
        "type": "boolean",
        "label": "隐藏关闭按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "hideClose",
        "propType": "",
        "example": ""
      },
      {
        "name": "showIcon",
        "type": "boolean",
        "label": "显示图标",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "showIcon",
        "propType": "",
        "example": ""
      },
      {
        "name": "duration$",
        "type": "Subscription | null",
        "label": "延迟关闭订阅后的对象，用来释放或取消",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "duration$",
        "propType": "",
        "example": ""
      },
      {
        "name": "durationSub",
        "type": "Subject<any>",
        "label": "延迟关闭订阅对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "durationSub",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XNotificationOption",
    "extends": "XAlertOption"
  },
  "XNotificationOverlayRef": {
    "type": "interface",
    "label": "九宫格中的消息对象",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XNotificationOverlayRef",
    "extends": "XPortalOverlayRef<XNotificationComponent>"
  },
  "XOutletPrefix": {
    "type": "const",
    "label": "Outlet 指令名称",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XOutletPrefix",
    "selector": "x-outlet",
    "decorator": "directive",
    "value": "'x-outlet'"
  },
  "XPageHeaderPrefix": {
    "type": "const",
    "label": "PageHeader",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPageHeaderPrefix",
    "selector": "x-page-header",
    "decorator": "component",
    "value": "'x-page-header'"
  },
  "XPageHeaderProperty": {
    "type": "class",
    "label": "PageHeader Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "backIcon",
        "type": "string",
        "label": "返回图标",
        "default": "'fto-arrow-left'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'fto-arrow-left')"
        ],
        "attr": "backIcon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "backText",
        "type": "string",
        "label": "返回文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "backText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "title",
        "type": "string",
        "label": "标题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "subTitle",
        "type": "string",
        "label": "副标题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "subTitle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "backClick",
        "type": "",
        "label": "点击返回的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "backClick",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPageHeaderProperty"
  },
  "XPaginationPrefix": {
    "type": "const",
    "label": "Pagination",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPaginationPrefix",
    "selector": "x-pagination",
    "decorator": "component",
    "value": "'x-pagination'"
  },
  "XPaginationSizeData": {
    "type": "const",
    "label": "分页选择条数",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPaginationSizeData",
    "value": "[10, 20, 50, 100]"
  },
  "XPaginationProperty": {
    "type": "class",
    "label": "Pagination Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "index",
        "type": "XNumber",
        "label": "当前页码",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1)",
          "@XInputNumber()"
        ],
        "attr": "index",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XNumber",
        "label": "每页显示条数",
        "default": "10",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,10)",
          "@XInputNumber()"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "total",
        "type": "XNumber",
        "label": "总数",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "total",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "query",
        "type": "XQuery",
        "label": "查询条件",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "query",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pageLinkSize",
        "type": "XNumber",
        "label": "最多显示的分页数量",
        "default": "5",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,5)",
          "@XInputNumber()"
        ],
        "attr": "pageLinkSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showEllipsis",
        "type": "XBoolean",
        "label": "显示首尾页跳转",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "showEllipsis",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showTotal",
        "type": "XBoolean",
        "label": "显示总条数",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "showTotal",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "space",
        "type": "XNumber",
        "label": "按钮间距，单位 rem （按 1rem = 16px 比例来计算）",
        "default": "0.25",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,0.25)",
          "@XInputNumber()"
        ],
        "attr": "space",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showBackground",
        "type": "XBoolean",
        "label": "添加背景色",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showBackground",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showSize",
        "type": "XBoolean",
        "label": "显示分页条数",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sizeWidth",
        "type": "XNumber",
        "label": "分页条数选择框的宽度",
        "default": "110",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,110)",
          "@XInputNumber()"
        ],
        "attr": "sizeWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showInputSize",
        "type": "XBoolean",
        "label": "显示输入分页条数（不能跟下拉选项同时使用）",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showInputSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputSizeWidth",
        "type": "XNumber",
        "label": "分页条数输入框的宽度",
        "default": "50",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,50)",
          "@XInputNumber()"
        ],
        "attr": "inputSizeWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sizeData",
        "type": "XData<XSelectNode>",
        "label": "分页条数的宽度",
        "default": "XPaginationSizeData",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XData<XSelectNode>>(X_CONFIG_NAME,XPaginationSizeData)"
        ],
        "attr": "sizeData",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用整个分页",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showJump",
        "type": "XBoolean",
        "label": "显示跳转输入框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showJump",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "jumpWidth",
        "type": "XNumber",
        "label": "跳转页的宽度",
        "default": "50",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,50)",
          "@XInputNumber()"
        ],
        "attr": "jumpWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "totalTpl",
        "type": "XTemplate",
        "label": "总数自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "totalTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "simple",
        "type": "XBoolean",
        "label": "简单分页",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "simple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "simpleIndexWidth",
        "type": "XNumber",
        "label": "简单分页输入框宽度",
        "default": "130",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,130)",
          "@XInputNumber()"
        ],
        "attr": "simpleIndexWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "queryChange",
        "type": "XQuery",
        "label": "页码变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "queryChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "indexChange",
        "type": "number",
        "label": "页码变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "indexChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "sizeChange",
        "type": "number",
        "label": "每页显示条数变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "sizeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPaginationProperty",
    "extends": "XProperty"
  },
  "XPaginationOption": {
    "type": "interface",
    "label": "PaginationOption",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "index",
        "type": "XNumber",
        "label": "当前页码",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "index",
        "propType": "",
        "example": ""
      },
      {
        "name": "size",
        "type": "XNumber",
        "label": "每页显示条数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "size",
        "propType": "",
        "example": ""
      },
      {
        "name": "total",
        "type": "XNumber",
        "label": "总数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "total",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XPaginationOption"
  },
  "XPopconfirmPrefix": {
    "type": "const",
    "label": "Popconfirm",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPopconfirmPrefix",
    "selector": "x-popconfirm",
    "decorator": "component",
    "value": "'x-popconfirm'"
  },
  "XPopconfirmProperty": {
    "type": "class",
    "label": "Popconfirm Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "title",
        "type": "XTemplate",
        "label": "标题，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "content",
        "type": "XTemplate",
        "label": "内容，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "content",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPlacement",
        "label": "弹出的位置",
        "default": "'bottom'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPlacement>(X_CONFIG_NAME,'bottom')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "trigger",
        "type": "XPopoverTrigger",
        "label": "激活方式",
        "default": "'click'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPopoverTrigger>(X_CONFIG_NAME,'click')"
        ],
        "attr": "trigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxWidth",
        "type": "string",
        "label": "最大宽度",
        "default": "'12rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'12rem')"
        ],
        "attr": "maxWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minWidth",
        "type": "string",
        "label": "最小宽度",
        "default": "'12rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'12rem')"
        ],
        "attr": "minWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "'fto-help-circle'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'fto-help-circle')"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "iconColor",
        "type": "string",
        "label": "图标颜色",
        "default": "'#e6a23c'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'#e6a23c')"
        ],
        "attr": "iconColor",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "cancelText",
        "type": "string",
        "label": "取消的文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "cancelText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "confirmText",
        "type": "string",
        "label": "确认的文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "confirmText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "confirmAsync",
        "type": "Observable<void>",
        "label": "确认异步 Observable",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "confirmAsync",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "condition",
        "type": "XBoolean",
        "label": "条件触发",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "condition",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "cancel",
        "type": "",
        "label": "取消的点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "cancel",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "confirm",
        "type": "",
        "label": "确认的点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "confirm",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPopconfirmProperty",
    "extends": "XProperty"
  },
  "XPopoverPrefix": {
    "type": "const",
    "label": "Popover",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPopoverPrefix",
    "selector": "x-popover",
    "decorator": "directive",
    "value": "'x-popover'"
  },
  "XPopoverProperty": {
    "type": "class",
    "label": "Popover Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "title",
        "type": "XTemplate",
        "label": "标题，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "content",
        "type": "XTemplate",
        "label": "内容，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "content",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "footer",
        "type": "XTemplate",
        "label": "底部，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "footer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "panelClass",
        "type": "string | string[]",
        "label": "内部样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "panelClass",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "connectTo",
        "type": "ElementRef<HTMLElement> | HTMLElement",
        "label": "指定参考对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "connectTo",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPlacement",
        "label": "弹出的位置",
        "default": "'top'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPlacement>(X_CONFIG_NAME,'top')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "trigger",
        "type": "XPopoverTrigger",
        "label": "激活方式",
        "default": "'hover'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPopoverTrigger>(X_CONFIG_NAME,'hover')"
        ],
        "attr": "trigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxWidth",
        "type": "string",
        "label": "最大宽度",
        "default": "'10rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'10rem')"
        ],
        "attr": "maxWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minWidth",
        "type": "string",
        "label": "最小宽度",
        "default": "'10rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'10rem')"
        ],
        "attr": "minWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "visible",
        "type": "XBoolean",
        "label": "显示/隐藏控制",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "visible",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "condition",
        "type": "XBoolean",
        "label": "条件触发",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "condition",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "mouseEnterDelay",
        "type": "number",
        "label": "鼠标移入后延时多少才显示",
        "default": "150",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "mouseEnterDelay",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "mouseLeaveDelay",
        "type": "number",
        "label": "鼠标移出后延时多少才隐藏",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "mouseLeaveDelay",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "visibleChange",
        "type": "XBoolean",
        "label": "显示/隐藏改变的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "visibleChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XPopoverProperty",
    "extends": "XProperty"
  },
  "XPopoverTrigger": {
    "type": "type",
    "label": "激活方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPopoverTrigger",
    "value": "'hover' | 'click' | 'focus'"
  },
  "XPopoverPortalPrefix": {
    "type": "const",
    "label": "Popover Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPopoverPortalPrefix",
    "selector": "x-popover-portal",
    "decorator": "component",
    "value": "'x-popover-portal'"
  },
  "XProgressPrefix": {
    "type": "const",
    "label": "Progress",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XProgressPrefix",
    "selector": "x-progress",
    "decorator": "component",
    "value": "'x-progress'"
  },
  "XProgressProperty": {
    "type": "class",
    "label": "Progress Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XProgressType",
        "label": "进度条类型",
        "default": "'line'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "percent",
        "type": "XNumber",
        "label": "显示进度 0-100",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "percent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "进度条高度",
        "default": "'1rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'1rem')"
        ],
        "attr": "height",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "status",
        "type": "XProgressStatus",
        "label": "状态",
        "default": "'normal'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "status",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "info",
        "type": "XBoolean",
        "label": "是否显示百分比文本",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "info",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inside",
        "type": "XBoolean",
        "label": "百分比文本是否显示在进度条里面",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "inside",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "format",
        "type": "Function",
        "label": "自定义百分比文本内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "format",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "color",
        "type": "XProgressColor",
        "label": "自定义颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "color",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "gradient",
        "type": "XProgressGradient",
        "label": "渐变颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "gradient",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "steps",
        "type": "number",
        "label": "步骤进度条",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "steps",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "stepWidth",
        "type": "string",
        "label": "单个步骤的宽度",
        "default": "'1rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'1rem')"
        ],
        "attr": "stepWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "stepFlex",
        "type": "XBoolean",
        "label": "单个步骤的宽度自适应",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "stepFlex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "thickness",
        "type": "string",
        "label": "圆环/仪表盘厚度",
        "default": "'0.5rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "thickness",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "string",
        "label": "圆环/仪表盘尺寸",
        "default": "'5rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "notchAngle",
        "type": "number",
        "label": "仪表盘缺口角度 0~300",
        "default": "80",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "notchAngle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "subsection",
        "type": "XBoolean",
        "label": "分段显示颜色，只适用 type = 'line'",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "subsection",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XProgressProperty",
    "extends": "XProperty"
  },
  "XProgressType": {
    "type": "type",
    "label": "进度条类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XProgressType",
    "value": "'line' | 'circle' | 'dashboard'"
  },
  "XProgressColor": {
    "type": "type",
    "label": "进度条颜色",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XProgressColor",
    "value": "string | XProgressColorNode[] | Function"
  },
  "XProgressColorNode": {
    "type": "interface",
    "label": "进度条节点颜色",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "color",
        "type": "string",
        "label": "颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "color",
        "propType": "",
        "example": ""
      },
      {
        "name": "percent",
        "type": "number",
        "label": "百分比",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "percent",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XProgressColorNode"
  },
  "XProgressStatus": {
    "type": "type",
    "label": "状态",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XProgressStatus",
    "value": "'normal' | 'active' | 'success' | 'exception' | 'warning'"
  },
  "XRadioPrefix": {
    "type": "const",
    "label": "Radio",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRadioPrefix",
    "selector": "x-radio",
    "decorator": "component",
    "value": "'x-radio'"
  },
  "XRadioProperty": {
    "type": "class",
    "label": "Radio Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XRadioNode>",
        "label": "单选框数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "button",
        "type": "XBoolean",
        "label": "按钮样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "button",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "XBoolean",
        "label": "图标样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tag",
        "type": "XBoolean",
        "label": "tag 标签样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "tag",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XButtonType",
        "label": "按钮/图标/ tag 标签样式时生效",
        "default": "'initial'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tagBordered",
        "type": "XBoolean",
        "label": "tag 标签边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "tagBordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tagDark",
        "type": "XBoolean",
        "label": "tag 标签深色主题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "tagDark",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "allowCancel",
        "type": "XBoolean",
        "label": "允许取消选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "allowCancel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "vertical",
        "type": "XBoolean",
        "label": "垂直布局，不支持 button 和 icon 样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "vertical",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XRadioProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XRadioOption"
  },
  "XRadioNode": {
    "type": "interface",
    "label": "Radio 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "title",
        "type": "string",
        "label": "图标的提示信息",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "title",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XRadioNode",
    "extends": "XIdentityProperty"
  },
  "XRatePrefix": {
    "type": "const",
    "label": "Rate",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRatePrefix",
    "selector": "x-rate",
    "decorator": "component",
    "value": "'x-rate'"
  },
  "XRateProperty": {
    "type": "class",
    "label": "Rate Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "count",
        "type": "XNumber",
        "label": "评分个数",
        "default": "5",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "count",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "half",
        "type": "XBoolean",
        "label": "半星模式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "half",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "color",
        "type": "XRateColor",
        "label": "颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XRateColor>(X_CONFIG_NAME)"
        ],
        "attr": "color",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "customTemp",
        "type": "TemplateRef<any>",
        "label": "自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "customTemp",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XRateProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XRateOption"
  },
  "XRateColor": {
    "type": "type",
    "label": "颜色类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XRateColor",
    "value": "string | { [color: string]: (rate: number) => boolean }"
  },
  "XResultPrefix": {
    "type": "const",
    "label": "Result",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XResultPrefix",
    "selector": "x-result",
    "decorator": "component",
    "value": "'x-result'"
  },
  "XResultProperty": {
    "type": "class",
    "label": "Result Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "status",
        "type": "XResultStatus",
        "label": "状态",
        "default": "'info'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "status",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "title",
        "type": "XTemplate",
        "label": "标题，支持模板自定义",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "title",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "XTemplate",
        "label": "图标，支持模板自定义",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "subTitle",
        "type": "XTemplate",
        "label": "小标题，支持模板自定义",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "subTitle",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XResultProperty",
    "extends": "XProperty"
  },
  "XSelectPrefix": {
    "type": "const",
    "label": "Select",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSelectPrefix",
    "selector": "x-select",
    "decorator": "component",
    "value": "'x-select'"
  },
  "XSelectProperty": {
    "type": "class",
    "label": "Select Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XSelectNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "clearable",
        "type": "XBoolean",
        "label": "清除按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "clearable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "async",
        "type": "XBoolean",
        "label": "异步加载",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "async",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPlacement",
        "label": "展示方位",
        "default": "'bottom'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPlacement>(X_CONFIG_NAME,'bottom')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "multiple",
        "type": "XBoolean",
        "label": "多选功能",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "multiple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selectAll",
        "type": "XBoolean",
        "label": "多选添加全选功能",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "selectAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selectAllText",
        "type": "string",
        "label": "全选的文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "selectAllText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalMaxHeight",
        "type": "string",
        "label": "下拉框的最大高度",
        "default": "'12rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'12rem')"
        ],
        "attr": "portalMaxHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalWidth",
        "type": "string",
        "label": "下拉框的宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "portalWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "search",
        "type": "XBoolean",
        "label": "输入搜索",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "search",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "caseSensitive",
        "type": "XBoolean",
        "label": "匹配区分大小写",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "caseSensitive",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "debounceTime",
        "type": "number",
        "label": "输入延迟执行时间，ms",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,200)"
        ],
        "attr": "debounceTime",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxTagCount",
        "type": "XNumber",
        "label": "多选时显示的选中数据个数，其它的在更多中显示，默认全部显示",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME)"
        ],
        "attr": "maxTagCount",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxTagContent",
        "type": "XTemplate",
        "label": "多选时显示的个数超过指定个数，显示的文字模版",
        "default": "'更多{{surplus}}个选中'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME)"
        ],
        "attr": "maxTagContent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScroll",
        "type": "XBoolean",
        "label": "开启虚拟滚动",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "virtualScroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XSelectProperty",
    "extends": "XControlValueAccessor<any>"
  },
  "XSelectPortalPrefix": {
    "type": "const",
    "label": "Select Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSelectPortalPrefix",
    "extends": "XParentIdentityProperty<XSelectNode>",
    "selector": "x-select-portal",
    "decorator": "component",
    "value": "'x-select-portal'"
  },
  "XSkeletonPrefix": {
    "type": "const",
    "label": "Skeleton",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSkeletonPrefix",
    "selector": "x-skeleton",
    "decorator": "component",
    "value": "'x-skeleton'"
  },
  "XSkeletonProperty": {
    "type": "class",
    "label": "Skeleton Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XSkeletonRow[]",
        "label": "骨架数据",
        "default": "[{ cols: [{ width: '10rem', type: 'title' }] }, { cols: [{}] }, { cols: [{}] }, { cols: [{ span: 16 }] }]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "loading",
        "type": "XBoolean",
        "label": "加载中",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "loading",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活动画",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "border",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "border",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XSkeletonProperty",
    "extends": "XProperty"
  },
  "XSkeletonRow": {
    "type": "interface",
    "label": "行",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "cols",
        "type": "XSkeletonCol[]",
        "label": "列",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "cols",
        "propType": "",
        "example": ""
      },
      {
        "name": "flex",
        "type": "boolean",
        "label": "flex 布局",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "flex",
        "propType": "",
        "example": ""
      },
      {
        "name": "space",
        "type": "number",
        "label": "列间距",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "space",
        "propType": "",
        "example": ""
      },
      {
        "name": "margin",
        "type": "string",
        "label": "外边距",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "margin",
        "propType": "",
        "example": ""
      },
      {
        "name": "style",
        "type": "XStyle",
        "label": "样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "style",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XSkeletonRow"
  },
  "XSkeletonCol": {
    "type": "interface",
    "label": "列",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "span",
        "type": "number",
        "label": "24栅格布局，列占的宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "span",
        "propType": "",
        "example": ""
      },
      {
        "name": "width",
        "type": "string",
        "label": "宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "width",
        "propType": "",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "height",
        "propType": "",
        "example": ""
      },
      {
        "name": "type",
        "type": "XSkeletonType",
        "label": "列类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "rows",
        "type": "XSkeletonRow[]",
        "label": "子集",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "rows",
        "propType": "",
        "example": ""
      },
      {
        "name": "style",
        "type": "XStyle",
        "label": "样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "style",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XSkeletonCol"
  },
  "XSliderPrefix": {
    "type": "const",
    "label": "Slider",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSliderPrefix",
    "selector": "x-slider",
    "decorator": "component",
    "value": "'x-slider'"
  },
  "XSliderProperty": {
    "type": "class",
    "label": "Slider Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XSliderNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "animated",
        "type": "XBoolean",
        "label": "滑动动画",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "animated",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedIndex",
        "type": "XNumber",
        "label": "当前激活的索引",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "activatedIndex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "trigger",
        "type": "XSliderTrigger",
        "label": "触发方式",
        "default": "'click'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSliderTrigger>(X_CONFIG_NAME,'click')"
        ],
        "attr": "trigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "layout",
        "type": "XSliderLayout",
        "label": "排列方式",
        "default": "'row'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "layout",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeJustify",
        "type": "XJustify",
        "label": "节点文字对齐方式",
        "default": "'center'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeJustify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showExpand",
        "type": "XBoolean",
        "label": "节点显示不下的时候显示展开所有的按钮，排列方式为 row 的时候生效",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showExpand",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "autoShowArrow",
        "type": "XBoolean",
        "label": "节点显示不下的时候显示左右/上下的箭头",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "autoShowArrow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandMaxHeight",
        "type": "string",
        "label": "展开所有弹框的最大高度",
        "default": "'15rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'15rem')"
        ],
        "attr": "expandMaxHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showAnchor",
        "type": "XBoolean",
        "label": "显示描点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showAnchor",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "indexChange",
        "type": "number",
        "label": "激活索引变化事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "indexChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeChange",
        "type": "XSliderNode",
        "label": "激活节点改变事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XSliderProperty",
    "extends": "XProperty"
  },
  "XSliderNode": {
    "type": "interface",
    "label": "Slider 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "label",
        "type": "XTemplate",
        "label": "标题，支持模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "label",
        "propType": "",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XSliderNode",
    "extends": "XIdentityProperty"
  },
  "XSliderTrigger": {
    "type": "type",
    "label": "触发方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSliderTrigger",
    "value": "XTrigger"
  },
  "XSliderSelectPrefix": {
    "type": "const",
    "label": "SliderSelect",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSliderSelectPrefix",
    "selector": "x-slider-select",
    "decorator": "component",
    "value": "'x-slider-select'"
  },
  "XSliderSelectProperty": {
    "type": "class",
    "label": "SliderSelect Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "min",
        "type": "XNumber",
        "label": "最小值",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "min",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "max",
        "type": "XNumber",
        "label": "最大值",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "max",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "step",
        "type": "XNumber",
        "label": "步数",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "step",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "precision",
        "type": "XNumber",
        "label": "精度，默认根据步数来计算",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "precision",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showTooltip",
        "type": "XBoolean",
        "label": "显示 tooltip 提示",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showTooltip",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "reverse",
        "type": "XBoolean",
        "label": "反向",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "reverse",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "vertical",
        "type": "XBoolean",
        "label": "垂直",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "vertical",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "range",
        "type": "XBoolean",
        "label": "范围",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "range",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "customButton",
        "type": "XTemplate",
        "label": "自定义滑块",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "customButton",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "marks",
        "type": "XSliderSelectMark[]",
        "label": "刻度标记，key 为实际数字，在 [min,max] 内，可通过 style 设置样式",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "marks",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tooltipCustom",
        "type": "XTemplate",
        "label": "自定义 tooltip",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tooltipCustom",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "dragStartEmit",
        "type": "CdkDragStart",
        "label": "开始拖动的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "dragStartEmit",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "dragMoveEmit",
        "type": "CdkDragMove",
        "label": "按住移动中的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "dragMoveEmit",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "dragEndEmit",
        "type": "CdkDragEnd",
        "label": "移动结束的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "dragEndEmit",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XSliderSelectProperty",
    "extends": "XControlValueAccessor<number"
  },
  "XSliderSelectMark": {
    "type": "interface",
    "label": "刻度标记",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "value",
        "type": "number",
        "label": "数值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "value",
        "propType": "",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "显示标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "label",
        "propType": "",
        "example": ""
      },
      {
        "name": "style",
        "type": "{ [style: string]: any }",
        "label": "标签样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "style",
        "propType": "",
        "example": ""
      },
      {
        "name": "offset",
        "type": "number",
        "label": "实际偏移量（自动计算）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "offset",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XSliderSelectMark"
  },
  "XStatisticPrefix": {
    "type": "const",
    "label": "Statistic",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStatisticPrefix",
    "selector": "x-statistic",
    "decorator": "component",
    "value": "'x-statistic'"
  },
  "XStatisticProperty": {
    "type": "class",
    "label": "Statistic Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "value",
        "type": "XTemplate",
        "label": "显示值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "value",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "XTemplate",
        "label": "标题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "prefix",
        "type": "XTemplate",
        "label": "前缀",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "prefix",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "suffix",
        "type": "XTemplate",
        "label": "后缀",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "suffix",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueStyle",
        "type": "XStyle",
        "label": "显示值样式",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueStyle",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XStatisticProperty"
  },
  "XCountdownPrefix": {
    "type": "const",
    "label": "Countdown",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XCountdownPrefix",
    "selector": "x-countdown",
    "decorator": "component",
    "value": "'x-countdown'"
  },
  "XCountdownProperty": {
    "type": "class",
    "label": "Countdown Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "format",
        "type": "string",
        "label": "格式化",
        "default": "'HH:mm:ss'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'HH:mm:ss')"
        ],
        "attr": "format",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "finish",
        "type": "void",
        "label": "倒计时结束的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "finish",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XCountdownProperty",
    "extends": "XStatisticProperty"
  },
  "XStepsPrefix": {
    "type": "const",
    "label": "Steps",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStepsPrefix",
    "selector": "x-steps",
    "decorator": "component",
    "value": "'x-steps'"
  },
  "XStepsProperty": {
    "type": "class",
    "label": "Steps Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XStepsNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "layout",
        "type": "XStepsLayout",
        "label": "布局方式",
        "default": "'row'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "layout",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedIndex",
        "type": "XNumber",
        "label": "当前激活节点",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "activatedIndex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "startIndex",
        "type": "XNumber",
        "label": "步骤开始序号",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "startIndex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "status",
        "type": "XStepsStatus",
        "label": "当前激活节点状态",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "status",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "customTpl",
        "type": "XTemplate",
        "label": "自定义节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "customTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeStatus",
        "type": "XBoolean",
        "label": "节点设置的状态优先，将不会自动计算当前节点，`activatedIndex` 和 `status` 将失效",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nodeStatus",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XStepsProperty",
    "extends": "XProperty"
  },
  "XStepsLayout": {
    "type": "type",
    "label": "布局方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStepsLayout",
    "value": "'row' | 'column'"
  },
  "XSwitchPrefix": {
    "type": "const",
    "label": "Switch",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XSwitchPrefix",
    "selector": "x-switch",
    "decorator": "component",
    "value": "'x-switch'"
  },
  "XSwitchProperty": {
    "type": "class",
    "label": "Switch Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "loading",
        "type": "XBoolean",
        "label": "显示加载中",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "loading",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "manual",
        "type": "XBoolean",
        "label": "手动控制",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "manual",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "checkedText",
        "type": "XTemplate",
        "label": "显示文字或者自定义模版（开启状态）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "checkedText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "unCheckedText",
        "type": "XTemplate",
        "label": "显示文字或者自定义模版（关闭状态）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "unCheckedText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XSwitchProperty",
    "extends": "XControlValueAccessor<boolean>",
    "implements": "XSwitchOption"
  },
  "XTablePrefix": {
    "type": "const",
    "label": "Table",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTablePrefix",
    "selector": "x-table",
    "decorator": "component",
    "value": "'x-table'"
  },
  "XTableProperty": {
    "type": "class",
    "label": "Table Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XTableRow>",
        "label": "行数据",
        "default": "[]",
        "withConfig": false,
        "description": "这是一个描述信息",
        "decorator": [
          "@Input()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "columns",
        "type": "XTableColumn[]",
        "label": "列集合",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "columns",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rowHeight",
        "type": "number",
        "label": "表头和行高，单位 px",
        "default": "42",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,42)",
          "@XInputNumber()"
        ],
        "attr": "rowHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "loading",
        "type": "XBoolean",
        "label": "是否启用加载 loading",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "loading",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "是否展示列边框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showHeader",
        "type": "XBoolean",
        "label": "是否显示列头",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "showHeader",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "headerPosition",
        "type": "XTableHeaderPosition",
        "label": "列头显示位置",
        "default": "'top'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTableHeaderPosition>(X_CONFIG_NAME,'top')"
        ],
        "attr": "headerPosition",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedRow",
        "type": "XTableRow",
        "label": "当前选中行数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "activatedRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedRowChange",
        "type": "XTableRow",
        "label": "当前选中行改变",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activatedRowChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "headColumnTpl",
        "type": "XTableTemplate",
        "label": "列头自定义模板，通过 key-value 的方式指定每列的模版",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "headColumnTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bodyColumnTpl",
        "type": "XTableTemplate",
        "label": "列内容自定义模板，通过 key-value 的方式指定每列的模版",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "bodyColumnTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bodyTdTpl",
        "type": "XTemplate",
        "label": "单元格的自定义模板，优先级低于列内容自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "bodyTdTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rowClass",
        "type": "(row: XTableRow, index: number) => { [className: string]: boolean }",
        "label": "行条件样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rowClass",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "headSearchTpl",
        "type": "XTemplate",
        "label": "列头搜索自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "headSearchTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sortChange",
        "type": "XSort[]",
        "label": "排序点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "sortChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "headCheckboxChange",
        "type": "XTableHeadCheckbox",
        "label": "列头 checkbox 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "headCheckboxChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "bodyCheckboxChange",
        "type": "XTableRow",
        "label": "body checkbox 事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "bodyCheckboxChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "allowSelectRow",
        "type": "XBoolean",
        "label": "允许行点击选中当前行",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "allowSelectRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "allowCheckRow",
        "type": "XBoolean",
        "label": "允许行点击选中 checkbox",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "allowCheckRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScroll",
        "type": "XBoolean",
        "label": "开启虚拟滚动",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "virtualScroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bodyHeight",
        "type": "number",
        "label": "body 数据高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "bodyHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "itemSize",
        "type": "number",
        "label": "itemSize，对应 cdk scroll 中的参数",
        "default": "42",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,42)",
          "@XInputNumber()"
        ],
        "attr": "itemSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minBufferPx",
        "type": "number",
        "label": "超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "minBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxBufferPx",
        "type": "number",
        "label": "渲染新数据缓冲区的像素，对应 cdk scroll 中的参数",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "maxBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "adaptionHeight",
        "type": "XNumber",
        "label": "自适应高度，table 高度等于屏幕高度减掉此处设置的数值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "adaptionHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "docPercent",
        "type": "XNumber",
        "label": "文档高度百分比，弹窗百分比高度用到",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "docPercent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "checkedRow",
        "type": "{ [property: string]: any[] }",
        "label": "checkbox 列初始选中的数据，列中激活 checkbox",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "checkedRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "manual",
        "type": "XBoolean",
        "label": "如果 data 是函数类型，可以通过此参数控制请求，常用于弹框中的表格，弹出后再请求",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "manual",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "scroll",
        "type": "{ x: number y: number };",
        "label": "滚动区域高宽",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "scroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "header",
        "type": "XTemplate",
        "label": "表格页头",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "header",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "footer",
        "type": "XTemplate",
        "label": "表格页尾",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "footer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "manualChange",
        "type": "boolean",
        "label": "参数控制请求改变事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "manualChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "cellConfig",
        "type": "XTableCellConfig",
        "label": "单元格配置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "cellConfig",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rowSize",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "rowSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "paginationPosition",
        "type": "XPaginationPosition",
        "label": "分页器位置",
        "default": "'bottom-left'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "paginationPosition",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hiddenWrapBorder",
        "type": "XBoolean",
        "label": "隐藏表格外边框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "hiddenWrapBorder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hiddenPaginationBorder",
        "type": "XBoolean",
        "label": "隐藏分页器按钮边框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "hiddenPaginationBorder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showPagination",
        "type": "XBoolean",
        "label": "显示分页器",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "showPagination",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "treeTable",
        "type": "XBoolean",
        "label": "树形表格",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "treeTable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedAll",
        "type": "XBoolean",
        "label": "树形表格展开所有节点",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "expandedAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedLevel",
        "type": "XNumber",
        "label": "默认展开的层级，-1 不展开",
        "default": "-1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,-1)",
          "@XInputNumber()"
        ],
        "attr": "expandedLevel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expanded",
        "type": "any[]",
        "label": "展开的节点",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "expanded",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandTpl",
        "type": "XTemplate",
        "label": "自定义展开内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "expandTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showEmpty",
        "type": "XBoolean",
        "label": "显示数据为空的提示",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "showEmpty",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "emptyImg",
        "type": "XTemplate",
        "label": "数据为空的提示图片地址或自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME)"
        ],
        "attr": "emptyImg",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "emptyContent",
        "type": "XTemplate",
        "label": "数据为空的提示内容或自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME)"
        ],
        "attr": "emptyContent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "index",
        "type": "XNumber",
        "label": "当前页码",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1)",
          "@XInputNumber()"
        ],
        "attr": "index",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XNumber",
        "label": "每页显示条数",
        "default": "10",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,10)",
          "@XInputNumber()"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "total",
        "type": "XNumber",
        "label": "总数",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "total",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "query",
        "type": "XQuery",
        "label": "查询条件",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "query",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pageLinkSize",
        "type": "XNumber",
        "label": "最多显示的分页数量",
        "default": "5",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,5)",
          "@XInputNumber()"
        ],
        "attr": "pageLinkSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showEllipsis",
        "type": "XBoolean",
        "label": "显示首尾页跳转",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "showEllipsis",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showTotal",
        "type": "XBoolean",
        "label": "显示总条数",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "showTotal",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "space",
        "type": "XNumber",
        "label": "按钮间距，单位 rem （按 1rem = 16px 比例来计算）",
        "default": "0.25",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,0.25)",
          "@XInputNumber()"
        ],
        "attr": "space",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showBackground",
        "type": "XBoolean",
        "label": "添加背景色",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showBackground",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showSize",
        "type": "XBoolean",
        "label": "显示分页条数",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sizeWidth",
        "type": "XNumber",
        "label": "分页条数选择框的宽度",
        "default": "110",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,110)",
          "@XInputNumber()"
        ],
        "attr": "sizeWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showInputSize",
        "type": "XBoolean",
        "label": "显示输入分页条数（不能跟下拉选项同时使用）",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showInputSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputSizeWidth",
        "type": "XNumber",
        "label": "分页条数输入框的宽度",
        "default": "50",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,50)",
          "@XInputNumber()"
        ],
        "attr": "inputSizeWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sizeData",
        "type": "XData<XSelectNode>",
        "label": "分页条数的宽度",
        "default": "XPaginationSizeData",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XData<XSelectNode>>(X_CONFIG_NAME,XPaginationSizeData)"
        ],
        "attr": "sizeData",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用整个分页",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showJump",
        "type": "XBoolean",
        "label": "显示跳转输入框",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showJump",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "jumpWidth",
        "type": "XNumber",
        "label": "跳转页的宽度",
        "default": "50",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,50)",
          "@XInputNumber()"
        ],
        "attr": "jumpWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "totalTpl",
        "type": "XTemplate",
        "label": "总数自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "totalTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "simple",
        "type": "XBoolean",
        "label": "简单分页",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "simple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "simpleIndexWidth",
        "type": "XNumber",
        "label": "简单分页输入框宽度",
        "default": "130",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,130)",
          "@XInputNumber()"
        ],
        "attr": "simpleIndexWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "queryChange",
        "type": "XQuery",
        "label": "页码变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "queryChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "indexChange",
        "type": "number",
        "label": "页码变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "indexChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "sizeChange",
        "type": "number",
        "label": "每页显示条数变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "sizeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "columnDragStarted",
        "type": "XTableColumn",
        "label": "列头拖动开始事件，返回拖动的列",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "columnDragStarted",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "columnDragEnded",
        "type": "XTableColumn",
        "label": "列头拖动结束事件，返回拖动的列",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "columnDragEnded",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "columnDropListDropped",
        "type": "XTableColumn[]",
        "label": "当用户把一个条目投放进该容器时就会触发，拖动放开的事件，返回拖动排序后的列数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "columnDropListDropped",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "columnDragWidthStarted",
        "type": "XTableDragWidthEvent",
        "label": "开始拖动列宽的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "columnDragWidthStarted",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "columnDragWidthMoved",
        "type": "XTableDragWidthEvent",
        "label": "正在拖动列宽时的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "columnDragWidthMoved",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "columnDragWidthEnded",
        "type": "XTableDragWidthEvent",
        "label": "结束拖动列宽的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "columnDragWidthEnded",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XTableProperty",
    "extends": "XPaginationProperty",
    "implements": "XTableOption"
  },
  "XTableRow": {
    "type": "interface",
    "label": "行数据",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "expanded",
        "type": "boolean",
        "label": "展开",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "expanded",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTableRow",
    "extends": "XParentIdentityProperty<XTableRow>"
  },
  "XTableColumn": {
    "type": "interface",
    "label": "列参数",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XColumnType",
        "label": "类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "width",
        "type": "number",
        "label": "宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "width",
        "propType": "",
        "example": ""
      },
      {
        "name": "flex",
        "type": "number",
        "label": "flex 布局宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "flex",
        "propType": "",
        "example": ""
      },
      {
        "name": "search",
        "type": "boolean",
        "label": "查询字段",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "search",
        "propType": "",
        "example": ""
      },
      {
        "name": "sort",
        "type": "boolean",
        "label": "排序字段",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "sort",
        "propType": "",
        "example": ""
      },
      {
        "name": "left",
        "type": "number",
        "label": "固定列，距离左边的距离",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "left",
        "propType": "",
        "example": ""
      },
      {
        "name": "right",
        "type": "number",
        "label": "固定列，距离右边的距离",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "right",
        "propType": "",
        "example": ""
      },
      {
        "name": "action",
        "type": "boolean",
        "label": "操作按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "action",
        "propType": "",
        "example": ""
      },
      {
        "name": "rowChecked",
        "type": "boolean",
        "label": "type 为 checkbox 时绑定行点击选中事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "rowChecked",
        "propType": "",
        "example": ""
      },
      {
        "name": "rowExpand",
        "type": "boolean",
        "label": "type 为 expand 时绑定行点击展开事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "rowExpand",
        "propType": "",
        "example": ""
      },
      {
        "name": "textAlign",
        "type": "XTextAlign",
        "label": "文字对齐方式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "textAlign",
        "propType": "",
        "example": ""
      },
      {
        "name": "dragWidth",
        "type": "boolean",
        "label": "拖动列宽，需要设置列的初始宽度 width",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dragWidth",
        "propType": "",
        "example": ""
      },
      {
        "name": "draggingWidth",
        "type": "boolean",
        "label": "正在拖动列宽",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "draggingWidth",
        "propType": "",
        "example": ""
      },
      {
        "name": "dragWidthStarted",
        "type": "(event: XTableDragWidthEvent) => void",
        "label": "开始拖动列宽的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dragWidthStarted",
        "propType": "",
        "example": ""
      },
      {
        "name": "dragWidthMoved",
        "type": "(event: XTableDragWidthEvent) => void",
        "label": "正在拖动列宽时的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dragWidthMoved",
        "propType": "",
        "example": ""
      },
      {
        "name": "dragWidthEnded",
        "type": "(event: XTableDragWidthEvent) => void",
        "label": "结束拖动列宽的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dragWidthEnded",
        "propType": "",
        "example": ""
      },
      {
        "name": "dragColumn",
        "type": "boolean",
        "label": "拖动列",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dragColumn",
        "propType": "",
        "example": ""
      },
      {
        "name": "dragging",
        "type": "boolean",
        "label": "正在拖动列",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dragging",
        "propType": "",
        "example": ""
      },
      {
        "name": "headChecked",
        "type": "boolean",
        "label": "头部显示 checkbox",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "headChecked",
        "propType": "",
        "example": ""
      },
      {
        "name": "headExpand",
        "type": "boolean",
        "label": "头部显示 expand",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "headExpand",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTableColumn",
    "extends": "XIdentityProperty"
  },
  "XTableDragWidthEvent": {
    "type": "interface",
    "label": "列头宽度拖动事件",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "column",
        "type": "XTableColumn",
        "label": "拖动的列",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "column",
        "propType": "",
        "example": ""
      },
      {
        "name": "position",
        "type": "{ x: number y: number };",
        "label": "列位置，正在拖动的时候指偏移位置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "position",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTableDragWidthEvent"
  },
  "XTableHeadCheckbox": {
    "type": "interface",
    "label": "列头 checkbox 事件数据",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "rows",
        "type": "XTableRow[]",
        "label": "行数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "rows",
        "propType": "",
        "example": ""
      },
      {
        "name": "checkbox",
        "type": "{ [property: string]: boolean }",
        "label": "checkbox 数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "checkbox",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTableHeadCheckbox"
  },
  "XTableCellConfig": {
    "type": "interface",
    "label": "单元格配置",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "thead",
        "type": "XTableCellConfigRule",
        "label": "列单元格配置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "thead",
        "propType": "",
        "example": ""
      },
      {
        "name": "tbody",
        "type": "XTableCellConfigRule",
        "label": "行单元格配置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "tbody",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTableCellConfig"
  },
  "XTableCellConfigRule": {
    "type": "interface",
    "label": "单元格配置规则",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "gridTemplateColumns",
        "type": "string",
        "label": "grid 布局下定义列宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "gridTemplateColumns",
        "propType": "",
        "example": ""
      },
      {
        "name": "cells",
        "type": "XTableCell[]",
        "label": "单元格配置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "cells",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTableCellConfigRule"
  },
  "XTableCell": {
    "type": "interface",
    "label": "单元格合并配置",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "gridArea",
        "type": "string",
        "label": "使用 grid 布局来合并单元格",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "gridArea",
        "propType": "",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "名称",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "label",
        "propType": "",
        "example": ""
      },
      {
        "name": "width",
        "type": "number",
        "label": "宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "width",
        "propType": "",
        "example": ""
      },
      {
        "name": "left",
        "type": "number",
        "label": "固定列，距离左边的距离",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "left",
        "propType": "",
        "example": ""
      },
      {
        "name": "right",
        "type": "number",
        "label": "固定列，距离右边的距离",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "right",
        "propType": "",
        "example": ""
      },
      {
        "name": "id",
        "type": "string",
        "label": "对应列的 id",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "id",
        "propType": "",
        "example": ""
      },
      {
        "name": "dragWidth",
        "type": "boolean",
        "label": "拖动列宽",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dragWidth",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTableCell"
  },
  "XColumnType": {
    "type": "type",
    "label": "列类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XColumnType",
    "value": "'label' | 'index' | 'checkbox' | 'expand'"
  },
  "XTableHeaderPosition": {
    "type": "type",
    "label": "列头显示位置",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTableHeaderPosition",
    "value": "'top' | 'bottom' | 'top-bottom'"
  },
  "XPaginationPosition": {
    "type": "type",
    "label": "分页器位置",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XPaginationPosition",
    "value": "XPaginationPosition =| 'top-left'| 'top-center'| 'top-right'| 'bottom-left'| 'bottom-center'| 'bottom-right';"
  },
  "XTableTemplate": {
    "type": "type",
    "label": "模板",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTableTemplate",
    "value": "{ [property: string]: TemplateRef<any> }"
  },
  "XTableHeadPrefix": {
    "type": "const",
    "label": "Table Head",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTableHeadPrefix",
    "selector": "x-table-head",
    "decorator": "component",
    "value": "'x-table-head'"
  },
  "XTableHeadProperty": {
    "type": "class",
    "label": "Table Head Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "columns",
        "type": "XTableColumn[]",
        "label": "列集合",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "columns",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rowHeight",
        "type": "XNumber",
        "label": "高度，单位 px",
        "default": "42",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "rowHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "columnTpl",
        "type": "XTableTemplate",
        "label": "自定义模板",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "columnTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "scrollYWidth",
        "type": "number",
        "label": "竖向滚动条宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "scrollYWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "scrollXWidth",
        "type": "number | null",
        "label": "横向滚动条宽度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "scrollXWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "cellConfig",
        "type": "XTableCellConfigRule",
        "label": "单元格配置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "cellConfig",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "position",
        "type": "string",
        "label": "显示的位置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "position",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTableHeadProperty",
    "extends": "XProperty"
  },
  "XTableBodyPrefix": {
    "type": "const",
    "label": "Table Body",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTableBodyPrefix",
    "selector": "x-table-body",
    "decorator": "component",
    "value": "'x-table-body'"
  },
  "XTableBodyProperty": {
    "type": "class",
    "label": "Table Body Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XTableRow[]",
        "label": "行数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "columns",
        "type": "XTableColumn[]",
        "label": "列集合",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "columns",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "columnTpl",
        "type": "XTableTemplate",
        "label": "自定义模板",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "columnTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedRow",
        "type": "XTableRow",
        "label": "当前选中行数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "activatedRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedRowChange",
        "type": "XTableRow",
        "label": "当前选中行改变",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activatedRowChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "rowHeight",
        "type": "XNumber",
        "label": "高度，单位 px。设置为 0 表示行高自适应内容高度。",
        "default": "42",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "rowHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bodyHeight",
        "type": "number",
        "label": "body 数据高度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "bodyHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "allowSelectRow",
        "type": "XBoolean",
        "label": "允许行点击选中",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "allowSelectRow",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScroll",
        "type": "XBoolean",
        "label": "开启虚拟滚动",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "virtualScroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "itemSize",
        "type": "number",
        "label": "itemSize，对应 cdk scroll 中的参数",
        "default": "42",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "itemSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minBufferPx",
        "type": "number",
        "label": "超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "minBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxBufferPx",
        "type": "number",
        "label": "渲染新数据缓冲区的像素，对应 cdk scroll 中的参数",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "maxBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "adaptionHeight",
        "type": "XNumber",
        "label": "自适应高度，table 高度等于屏幕高度减掉此处设置的数值",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "adaptionHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "docPercent",
        "type": "XNumber",
        "label": "文档高度百分比，弹窗百分比高度用到",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "docPercent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "scroll",
        "type": "{ x: number y: number };",
        "label": "滚动区域高宽",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "scroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "cellConfig",
        "type": "XTableCellConfigRule",
        "label": "单元格配置规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "cellConfig",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rowClass",
        "type": "(row: XTableRow, index: number) => { [className: string]: boolean }",
        "label": "行条件样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rowClass",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "level",
        "type": "number",
        "label": "树形表格下的层级",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "level",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedAll",
        "type": "XBoolean",
        "label": "树形表格展开所有节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "expandedAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandTpl",
        "type": "XTemplate",
        "label": "自定义展开内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "expandTpl",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTableBodyProperty",
    "extends": "XProperty"
  },
  "XTableFootPrefix": {
    "type": "const",
    "label": "Table Foot",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTableFootPrefix",
    "selector": "x-table-foot",
    "decorator": "component",
    "value": "'x-table-foot'"
  },
  "XTableFootProperty": {
    "type": "class",
    "label": "Table Foot Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "footer",
        "type": "XTemplate",
        "label": "表格页尾",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "footer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "rowHeight",
        "type": "number",
        "label": "表头和行高，单位 px",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "rowHeight",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTableFootProperty",
    "extends": "XProperty"
  },
  "XTabsPrefix": {
    "type": "const",
    "label": "Tabs",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTabsPrefix",
    "selector": "x-tabs",
    "decorator": "component",
    "value": "'x-tabs'"
  },
  "XTabsProperty": {
    "type": "class",
    "label": "Tabs Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XTabsNode>",
        "label": "Data 数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XTabsType",
        "label": "样式",
        "default": "'block'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "layout",
        "type": "XTabsLayout",
        "label": "布局方式",
        "default": "'top'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "layout",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "trigger",
        "type": "XTabsTrigger",
        "label": "触发方式",
        "default": "'click'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTabsTrigger>(X_CONFIG_NAME,'click')"
        ],
        "attr": "trigger",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedIndex",
        "type": "XNumber",
        "label": "激活的序号",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "activatedIndex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "animated",
        "type": "XBoolean",
        "label": "动画",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "animated",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeJustify",
        "type": "XJustify",
        "label": "节点排列方式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeJustify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "sliderHidden",
        "type": "XBoolean",
        "label": "隐藏标签栏，只有一个标签页时候默认隐藏（存在自定义操作模版的时候不会）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "sliderHidden",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "actionTpl",
        "type": "TemplateRef<void>",
        "label": "标签栏上的自定义操作模版",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "actionTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showExpand",
        "type": "XBoolean",
        "label": "标签页显示不下的时候显示展开所有的按钮，布局为 top 、bottom 的时候生效",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showExpand",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandMaxHeight",
        "type": "string",
        "label": "展开所有弹框的最大高度",
        "default": "'15rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'15rem')"
        ],
        "attr": "expandMaxHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "linkRouter",
        "type": "XBoolean",
        "label": "angular 路由联动",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "linkRouter",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "linkExact",
        "type": "XBoolean",
        "label": "以严格匹配模式确定联动的路由",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "linkExact",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "indexChange",
        "type": "XActivatedTab",
        "label": "标签切换变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "indexChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XTabsProperty",
    "extends": "XProperty"
  },
  "XTabsNode": {
    "type": "interface",
    "label": "Tabs 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTabsNode",
    "extends": "XIdentityProperty"
  },
  "XTabsTrigger": {
    "type": "type",
    "label": "触发方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTabsTrigger",
    "value": "XTrigger"
  },
  "XActivatedTab": {
    "type": "interface",
    "label": "激活的tab",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XActivatedTab"
  },
  "XTabsType": {
    "type": "type",
    "label": "样式类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTabsType",
    "value": "'block' | 'tag' | 'card'"
  },
  "XTabsLayout": {
    "type": "type",
    "label": "布局方式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTabsLayout",
    "value": "'top' | 'right' | 'bottom' | 'left'"
  },
  "XTabPrefix": {
    "type": "const",
    "label": "Tab",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTabPrefix",
    "selector": "x-tab",
    "decorator": "component",
    "value": "'x-tab'"
  },
  "XTabProperty": {
    "type": "class",
    "label": "Tab Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "label",
        "type": "XTemplate",
        "label": "标签名称，支持自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTabProperty"
  },
  "XTagPrefix": {
    "type": "const",
    "label": "Tag",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTagPrefix",
    "selector": "x-tag",
    "decorator": "component",
    "value": "'x-tag'"
  },
  "XTagProperty": {
    "type": "class",
    "label": "Tag Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XType",
        "label": "标签样式类型",
        "default": "'initial'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "closable",
        "type": "XBoolean",
        "label": "显示关闭按钮",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "closable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dark",
        "type": "XBoolean",
        "label": "深色主题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "dark",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "checked",
        "type": "XBoolean",
        "label": "可选择标签",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "checked",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "manual",
        "type": "XBoolean",
        "label": "手动控制选择标签是否选中",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "manual",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selected",
        "type": "boolean",
        "label": "选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "selected",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "style",
        "type": "{ [cssStyle: string]: any }",
        "label": "样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "style",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "close",
        "type": "Event",
        "label": "点击关闭的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "close",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "selectedChange",
        "type": "boolean",
        "label": "选中事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "selectedChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XTagProperty",
    "extends": "XProperty"
  },
  "XTextRetractPrefix": {
    "type": "const",
    "label": "TextRetract",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTextRetractPrefix",
    "selector": "x-text-retract",
    "decorator": "component",
    "value": "'x-text-retract'"
  },
  "XTextRetractProperty": {
    "type": "class",
    "label": "TextRetract Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "content",
        "type": "string",
        "label": "文本",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "content",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "max",
        "type": "XNumber",
        "label": "默认最大显示字符数",
        "default": "256",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,256)",
          "@XInputNumber()"
        ],
        "attr": "max",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTextRetractProperty"
  },
  "XTextareaPrefix": {
    "type": "const",
    "label": "Textarea",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTextareaPrefix",
    "selector": "x-textarea",
    "decorator": "component",
    "value": "'x-textarea'"
  },
  "XTextareaProperty": {
    "type": "class",
    "label": "Textarea Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "clearable",
        "type": "XBoolean",
        "label": "清除按钮",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "clearable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "icon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "iconLayout",
        "type": "XTextareaIconLayoutType",
        "label": "图标布局方式",
        "default": "'right'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTextareaIconLayoutType>(X_CONFIG_NAME,'right')"
        ],
        "attr": "iconLayout",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "iconSpin",
        "type": "XBoolean",
        "label": "图标动画",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "iconSpin",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxlength",
        "type": "XNumber",
        "label": "输入最大长度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "maxlength",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "height",
        "type": "string",
        "label": "高度",
        "default": "'6rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "height",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "clearEmit",
        "type": "any",
        "label": "清除按钮的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "clearEmit",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XTextareaProperty",
    "extends": "XControlValueAccessor<any>",
    "implements": "XTextareaOption"
  },
  "XThemePrefix": {
    "type": "const",
    "label": "Theme",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XThemePrefix",
    "selector": "x-theme",
    "decorator": "component",
    "value": "'x-theme'"
  },
  "XThemeAmounts": {
    "type": "const",
    "label": "混合的颜色占比",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XThemeAmounts",
    "value": "[-0.1, -0.2, -0.3, -0.4, -0.5, -0.6, -0.7, -0.8, -0.9, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]"
  },
  "XThemeProperty": {
    "type": "class",
    "label": "Theme Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "prefix",
        "type": "string",
        "label": "参数前缀",
        "default": "'--x-'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "prefix",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "amounts",
        "type": "XNumber[]",
        "label": "混合的颜色占比",
        "default": "XThemeAmounts",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber[]>(X_CONFIG_NAME,XThemeAmounts)"
        ],
        "attr": "amounts",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showDark",
        "type": "XBoolean",
        "label": "显示暗黑模式的设置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showDark",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showDetail",
        "type": "XBoolean",
        "label": "详细设置",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showDetail",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "dark",
        "type": "XBoolean",
        "label": "暗黑模式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "dark",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "defaultClick",
        "type": "XColorsTheme",
        "label": "初始化默认值事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "defaultClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "darkChange",
        "type": "XBoolean",
        "label": "暗黑模式改变事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "darkChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XThemeProperty",
    "extends": "XControlValueAccessor<XColorsTheme>"
  },
  "XTimeAgoPrefix": {
    "type": "const",
    "label": "TimeAgo",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimeAgoPrefix",
    "selector": "xTimeAgo",
    "decorator": "pipe",
    "value": "'xTimeAgo'"
  },
  "XTimePickerPrefix": {
    "type": "const",
    "label": "TimePicker",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimePickerPrefix",
    "selector": "x-time-picker",
    "decorator": "component",
    "value": "'x-time-picker'"
  },
  "XTimePickerProperty": {
    "type": "class",
    "label": "TimePicker Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "type",
        "type": "XTimePickerType",
        "label": "时间类型",
        "default": "'time'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "format",
        "type": "string",
        "label": "格式化",
        "default": "'HH:mm:ss'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'HH:mm:ss')"
        ],
        "attr": "format",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XCorner",
        "label": "展示方位",
        "default": "'bottom-start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XCorner>(X_CONFIG_NAME,'bottom-start')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "use12Hours",
        "type": "XBoolean",
        "label": "使用12小时制",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "use12Hours",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hourStep",
        "type": "XNumber",
        "label": "小时选项间隔",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1)"
        ],
        "attr": "hourStep",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minuteStep",
        "type": "XNumber",
        "label": "分钟选项间隔",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1)"
        ],
        "attr": "minuteStep",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "secondStep",
        "type": "XNumber",
        "label": "秒选项间隔",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1)"
        ],
        "attr": "secondStep",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "preset",
        "type": "XData<XTimePickerPreset>",
        "label": "快捷选择按钮，支持此刻以及自定义",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "preset",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabledTime",
        "type": "XTimePickerDisabledTime",
        "label": "禁用的时间",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "disabledTime",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeEmit",
        "type": "number",
        "label": "节点点击的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeEmit",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XTimePickerProperty",
    "extends": "XControlValueAccessor<any>"
  },
  "XTimePickerType": {
    "type": "type",
    "label": "时间选择",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimePickerType",
    "value": "'time' | 'hour' | 'minute'"
  },
  "XTimePickerPreset": {
    "type": "interface",
    "label": "快捷选择按钮",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "func",
        "type": "() => Date",
        "label": "自定义函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "func",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTimePickerPreset",
    "extends": "XIdentityProperty"
  },
  "XTimePickerPortalPrefix": {
    "type": "const",
    "label": "TimePickerPortal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimePickerPortalPrefix",
    "selector": "x-time-picker-portal",
    "decorator": "component",
    "value": "'x-time-picker-portal'"
  },
  "XTimePickerFramePrefix": {
    "type": "const",
    "label": "TimePickerFrame",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimePickerFramePrefix",
    "selector": "x-time-picker-frame",
    "decorator": "component",
    "value": "'x-time-picker-frame'"
  },
  "XTimePickerDisabledTime": {
    "type": "type",
    "label": "禁用时间的自定义类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimePickerDisabledTime",
    "value": "(param?: any) => XTimePickerDisabledTimeFn"
  },
  "XTimeRangePrefix": {
    "type": "const",
    "label": "TimeRange",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimeRangePrefix",
    "selector": "xTimeRange",
    "decorator": "pipe",
    "value": "'xTimeRange'"
  },
  "XTimelinePrefix": {
    "type": "const",
    "label": "Timeline",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTimelinePrefix",
    "selector": "x-timeline",
    "decorator": "component",
    "value": "'x-timeline'"
  },
  "XTimelineProperty": {
    "type": "class",
    "label": "Timeline Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XTimelineNode>",
        "label": "数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XType",
        "label": "类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "wrapper",
        "type": "XTemplate",
        "label": "内容模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "wrapper",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "mode",
        "type": "XTimelineMode",
        "label": "时间轴的相对位置",
        "default": "'left'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTimelineMode>(X_CONFIG_NAME,'left')"
        ],
        "attr": "mode",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTimelineProperty",
    "extends": "XProperty"
  },
  "XTimelineNode": {
    "type": "interface",
    "label": "Timeline 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "time",
        "type": "XDate",
        "label": "时间",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "time",
        "propType": "",
        "example": ""
      },
      {
        "name": "content",
        "type": "string",
        "label": "内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "content",
        "propType": "",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "size",
        "propType": "",
        "example": ""
      },
      {
        "name": "type",
        "type": "XType",
        "label": "类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      },
      {
        "name": "color",
        "type": "string",
        "label": "颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "color",
        "propType": "",
        "example": ""
      },
      {
        "name": "loading",
        "type": "boolean",
        "label": "加载中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "loading",
        "propType": "",
        "example": ""
      },
      {
        "name": "dashed",
        "type": "boolean",
        "label": "连接线显示虚线，针对下一个节点，下一个节点为 loading 状态也会显示虚线",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "dashed",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "其它自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTimelineNode",
    "extends": "XIdentityProperty"
  },
  "XTooltipPrefix": {
    "type": "const",
    "label": "Tooltip",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTooltipPrefix",
    "selector": "x-tooltip",
    "decorator": "directive",
    "value": "'x-tooltip'"
  },
  "XTooltipProperty": {
    "type": "class",
    "label": "Tooltip Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "content",
        "type": "XTemplate",
        "label": "内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "content",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPlacement",
        "label": "显示位置",
        "default": "'top'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPlacement>(X_CONFIG_NAME,'top')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "visible",
        "type": "XBoolean",
        "label": "显示/隐藏",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "visible",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "panelClass",
        "type": "string | string[]",
        "label": "内部样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "panelClass",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "connectTo",
        "type": "ElementRef<HTMLElement> | HTMLElement",
        "label": "指定参考对象",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "connectTo",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "backgroundColor",
        "type": "string",
        "label": "背景颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "backgroundColor",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "color",
        "type": "string",
        "label": "文字颜色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "color",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "manual",
        "type": "XBoolean",
        "label": "手动处理关闭事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "manual",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "mouseEnterDelay",
        "type": "number",
        "label": "鼠标移入后延时多少才显示",
        "default": "150",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "mouseEnterDelay",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "mouseLeaveDelay",
        "type": "number",
        "label": "鼠标移出后延时多少才隐藏",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "mouseLeaveDelay",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用显示",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTooltipProperty"
  },
  "XTooltipPortalPrefix": {
    "type": "const",
    "label": "Tooltip Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTooltipPortalPrefix",
    "selector": "x-tooltip-portal",
    "decorator": "component",
    "value": "'x-tooltip-portal'"
  },
  "XTransferPrefix": {
    "type": "const",
    "label": "Transfer",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTransferPrefix",
    "selector": "x-transfer",
    "decorator": "component",
    "value": "'x-transfer'"
  },
  "XTransferProperty": {
    "type": "class",
    "label": "Transfer Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XTransferNode>",
        "label": "数据对象",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XTransferType",
        "label": "选择的类型",
        "default": "'list'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTransferType>(X_CONFIG_NAME,'list')"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "titles",
        "type": "string[]",
        "label": "标题",
        "default": "['List', 'Selected']",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string[]>(X_CONFIG_NAME)"
        ],
        "attr": "titles",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "listStyle",
        "type": "XTransferListStyle",
        "label": "穿梭框样式，使用方式与 ngStyle 相同",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTransferListStyle>(X_CONFIG_NAME)"
        ],
        "attr": "listStyle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "hiddenCheckAll",
        "type": "boolean[]",
        "label": "隐藏全选复选框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "hiddenCheckAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "drag",
        "type": "XBoolean",
        "label": "是否能拖动, type",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "drag",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "search",
        "type": "XBoolean",
        "label": "是否显示搜索。type 为 'table'，需要设置 tableHeadSearchTpl 和 tableQuery 来配合使用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "search",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableHeadSearchTpl",
        "type": "XTemplate[]",
        "label": "表格列头搜索自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableHeadSearchTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<void>",
        "label": "行数据自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "titleTpl",
        "type": "TemplateRef<void>",
        "label": "标题自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "titleTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "footerTpl",
        "type": "TemplateRef<void>[]",
        "label": "底部自定义模版",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "footerTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableColumns",
        "type": "XTableColumn[]",
        "label": "表格列集合",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableColumns",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableIndex",
        "type": "number",
        "label": "表格页码",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,1)"
        ],
        "attr": "tableIndex",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableSize",
        "type": "number",
        "label": "表每页数据条数",
        "default": "10",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,10)"
        ],
        "attr": "tableSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableQuery",
        "type": "XQuery",
        "label": "表格查询条件",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableQuery",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "tableTotal",
        "type": "number",
        "label": "表格数据总条数",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "tableTotal",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inverse",
        "type": "XBoolean",
        "label": "反选操作",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "inverse",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTransferProperty",
    "extends": "XControlValueAccessor<any[]>"
  },
  "XTransferNode": {
    "type": "interface",
    "label": "Transfer Node",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "checked",
        "type": "boolean",
        "label": "checkbox 是否选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "checked",
        "propType": "",
        "example": ""
      },
      {
        "name": "index",
        "type": "number",
        "label": "序号",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "index",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTransferNode",
    "extends": "XParentIdentityProperty<XTransferNode>"
  },
  "XTransferSource": {
    "type": "interface",
    "label": "Transfer Source",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "title",
        "type": "string",
        "label": "标题",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "title",
        "propType": "",
        "example": ""
      },
      {
        "name": "searchInput",
        "type": "string",
        "label": "搜索的数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "searchInput",
        "propType": "",
        "example": ""
      },
      {
        "name": "checkedAll",
        "type": "boolean",
        "label": "全选",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "checkedAll",
        "propType": "",
        "example": ""
      },
      {
        "name": "checkedCount",
        "type": "number",
        "label": "选中的数量",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "checkedCount",
        "propType": "",
        "example": ""
      },
      {
        "name": "count",
        "type": "number",
        "label": "可选择的数据总数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "count",
        "propType": "",
        "example": ""
      },
      {
        "name": "indeterminate",
        "type": "boolean",
        "label": "不确定状态的样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "indeterminate",
        "propType": "",
        "example": ""
      },
      {
        "name": "list",
        "type": "XTransferNode[]",
        "label": "列表数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "list",
        "propType": "",
        "example": ""
      },
      {
        "name": "searchList",
        "type": "XTransferNode[]",
        "label": "搜索数据，用来还原",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "searchList",
        "propType": "",
        "example": ""
      },
      {
        "name": "disabledButton",
        "type": "boolean",
        "label": "按钮禁用",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabledButton",
        "propType": "",
        "example": ""
      },
      {
        "name": "hiddenCheckAll",
        "type": "boolean",
        "label": "隐藏全选复选框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "hiddenCheckAll",
        "propType": "",
        "example": ""
      },
      {
        "name": "listStyle",
        "type": "XStyleMap",
        "label": "列表样式",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "listStyle",
        "propType": "",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XTransferDirection",
        "label": "数据方向",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "direction",
        "propType": "",
        "example": ""
      },
      {
        "name": "footerTpl",
        "type": "TemplateRef<any>",
        "label": "底部自定义模版",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "footerTpl",
        "propType": "",
        "example": ""
      },
      {
        "name": "tableHeadSearchTpl",
        "type": "XTemplate",
        "label": "表格列头搜索自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "tableHeadSearchTpl",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTransferSource"
  },
  "XTransferDirection": {
    "type": "type",
    "label": "数据方向",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTransferDirection",
    "value": "'left' | 'right'"
  },
  "XTransferType": {
    "type": "type",
    "label": "数据类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTransferType",
    "value": "'list' | 'tree' | 'table'"
  },
  "XTreePrefix": {
    "type": "const",
    "label": "Tree",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTreePrefix",
    "selector": "x-tree",
    "decorator": "component",
    "value": "'x-tree'"
  },
  "XTreeProperty": {
    "type": "class",
    "label": "Tree Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XTreeNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "checkbox",
        "type": "XBoolean",
        "label": "显示多选框",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "checkbox",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lazy",
        "type": "XBoolean",
        "label": "开启懒加载节点，data 必须设置成函数类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "lazy",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedId",
        "type": "any",
        "label": "当前激活的节点 Id, 当 multiple 为 true 时，值为数组（默认是 Id 数组，objectArray 为 true，对象数组）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "activatedId",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expanded",
        "type": "any[]",
        "label": "展开的节点",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "expanded",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "checked",
        "type": "any[]",
        "label": "checkbox 选中的节点",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "checked",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedAll",
        "type": "XBoolean",
        "label": "展开所有节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "expandedAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedLevel",
        "type": "XNumber",
        "label": "默认展开的层级",
        "default": "-1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "expandedLevel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeOpen",
        "type": "XBoolean",
        "label": "点击节点就触发展开/收起的操作，请确保节点上没有其它操作（checkbox、自定义的操作按钮）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nodeOpen",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "spacing",
        "type": "XNumber",
        "label": "单位间距，这个与层级的乘积算出节点的左边距，单位 rem",
        "default": "1.5",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1.5)",
          "@XInputNumber()"
        ],
        "attr": "spacing",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelTpl",
        "type": "TemplateRef<void>",
        "label": "标签自定义模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeHeight",
        "type": "XNumber",
        "label": "节点的高度，单位 rem, 默认 0 是自适应高度",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,0)",
          "@XInputNumber()"
        ],
        "attr": "nodeHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "allowManyActivated",
        "type": "XBoolean",
        "label": "是否允许多次点击一个节点触发多次事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "allowManyActivated",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "drag",
        "type": "XBoolean",
        "label": "拖动节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "drag",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedChange",
        "type": "XTreeNode",
        "label": "当前点击选中的节点变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activatedChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "checkboxChange",
        "type": "XTreeNode",
        "label": "使用 checkedbox 选中变化的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "checkboxChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "manual",
        "type": "boolean",
        "label": "如果 data 是函数类型，可以通过此参数控制请求，常用于弹框中的表格，弹出后再请求",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "manual",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "levelCheck",
        "type": "XBoolean",
        "label": "checkbox 状态改变触发层级检查",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "levelCheck",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeNowrap",
        "type": "XBoolean",
        "label": "节点内容不换行显示省略号",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nodeNowrap",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeAlignItems",
        "type": "XAlign",
        "label": "节点垂直对齐方式",
        "default": "'center'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XAlign>(X_CONFIG_NAME,'center')"
        ],
        "attr": "nodeAlignItems",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "actions",
        "type": "XTreeAction[]",
        "label": "树节点操作按钮",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "actions",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "scrollElement",
        "type": "HTMLElement",
        "label": "滚动区域元素",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "scrollElement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScroll",
        "type": "XBoolean",
        "label": "开启虚拟滚动",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "virtualScroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScrollHeight",
        "type": "number",
        "label": "滚动区域高度，开启虚拟滚动的时候生效",
        "default": "400",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,400)",
          "@XInputNumber()"
        ],
        "attr": "virtualScrollHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "heightAdaption",
        "type": "ElementRef<HTMLElement> | HTMLElement",
        "label": "虚拟滚动高度自适应指定元素",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "heightAdaption",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "itemSize",
        "type": "number",
        "label": "itemSize，对应 cdk scroll 中的参数，开启虚拟滚动才生效",
        "default": "34",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,34)",
          "@XInputNumber()"
        ],
        "attr": "itemSize",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "minBufferPx",
        "type": "number",
        "label": "超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数，开启虚拟滚动才生效",
        "default": "100",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "minBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxBufferPx",
        "type": "number",
        "label": "渲染新数据缓冲区的像素，对应 cdk scroll 中的参数，开启虚拟滚动才生效",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "maxBufferPx",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "multiple",
        "type": "XBoolean",
        "label": "多选功能，当前激活的节点可以是多个",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "multiple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "objectArray",
        "type": "XBoolean",
        "label": "当开启多选的时候，activatedId 的值为对象数组",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "objectArray",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "keywordText",
        "type": "string | string[]",
        "label": "关键字高亮，针对下拉树搜索",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "keywordText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "caseSensitive",
        "type": "XBoolean",
        "label": "匹配关键字区分大小写，针对下拉树搜索",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "caseSensitive",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "onlyLeaf",
        "type": "XBoolean",
        "label": "只能选择叶子节点",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "onlyLeaf",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedIcon",
        "type": "TemplateRef<void>",
        "label": "展开收起的图标自定义模版",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "expandedIcon",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showLine",
        "type": "XBoolean",
        "label": "显示连接线",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "showLine",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "manualChange",
        "type": "boolean",
        "label": "参数控制请求改变事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "manualChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeClick",
        "type": "XTreeNode",
        "label": "节点点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "activatedIdChange",
        "type": "any",
        "label": "节点点击事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activatedIdChange",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeDragStarted",
        "type": "XTreeNodeDragEvent",
        "label": "节点开始拖动事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeDragStarted",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeDragEnded",
        "type": "XTreeNodeDragEvent",
        "label": "节点结束拖动事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeDragEnded",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "nodeDragMoved",
        "type": "XTreeNodeDragEvent",
        "label": "节点正在拖动事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "nodeDragMoved",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XTreeProperty",
    "extends": "XProperty"
  },
  "XTreeNode": {
    "type": "interface",
    "label": "Tree 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "activated",
        "type": "boolean",
        "label": "激活的",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "activated",
        "propType": "",
        "example": ""
      },
      {
        "name": "change",
        "type": "Function",
        "label": "检查更新",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "change",
        "propType": "",
        "example": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "label": "checkbox 是否选中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "checked",
        "propType": "",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "label": "禁用checkbox",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "disabled",
        "propType": "",
        "example": ""
      },
      {
        "name": "indeterminate",
        "type": "boolean",
        "label": "checkbox 子节点是否有选中的状态",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "indeterminate",
        "propType": "",
        "example": ""
      },
      {
        "name": "height",
        "type": "number",
        "label": "节点高度，优先级高于 tree 参数，单位 rem",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "height",
        "propType": "",
        "example": ""
      },
      {
        "name": "nowrap",
        "type": "boolean",
        "label": "节点内容不换行显示省略号，优先级高于 tree 参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "nowrap",
        "propType": "",
        "example": ""
      },
      {
        "name": "alignItems",
        "type": "XAlign",
        "label": "节点垂直对齐方式，优先级高于 tree 参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "alignItems",
        "propType": "",
        "example": ""
      },
      {
        "name": "loading",
        "type": "boolean",
        "label": "节点懒加载中",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "loading",
        "propType": "",
        "example": ""
      },
      {
        "name": "showDragIndicator",
        "type": "boolean",
        "label": "显示拖动指示器",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "showDragIndicator",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTreeNode",
    "extends": "XParentIdentityProperty<XTreeNode>"
  },
  "XTreeAction": {
    "type": "interface",
    "label": "Tree 节点操作",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "handler",
        "type": "Function",
        "label": "操作",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "handler",
        "propType": "",
        "example": ""
      },
      {
        "name": "icon",
        "type": "string",
        "label": "图标",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "icon",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTreeAction",
    "extends": "XIdentityProperty"
  },
  "XTreeNodeDragEvent": {
    "type": "interface",
    "label": "Tree 节点拖动事件",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "event",
        "type": "CdkDragStart | CdkDragEnd | CdkDragMove<XTreeNode>",
        "label": "对应 cdk 中的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "event",
        "propType": "",
        "example": ""
      },
      {
        "name": "from",
        "type": "XTreeNode",
        "label": "拖动的节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "from",
        "propType": "",
        "example": ""
      },
      {
        "name": "to",
        "type": "XTreeNode",
        "label": "要拖动到的位置对应的节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "to",
        "propType": "",
        "example": ""
      },
      {
        "name": "position",
        "type": "-1 | 1",
        "label": "对应节点的前面还是后面",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "position",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTreeNodeDragEvent"
  },
  "XTreeNodePrefix": {
    "type": "const",
    "label": "TreeNode",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTreeNodePrefix",
    "selector": "x-tree-node",
    "decorator": "directive",
    "value": "'x-tree-node'"
  },
  "XTreeNodeProperty": {
    "type": "class",
    "label": "TreeNode Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "node",
        "type": "XTreeNode",
        "label": "节点数据",
        "default": "{}",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "node",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "level",
        "type": "XNumber",
        "label": "层级",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "level",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lazy",
        "type": "XBoolean",
        "label": "懒加载子节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "lazy",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeHeight",
        "type": "XNumber",
        "label": "节点的高度，单位 rem",
        "default": "0",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "nodeHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeNowrap",
        "type": "XBoolean",
        "label": "节点内容不换行显示省略号",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "nodeNowrap",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeAlignItems",
        "type": "XAlign",
        "label": "节点垂直对齐方式",
        "default": "'center'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeAlignItems",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "lazyData",
        "type": "XData<XTreeNode[]>",
        "label": "懒加载函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "lazyData",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScroll",
        "type": "XBoolean",
        "label": "标记为虚拟滚动的节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "virtualScroll",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTreeNodeProperty",
    "extends": "XProperty"
  },
  "XTreeFilePrefix": {
    "type": "const",
    "label": "TreeFile",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTreeFilePrefix",
    "selector": "x-tree-file",
    "decorator": "component",
    "value": "'x-tree-file'"
  },
  "XTreeFileProperty": {
    "type": "class",
    "label": "TreeFile Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XTreeFileNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "domain",
        "type": "string",
        "label": "文件绝对路径地址前缀，为空表示取当前运行的地址",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "domain",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "toggle",
        "type": "XBoolean",
        "label": "切换状态",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "toggle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showToggle",
        "type": "XBoolean",
        "label": "显示切换按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showToggle",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showTree",
        "type": "XBoolean",
        "label": "显示树，为 true 的时候隐藏切换按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showTree",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showCrumb",
        "type": "XBoolean",
        "label": "显示面包屑",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "showCrumb",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxHeight",
        "type": "XNumber",
        "label": "最大高度，单位 rem",
        "default": "37.5",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,37.5)",
          "@XInputNumber()"
        ],
        "attr": "maxHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "spacing",
        "type": "XNumber",
        "label": "单位间距，这个与层级的乘积算出节点的左边距，单位 rem",
        "default": "1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME,1)",
          "@XInputNumber()"
        ],
        "attr": "spacing",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activatedId",
        "type": "any",
        "label": "当前激活的节点 Id, 当 multiple 为 true 时，值为数组（默认是 Id 数组，objectArray 为 true，对象数组）",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "activatedId",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expanded",
        "type": "any[]",
        "label": "展开的节点",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "expanded",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedAll",
        "type": "XBoolean",
        "label": "展开所有节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "expandedAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedLevel",
        "type": "XNumber",
        "label": "默认展开的层级",
        "default": "-1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "expandedLevel",
        "propType": "Input",
        "example": ""
      }
    ],
    "name": "XTreeFileProperty",
    "extends": "XTreeProperty"
  },
  "XTreeFileNode": {
    "type": "interface",
    "label": "TreeFile 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "children",
        "type": "XTreeFileNode[]",
        "label": "子节点",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "children",
        "propType": "",
        "example": ""
      },
      {
        "name": "content",
        "type": "string",
        "label": "文件内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "content",
        "propType": "",
        "example": ""
      },
      {
        "name": "type",
        "type": "string",
        "label": "文件类型",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "type",
        "propType": "",
        "example": ""
      },
      {
        "name": "fileType",
        "type": "XTreeFileType",
        "label": "文件分类",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "fileType",
        "propType": "",
        "example": ""
      },
      {
        "name": "url",
        "type": "string",
        "label": "文件地址，配置了地址将从 url 中加载文件内容",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "url",
        "propType": "",
        "example": ""
      },
      {
        "name": "crumbData",
        "type": "XCrumbNode[]",
        "label": "文件的面包屑数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "crumbData",
        "propType": "",
        "example": ""
      },
      {
        "name": "contentLoaded",
        "type": "boolean",
        "label": "文件内容已经加载过",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "contentLoaded",
        "propType": "",
        "example": ""
      },
      {
        "name": "highlightLines",
        "type": "XHighlightLines",
        "label": "行高亮着色",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "highlightLines",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTreeFileNode",
    "extends": "XTreeNode"
  },
  "XTreeFileType": {
    "type": "type",
    "label": "文件分类",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTreeFileType",
    "value": "'code' | 'img'"
  },
  "XTreeFileImgs": {
    "type": "const",
    "label": "支持显示的图片格式",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTreeFileImgs",
    "value": "['webp', 'png', 'jpg', 'gif', 'jpeg', 'ico']"
  },
  "XTreeSelectPrefix": {
    "type": "const",
    "label": "Tree Select",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTreeSelectPrefix",
    "selector": "x-tree-select",
    "decorator": "component",
    "value": "'x-tree-select'"
  },
  "XTreeSelectProperty": {
    "type": "class",
    "label": "Tree Select Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "data",
        "type": "XData<XTreeSelectNode>",
        "label": "节点数据",
        "default": "[]",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XDataConvert()"
        ],
        "attr": "data",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "clearable",
        "type": "XBoolean",
        "label": "清除按钮",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "clearable",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "async",
        "type": "XBoolean",
        "label": "异步加载",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "async",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placement",
        "type": "XPositionTopBottom",
        "label": "展示方位",
        "default": "'bottom'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XPositionTopBottom>(X_CONFIG_NAME,'bottom')"
        ],
        "attr": "placement",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "multiple",
        "type": "XBoolean",
        "label": "多选功能",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "multiple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selectAll",
        "type": "XBoolean",
        "label": "多选添加全选功能",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "selectAll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "selectAllText",
        "type": "string",
        "label": "全选的文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "selectAllText",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "nodeTpl",
        "type": "TemplateRef<any>",
        "label": "节点模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "nodeTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "size",
        "type": "XSize",
        "label": "尺寸",
        "default": "'medium'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XSize>(X_CONFIG_NAME,'medium')"
        ],
        "attr": "size",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "expandedLevel",
        "type": "XNumber",
        "label": "默认展开的层级",
        "default": "-1",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "expandedLevel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "bordered",
        "type": "XBoolean",
        "label": "显示边框",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "bordered",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "portalMaxHeight",
        "type": "string",
        "label": "下拉框的最大高度",
        "default": "'12rem'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME,'12rem')"
        ],
        "attr": "portalMaxHeight",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "search",
        "type": "XBoolean",
        "label": "输入搜索",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "search",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "caseSensitive",
        "type": "XBoolean",
        "label": "匹配区分大小写",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)"
        ],
        "attr": "caseSensitive",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "debounceTime",
        "type": "number",
        "label": "输入延迟执行时间，ms",
        "default": "200",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<number>(X_CONFIG_NAME,200)"
        ],
        "attr": "debounceTime",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxTagCount",
        "type": "XNumber",
        "label": "多选时显示的选中数据个数，其它的在更多中显示，默认全部显示",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()",
          "@XWithConfig<XNumber>(X_CONFIG_NAME)"
        ],
        "attr": "maxTagCount",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxTagContent",
        "type": "XTemplate",
        "label": "多选时显示的个数超过指定个数，显示的文字模版",
        "default": "'更多{{surplus}}个选中'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XTemplate>(X_CONFIG_NAME)"
        ],
        "attr": "maxTagContent",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "virtualScroll",
        "type": "XBoolean",
        "label": "开启虚拟滚动",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME)",
          "@XInputBoolean()"
        ],
        "attr": "virtualScroll",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "showPath",
        "type": "XBoolean",
        "label": "显示的值展示路径 AA > BB > CC",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)",
          "@XInputBoolean()"
        ],
        "attr": "showPath",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "separator",
        "type": "string",
        "label": "路径分隔符",
        "default": "' / '",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<string>(X_CONFIG_NAME)"
        ],
        "attr": "separator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "onlyLeaf",
        "type": "XBoolean",
        "label": "只能选择叶子节点",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,false)"
        ],
        "attr": "onlyLeaf",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "label",
        "type": "string",
        "label": "标签",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "label",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelWidth",
        "type": "string",
        "label": "标签宽度",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelWidth",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "labelAlign",
        "type": "XAlign",
        "label": "标签文字对齐方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "labelAlign",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "justify",
        "type": "XJustify",
        "label": "flex 布局下的子元素水平排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "justify",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "align",
        "type": "XAlign",
        "label": "flex 布局下的子元素垂直排列方式",
        "default": "'start'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "align",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "direction",
        "type": "XDirection",
        "label": "flex 布局下的子元素排列方向",
        "default": "'column'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "direction",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "placeholder",
        "type": "string | string[]",
        "label": "输入提示信息",
        "default": "''",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "placeholder",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "disabled",
        "type": "XBoolean",
        "label": "禁用",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "disabled",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "required",
        "type": "XBoolean",
        "label": "必填",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "required",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "readonly",
        "type": "XBoolean",
        "label": "只读",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "readonly",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTpl",
        "type": "TemplateRef<any>",
        "label": "值模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "valueTplContext",
        "type": "any",
        "label": "值模板参数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "valueTplContext",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "before",
        "type": "XTemplate",
        "label": "前置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "before",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "after",
        "type": "XTemplate",
        "label": "后置标签",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "after",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pattern",
        "type": "any",
        "label": "正则验证规则",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "pattern",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "message",
        "type": "string | string[]",
        "label": "验证不通过提示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "message",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "active",
        "type": "XBoolean",
        "label": "激活状态",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "active",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "pointer",
        "type": "XBoolean",
        "label": "输入框点击样式",
        "default": "false",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "pointer",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "inputValidator",
        "type": "(value: any) => boolean",
        "label": "输入验证函数",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "inputValidator",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "activeChange",
        "type": "XBoolean",
        "label": "激活状态事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "activeChange",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XTreeSelectProperty",
    "extends": "XControlValueAccessor<any>"
  },
  "XTreeSelectNode": {
    "type": "interface",
    "label": "Tree Select 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "path",
        "type": "string",
        "label": "当前节点路径名称",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "path",
        "propType": "",
        "example": ""
      },
      {
        "name": "[property: string]",
        "type": "any",
        "label": "自定义属性",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "[property: string]",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XTreeSelectNode",
    "extends": "XParentIdentityProperty<XTreeSelectNode>"
  },
  "XTreeSelectPortalPrefix": {
    "type": "const",
    "label": "Tree Select Portal",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XTreeSelectPortalPrefix",
    "selector": "x-tree-select-portal",
    "decorator": "component",
    "value": "'x-tree-select-portal'"
  },
  "XUploadPrefix": {
    "type": "const",
    "label": "Upload",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XUploadPrefix",
    "selector": "x-upload",
    "decorator": "component",
    "value": "'x-upload'"
  },
  "XUploadProperty": {
    "type": "class",
    "label": "Upload Property",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "text",
        "type": "XTemplate",
        "label": "显示文字",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "text",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "action",
        "type": "string",
        "label": "请求地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "action",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "accept",
        "type": "string",
        "label": "上传文件类型，与原生的 input file 组件一致",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "accept",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "type",
        "type": "XUploadType",
        "label": "文件显示类型",
        "default": "'list'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "type",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "imgFallback",
        "type": "string",
        "label": "图片类型下面加载失败显示",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "imgFallback",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "imgCut",
        "type": "XBoolean",
        "label": "图片剪裁",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "imgCut",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "multiple",
        "type": "XBoolean",
        "label": "多文件上传",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputBoolean()"
        ],
        "attr": "multiple",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "download",
        "type": "XBoolean",
        "label": "点击下载",
        "default": "true",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XBoolean>(X_CONFIG_NAME,true)",
          "@XInputBoolean()"
        ],
        "attr": "download",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "multipleModel",
        "type": "XUploadMultipleModel",
        "label": "多次上传的模式，cover 覆盖现有 add 继续添加",
        "default": "'cover'",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XWithConfig<XUploadMultipleModel>(X_CONFIG_NAME,'cover')"
        ],
        "attr": "multipleModel",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "filesTpl",
        "type": "XTemplate",
        "label": "文件列表自定义显示模板",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "filesTpl",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "maxLimit",
        "type": "XNumber",
        "label": "限制单次上传文件个数，只有开启多文件上传 multiple 时生效，默认不做限制",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()",
          "@XInputNumber()"
        ],
        "attr": "maxLimit",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "headers",
        "type": "{ [key: string]: any }",
        "label": "设置上传的请求头部",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Input()"
        ],
        "attr": "headers",
        "propType": "Input",
        "example": ""
      },
      {
        "name": "removeClick",
        "type": "{ file: XUploadNode index: number }",
        "label": "删除按钮的事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "removeClick",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "uploadReady",
        "type": "XUploadNode",
        "label": "开始上传事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "uploadReady",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "uploading",
        "type": "XUploadNode",
        "label": "正在上传事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "uploading",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "uploadSuccess",
        "type": "XUploadNode",
        "label": "上传成功事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "uploadSuccess",
        "propType": "Output",
        "example": ""
      },
      {
        "name": "uploadError",
        "type": "XUploadNode",
        "label": "上传失败事件",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [
          "@Output()"
        ],
        "attr": "uploadError",
        "propType": "Output",
        "example": ""
      }
    ],
    "name": "XUploadProperty",
    "extends": "XControlValueAccessor<XUploadNode[]>"
  },
  "XUploadNode": {
    "type": "interface",
    "label": "Upload 数据对象",
    "description": "",
    "example": "",
    "properties": [
      {
        "name": "url",
        "type": "string",
        "label": "地址",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "url",
        "propType": "",
        "example": ""
      },
      {
        "name": "state",
        "type": "XStateType",
        "label": "状态",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "state",
        "propType": "",
        "example": ""
      },
      {
        "name": "percent",
        "type": "XNumber",
        "label": "上传进度",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "percent",
        "propType": "",
        "example": ""
      },
      {
        "name": "body",
        "type": "any",
        "label": "上传返回数据",
        "default": "",
        "withConfig": false,
        "description": "",
        "decorator": [],
        "attr": "body",
        "propType": "",
        "example": ""
      }
    ],
    "name": "XUploadNode",
    "extends": "File"
  },
  "XStateType": {
    "type": "type",
    "label": "文件状态",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XStateType",
    "value": "'ready' | 'uploading' | 'success' | 'error'"
  },
  "XUploadType": {
    "type": "type",
    "label": "文件显示类型",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XUploadType",
    "value": "'list' | 'img'"
  },
  "XUploadMultipleModel": {
    "type": "type",
    "label": "多次上传的模式，cover 覆盖现有 add 继续添加",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XUploadMultipleModel",
    "value": "'cover' | 'add'"
  },
  "XUploadCutType": {
    "type": "type",
    "label": "剪裁的方位",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XUploadCutType",
    "value": "XPosition | XCorner | ''"
  },
  "XUploadPortalPrefix": {
    "type": "const",
    "label": "上传显示窗口",
    "description": "",
    "example": "",
    "properties": [],
    "name": "XUploadPortalPrefix",
    "selector": "x-upload-portal",
    "decorator": "component",
    "value": "'x-upload-portal'"
  }
}